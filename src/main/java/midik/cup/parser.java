
//----------------------------------------------------
// The following code was generated by CUP v0.11b 20160615 (GIT 4ac7450)
//----------------------------------------------------

package midik.cup;

import java_cup.runtime.Symbol;
import java_cup.runtime.XMLElement;

/** CUP v0.11b 20160615 (GIT 4ac7450) generated parser.
  */
@SuppressWarnings({"rawtypes"})
public class parser extends java_cup.runtime.lr_parser {

 public final Class getSymbolContainer() {
    return sym.class;
}

  /** Default constructor. */
  @Deprecated
  public parser() {super();}

  /** Constructor which sets the default scanner. */
  @Deprecated
  public parser(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public parser(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\u010e\000\002\002\004\000\002\163\004\000\002\163" +
    "\003\000\002\163\002\000\002\002\004\000\002\002\003" +
    "\000\002\003\004\000\002\003\003\000\002\004\004\000" +
    "\002\004\003\000\002\005\004\000\002\005\004\000\002" +
    "\005\003\000\002\006\003\000\002\006\003\000\002\007" +
    "\003\000\002\007\003\000\002\020\004\000\002\020\003" +
    "\000\002\020\006\000\002\020\004\000\002\021\005\000" +
    "\002\021\005\000\002\025\003\000\002\025\002\000\002" +
    "\022\004\000\002\022\004\000\002\022\004\000\002\022" +
    "\004\000\002\022\004\000\002\022\004\000\002\023\004" +
    "\000\002\023\003\000\002\024\004\000\002\024\002\000" +
    "\002\026\004\000\002\027\004\000\002\027\004\000\002" +
    "\027\003\000\002\030\003\000\002\031\004\000\002\031" +
    "\006\000\002\032\004\000\002\033\004\000\002\033\003" +
    "\000\002\034\004\000\002\035\003\000\002\035\003\000" +
    "\002\040\003\000\002\040\002\000\002\036\004\000\002" +
    "\036\004\000\002\037\004\000\002\037\002\000\002\037" +
    "\003\000\002\041\004\000\002\042\004\000\002\042\003" +
    "\000\002\043\004\000\002\043\003\000\002\063\005\000" +
    "\002\063\004\000\002\063\005\000\002\063\004\000\002" +
    "\063\004\000\002\063\004\000\002\051\004\000\002\051" +
    "\004\000\002\051\002\000\002\054\005\000\002\054\005" +
    "\000\002\052\003\000\002\052\005\000\002\053\005\000" +
    "\002\053\005\000\002\053\005\000\002\053\005\000\002" +
    "\053\005\000\002\053\005\000\002\053\005\000\002\050" +
    "\003\000\002\050\003\000\002\050\005\000\002\044\004" +
    "\000\002\044\003\000\002\045\004\000\002\045\003\000" +
    "\002\046\004\000\002\046\003\000\002\065\004\000\002" +
    "\065\004\000\002\065\004\000\002\065\004\000\002\065" +
    "\004\000\002\065\004\000\002\065\004\000\002\065\004" +
    "\000\002\065\002\000\002\047\004\000\002\064\003\000" +
    "\002\064\003\000\002\064\003\000\002\064\003\000\002" +
    "\064\003\000\002\064\003\000\002\055\005\000\002\055" +
    "\005\000\002\055\005\000\002\055\005\000\002\055\005" +
    "\000\002\055\003\000\002\056\003\000\002\056\003\000" +
    "\002\056\003\000\002\056\003\000\002\056\003\000\002" +
    "\057\004\000\002\057\002\000\002\060\004\000\002\060" +
    "\003\000\002\061\004\000\002\061\003\000\002\062\003" +
    "\000\002\066\004\000\002\067\004\000\002\067\003\000" +
    "\002\070\004\000\002\070\003\000\002\071\004\000\002" +
    "\071\003\000\002\072\004\000\002\072\003\000\002\073" +
    "\004\000\002\073\003\000\002\074\003\000\002\075\004" +
    "\000\002\076\004\000\002\076\003\000\002\077\004\000" +
    "\002\077\003\000\002\100\004\000\002\101\004\000\002" +
    "\101\003\000\002\102\004\000\002\102\003\000\002\103" +
    "\004\000\002\103\003\000\002\104\004\000\002\104\003" +
    "\000\002\105\003\000\002\105\003\000\002\106\004\000" +
    "\002\107\004\000\002\107\003\000\002\110\004\000\002" +
    "\110\003\000\002\111\004\000\002\111\003\000\002\112" +
    "\004\000\002\112\003\000\002\113\004\000\002\113\003" +
    "\000\002\114\003\000\002\115\010\000\002\117\004\000" +
    "\002\117\004\000\002\117\005\000\002\116\005\000\002" +
    "\116\005\000\002\116\005\000\002\116\003\000\002\116" +
    "\003\000\002\120\003\000\002\120\003\000\002\120\003" +
    "\000\002\121\004\000\002\122\004\000\002\122\003\000" +
    "\002\123\004\000\002\123\003\000\002\124\004\000\002" +
    "\124\003\000\002\125\004\000\002\125\003\000\002\126" +
    "\003\000\002\126\003\000\002\127\005\000\002\127\004" +
    "\000\002\127\003\000\002\130\004\000\002\131\003\000" +
    "\002\131\003\000\002\132\004\000\002\132\003\000\002" +
    "\133\004\000\002\133\003\000\002\134\004\000\002\134" +
    "\002\000\002\135\003\000\002\135\003\000\002\136\004" +
    "\000\002\137\004\000\002\137\003\000\002\154\004\000" +
    "\002\154\003\000\002\155\004\000\002\156\004\000\002" +
    "\156\003\000\002\157\004\000\002\157\003\000\002\160" +
    "\004\000\002\160\003\000\002\160\003\000\002\010\004" +
    "\000\002\010\004\000\002\010\004\000\002\010\003\000" +
    "\002\161\003\000\002\161\004\000\002\011\004\000\002" +
    "\011\003\000\002\012\004\000\002\012\004\000\002\012" +
    "\004\000\002\012\004\000\002\012\004\000\002\012\004" +
    "\000\002\012\005\000\002\013\004\000\002\013\003\000" +
    "\002\162\003\000\002\162\003\000\002\014\003\000\002" +
    "\014\005\000\002\014\011\000\002\014\003\000\002\017" +
    "\004\000\002\017\003\000\002\016\005\000\002\016\005" +
    "\000\002\016\005\000\002\016\005\000\002\016\005\000" +
    "\002\016\003\000\002\016\003\000\002\015\003\000\002" +
    "\015\003\000\002\015\003\000\002\015\003\000\002\015" +
    "\003\000\002\015\003\000\002\015\003\000\002\140\004" +
    "\000\002\141\004\000\002\141\003\000\002\142\004\000" +
    "\002\143\004\000\002\143\003\000\002\144\004\000\002" +
    "\144\003\000\002\145\003\000\002\146\004\000\002\147" +
    "\004\000\002\147\003\000\002\150\004\000\002\151\004" +
    "\000\002\151\003\000\002\152\004\000\002\152\003\000" +
    "\002\153\003" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\u01b0\000\014\002\ufffe\003\005\004\004\005\013\010" +
    "\011\001\002\000\006\003\u01a5\056\u01a3\001\002\000\014" +
    "\002\ufffc\003\ufffc\004\ufffc\005\ufffc\010\ufffc\001\002\000" +
    "\014\002\ufffe\003\005\004\004\005\013\010\011\001\002" +
    "\000\004\002\u01a1\001\002\000\004\002\uff35\001\002\000" +
    "\006\003\016\056\015\001\002\000\004\002\uffff\001\002" +
    "\000\004\010\011\001\002\000\004\002\uff36\001\002\000" +
    "\006\003\020\032\022\001\002\000\004\002\uff32\001\002" +
    "\000\004\002\uff34\001\002\000\004\002\uff30\001\002\000" +
    "\004\002\uff33\001\002\000\034\003\034\005\026\006\035" +
    "\007\032\011\023\012\027\013\030\014\044\015\024\024" +
    "\033\033\036\056\025\071\040\001\002\000\006\003\046" +
    "\056\045\001\002\000\006\003\046\056\045\001\002\000" +
    "\010\003\046\034\u0191\056\045\001\002\000\022\011\023" +
    "\012\027\013\030\014\044\015\024\024\033\056\025\071" +
    "\040\001\002\000\006\003\046\056\045\001\002\000\006" +
    "\003\046\056\045\001\002\000\034\003\uff29\005\uff29\006" +
    "\uff29\007\uff29\011\uff29\012\uff29\013\uff29\014\uff29\015\uff29" +
    "\024\uff29\033\uff29\056\uff29\071\uff29\001\002\000\022\011" +
    "\023\012\027\013\030\014\044\015\024\024\033\056\025" +
    "\071\040\001\002\000\020\011\023\012\027\013\030\014" +
    "\044\015\024\056\260\071\040\001\002\000\004\002\uff2d" +
    "\001\002\000\022\011\023\012\027\013\030\014\044\015" +
    "\024\024\033\056\025\071\040\001\002\000\004\002\uff2e" +
    "\001\002\000\004\002\uff31\001\002\000\004\056\u0188\001" +
    "\002\000\034\003\uff25\005\uff25\006\uff25\007\uff25\011\uff25" +
    "\012\uff25\013\uff25\014\uff25\015\uff25\024\uff25\033\uff25\056" +
    "\uff25\071\uff25\001\002\000\034\003\uff28\005\uff28\006\uff28" +
    "\007\uff28\011\uff28\012\uff28\013\uff28\014\uff28\015\uff28\024" +
    "\uff28\033\uff28\056\uff28\071\uff28\001\002\000\034\003\034" +
    "\005\026\006\035\007\032\011\023\012\027\013\030\014" +
    "\044\015\024\024\033\033\036\056\025\071\040\001\002" +
    "\000\006\003\046\056\045\001\002\000\014\003\055\027" +
    "\053\031\050\034\060\045\056\001\002\000\060\003\uff1c" +
    "\005\uff1c\006\uff1c\007\uff1c\011\uff1c\012\uff1c\013\uff1c\014" +
    "\uff1c\015\uff1c\016\uff1c\020\uff1c\021\uff1c\022\uff1c\023\uff1c" +
    "\024\uff1c\025\uff1c\026\uff1c\033\uff1c\056\uff1c\066\uff1c\067" +
    "\uff1c\071\uff1c\073\uff1c\001\002\000\060\003\uff20\005\uff20" +
    "\006\uff20\007\uff20\011\uff20\012\uff20\013\uff20\014\uff20\015" +
    "\uff20\016\uff20\020\uff20\021\uff20\022\uff20\023\uff20\024\uff20" +
    "\025\uff20\026\uff20\033\uff20\056\uff20\066\uff20\067\uff20\071" +
    "\uff20\073\uff20\001\002\000\006\003\046\056\045\001\002" +
    "\000\060\003\uff19\005\uff19\006\uff19\007\uff19\011\uff19\012" +
    "\uff19\013\uff19\014\uff19\015\uff19\016\uff19\020\uff19\021\uff19" +
    "\022\uff19\023\uff19\024\uff19\025\uff19\026\uff19\033\uff19\056" +
    "\uff19\066\uff19\067\uff19\071\uff19\073\uff19\001\002\000\060" +
    "\003\uff1a\005\uff1a\006\uff1a\007\uff1a\011\uff1a\012\uff1a\013" +
    "\uff1a\014\uff1a\015\uff1a\016\uff1a\020\uff1a\021\uff1a\022\uff1a" +
    "\023\uff1a\024\uff1a\025\uff1a\026\uff1a\033\uff1a\056\uff1a\066" +
    "\uff1a\067\uff1a\071\uff1a\073\uff1a\001\002\000\060\003\uff14" +
    "\005\uff14\006\uff14\007\uff14\011\uff14\012\uff14\013\uff14\014" +
    "\uff14\015\uff14\016\uff14\020\uff14\021\uff14\022\uff14\023\uff14" +
    "\024\uff14\025\uff14\026\uff14\033\uff14\056\uff14\066\uff14\067" +
    "\uff14\071\uff14\073\uff14\001\002\000\060\003\uff1d\005\uff1d" +
    "\006\uff1d\007\uff1d\011\uff1d\012\uff1d\013\uff1d\014\uff1d\015" +
    "\uff1d\016\uff1d\020\uff1d\021\uff1d\022\uff1d\023\uff1d\024\uff1d" +
    "\025\uff1d\026\uff1d\033\uff1d\056\uff1d\066\uff1d\067\uff1d\071" +
    "\uff1d\073\uff1d\001\002\000\060\003\uff16\005\uff16\006\uff16" +
    "\007\uff16\011\uff16\012\uff16\013\uff16\014\uff16\015\uff16\016" +
    "\uff16\020\uff16\021\uff16\022\uff16\023\uff16\024\uff16\025\uff16" +
    "\026\uff16\033\uff16\056\uff16\066\uff16\067\uff16\071\uff16\073" +
    "\uff16\001\002\000\026\003\221\034\222\057\212\060\211" +
    "\061\210\062\214\063\217\064\223\065\216\072\u017e\001" +
    "\002\000\060\003\uff1b\005\uff1b\006\uff1b\007\uff1b\011\uff1b" +
    "\012\uff1b\013\uff1b\014\uff1b\015\uff1b\016\uff1b\020\uff1b\021" +
    "\uff1b\022\uff1b\023\uff1b\024\uff1b\025\uff1b\026\uff1b\033\uff1b" +
    "\056\uff1b\066\uff1b\067\uff1b\071\uff1b\073\uff1b\001\002\000" +
    "\022\003\071\011\061\012\062\013\065\014\066\015\072" +
    "\035\uffe9\056\067\001\002\000\006\003\075\056\073\001" +
    "\002\000\006\003\075\056\073\001\002\000\060\003\uff05" +
    "\005\uff05\006\uff05\007\uff05\011\uff05\012\uff05\013\uff05\014" +
    "\uff05\015\uff05\016\uff05\020\uff05\021\uff05\022\uff05\023\uff05" +
    "\024\uff05\025\uff05\026\uff05\033\uff05\056\uff05\066\uff05\067" +
    "\uff05\071\uff05\073\uff05\001\002\000\004\035\104\001\002" +
    "\000\006\003\075\056\073\001\002\000\006\003\075\056" +
    "\073\001\002\000\006\003\075\056\073\001\002\000\004" +
    "\035\uffea\001\002\000\060\003\uff03\005\uff03\006\uff03\007" +
    "\uff03\011\uff03\012\uff03\013\uff03\014\uff03\015\uff03\016\uff03" +
    "\020\uff03\021\uff03\022\uff03\023\uff03\024\uff03\025\uff03\026" +
    "\uff03\033\uff03\056\uff03\066\uff03\067\uff03\071\uff03\073\uff03" +
    "\001\002\000\006\003\075\056\073\001\002\000\006\031" +
    "\076\035\uffdf\001\002\000\004\035\uffe5\001\002\000\004" +
    "\035\uffe1\001\002\000\016\011\061\012\062\013\065\014" +
    "\066\015\072\056\067\001\002\000\004\035\uffe2\001\002" +
    "\000\004\035\uffe0\001\002\000\004\035\uffe3\001\002\000" +
    "\004\035\uffe4\001\002\000\004\035\uffe6\001\002\000\006" +
    "\003\106\032\110\001\002\000\060\003\uff04\005\uff04\006" +
    "\uff04\007\uff04\011\uff04\012\uff04\013\uff04\014\uff04\015\uff04" +
    "\016\uff04\020\uff04\021\uff04\022\uff04\023\uff04\024\uff04\025" +
    "\uff04\026\uff04\033\uff04\056\uff04\066\uff04\067\uff04\071\uff04" +
    "\073\uff04\001\002\000\060\003\uff00\005\uff00\006\uff00\007" +
    "\uff00\011\uff00\012\uff00\013\uff00\014\uff00\015\uff00\016\uff00" +
    "\020\uff00\021\uff00\022\uff00\023\uff00\024\uff00\025\uff00\026" +
    "\uff00\033\uff00\056\uff00\066\uff00\067\uff00\071\uff00\073\uff00" +
    "\001\002\000\060\003\uff02\005\uff02\006\uff02\007\uff02\011" +
    "\uff02\012\uff02\013\uff02\014\uff02\015\uff02\016\uff02\020\uff02" +
    "\021\uff02\022\uff02\023\uff02\024\uff02\025\uff02\026\uff02\033" +
    "\uff02\056\uff02\066\uff02\067\uff02\071\uff02\073\uff02\001\002" +
    "\000\044\003\130\011\023\012\027\013\030\014\044\015" +
    "\024\016\117\020\133\021\112\022\124\023\116\024\127" +
    "\026\115\033\uffa0\056\121\071\040\073\122\001\002\000" +
    "\050\011\023\012\027\013\030\014\044\015\024\016\117" +
    "\020\133\021\112\022\124\023\116\024\127\025\uffa0\026" +
    "\115\033\uffa0\056\121\066\uffa0\067\uffa0\071\040\073\122" +
    "\001\002\000\006\003\u016a\034\u016c\001\002\000\050\011" +
    "\023\012\027\013\030\014\044\015\024\016\117\020\133" +
    "\021\112\022\124\023\116\024\127\025\uffa0\026\115\033" +
    "\uffa0\056\121\066\uffa0\067\uffa0\071\040\073\122\001\002" +
    "\000\050\011\023\012\027\013\030\014\044\015\024\016" +
    "\117\020\133\021\112\022\124\023\116\024\127\025\uffa0" +
    "\026\115\033\uffa0\056\121\066\uffa0\067\uffa0\071\040\073" +
    "\122\001\002\000\024\003\u0164\056\u0163\057\212\060\211" +
    "\061\210\062\214\063\217\064\223\065\216\001\002\000" +
    "\006\003\u0139\034\u013b\001\002\000\006\003\u011e\034\u011f" +
    "\001\002\000\050\011\023\012\027\013\030\014\044\015" +
    "\024\016\117\020\133\021\112\022\124\023\116\024\127" +
    "\025\uffa0\026\115\033\uffa0\056\121\066\uffa0\067\uffa0\071" +
    "\040\073\122\001\002\000\012\003\046\034\u010b\045\206" +
    "\056\045\001\002\000\004\030\u0108\001\002\000\050\011" +
    "\023\012\027\013\030\014\044\015\024\016\117\020\133" +
    "\021\112\022\124\023\116\024\127\025\uffa0\026\115\033" +
    "\uffa0\056\121\066\uffa0\067\uffa0\071\040\073\122\001\002" +
    "\000\006\003\263\032\265\001\002\000\060\003\uff01\005" +
    "\uff01\006\uff01\007\uff01\011\uff01\012\uff01\013\uff01\014\uff01" +
    "\015\uff01\016\uff01\020\uff01\021\uff01\022\uff01\023\uff01\024" +
    "\uff01\025\uff01\026\uff01\033\uff01\056\uff01\066\uff01\067\uff01" +
    "\071\uff01\073\uff01\001\002\000\050\011\023\012\027\013" +
    "\030\014\044\015\024\016\117\020\133\021\112\022\124" +
    "\023\116\024\127\025\uffa0\026\115\033\uffa0\056\121\066" +
    "\uffa0\067\uffa0\071\040\073\122\001\002\000\020\011\023" +
    "\012\027\013\030\014\044\015\024\056\260\071\040\001" +
    "\002\000\060\003\ufefe\005\ufefe\006\ufefe\007\ufefe\011\ufefe" +
    "\012\ufefe\013\ufefe\014\ufefe\015\ufefe\016\ufefe\020\ufefe\021" +
    "\ufefe\022\ufefe\023\ufefe\024\ufefe\025\ufefe\026\ufefe\033\ufefe" +
    "\056\ufefe\066\ufefe\067\ufefe\071\ufefe\073\ufefe\001\002\000" +
    "\004\033\257\001\002\000\050\011\023\012\027\013\030" +
    "\014\044\015\024\016\117\020\133\021\112\022\124\023" +
    "\116\024\127\025\uffa0\026\115\033\uffa0\056\121\066\uffa0" +
    "\067\uffa0\071\040\073\122\001\002\000\006\003\140\034" +
    "\141\001\002\000\050\011\uffef\012\uffef\013\uffef\014\uffef" +
    "\015\uffef\016\uffef\020\uffef\021\uffef\022\uffef\023\uffef\024" +
    "\uffef\025\uffef\026\uffef\033\uffef\056\uffef\066\uffef\067\uffef" +
    "\071\uffef\073\uffef\001\002\000\050\011\023\012\027\013" +
    "\030\014\044\015\024\016\117\020\133\021\112\022\124" +
    "\023\116\024\127\025\uffa0\026\115\033\uffa0\056\121\066" +
    "\uffa0\067\uffa0\071\040\073\122\001\002\000\012\025\uffa4" +
    "\033\uffa4\066\uffa4\067\uffa4\001\002\000\050\011\uff6a\012" +
    "\uff6a\013\uff6a\014\uff6a\015\uff6a\016\uff6a\020\uff6a\021\uff6a" +
    "\022\uff6a\023\uff6a\024\uff6a\025\uff6a\026\uff6a\033\uff6a\056" +
    "\uff6a\066\uff6a\067\uff6a\071\uff6a\073\uff6a\001\002\000\050" +
    "\011\uff68\012\uff68\013\uff68\014\uff68\015\uff68\016\uff68\020" +
    "\uff68\021\uff68\022\uff68\023\uff68\024\uff68\025\uff68\026\uff68" +
    "\033\uff68\056\uff68\066\uff68\067\uff68\071\uff68\073\uff68\001" +
    "\002\000\026\003\145\011\023\012\027\013\030\014\044" +
    "\015\024\024\127\056\144\071\040\073\146\001\002\000" +
    "\006\003\243\035\244\001\002\000\050\011\uff69\012\uff69" +
    "\013\uff69\014\uff69\015\uff69\016\uff69\020\uff69\021\uff69\022" +
    "\uff69\023\uff69\024\uff69\025\uff69\026\uff69\033\uff69\056\uff69" +
    "\066\uff69\067\uff69\071\uff69\073\uff69\001\002\000\010\003" +
    "\046\045\206\056\045\001\002\000\050\011\uff66\012\uff66" +
    "\013\uff66\014\uff66\015\uff66\016\uff66\020\uff66\021\uff66\022" +
    "\uff66\023\uff66\024\uff66\025\uff66\026\uff66\033\uff66\056\uff66" +
    "\066\uff66\067\uff66\071\uff66\073\uff66\001\002\000\004\030" +
    "\204\001\002\000\004\056\150\001\002\000\016\042\154" +
    "\043\157\044\156\046\152\047\153\050\155\001\002\000" +
    "\014\003\161\034\163\056\160\057\166\060\165\001\002" +
    "\000\022\003\uff9c\034\uff9c\056\uff9c\057\uff9c\060\uff9c\061" +
    "\uff9c\064\uff9c\065\uff9c\001\002\000\022\003\uff9a\034\uff9a" +
    "\056\uff9a\057\uff9a\060\uff9a\061\uff9a\064\uff9a\065\uff9a\001" +
    "\002\000\022\003\uff99\034\uff99\056\uff99\057\uff99\060\uff99" +
    "\061\uff99\064\uff99\065\uff99\001\002\000\022\003\uff9e\034" +
    "\uff9e\056\uff9e\057\uff9e\060\uff9e\061\uff9e\064\uff9e\065\uff9e" +
    "\001\002\000\022\003\uff9b\034\uff9b\056\uff9b\057\uff9b\060" +
    "\uff9b\061\uff9b\064\uff9b\065\uff9b\001\002\000\022\003\uff9d" +
    "\034\uff9d\056\uff9d\057\uff9d\060\uff9d\061\uff9d\064\uff9d\065" +
    "\uff9d\001\002\000\014\003\uff55\027\uff55\035\uff55\036\uff55" +
    "\037\uff55\001\002\000\014\003\uff56\027\uff56\035\uff56\036" +
    "\uff56\037\uff56\001\002\000\014\003\uff57\027\uff57\035\uff57" +
    "\036\uff57\037\uff57\001\002\000\014\003\161\034\163\056" +
    "\160\057\166\060\165\001\002\000\010\027\171\036\167" +
    "\037\170\001\002\000\014\003\uff53\027\uff53\035\uff53\036" +
    "\uff53\037\uff53\001\002\000\014\003\uff54\027\uff54\035\uff54" +
    "\036\uff54\037\uff54\001\002\000\014\003\161\034\163\056" +
    "\160\057\166\060\165\001\002\000\014\003\161\034\163" +
    "\056\160\057\166\060\165\001\002\000\004\056\172\001" +
    "\002\000\010\045\175\054\176\055\174\001\002\000\006" +
    "\003\uff5e\035\uff5e\001\002\000\006\003\uff5c\035\uff5c\001" +
    "\002\000\014\003\161\034\163\056\160\057\166\060\165" +
    "\001\002\000\006\003\uff5d\035\uff5d\001\002\000\012\003" +
    "\uff5b\035\uff5b\036\167\037\170\001\002\000\014\003\uff59" +
    "\027\uff59\035\uff59\036\uff59\037\uff59\001\002\000\014\003" +
    "\uff5a\027\uff5a\035\uff5a\036\uff5a\037\uff5a\001\002\000\010" +
    "\035\203\036\167\037\170\001\002\000\014\003\uff58\027" +
    "\uff58\035\uff58\036\uff58\037\uff58\001\002\000\004\056\205" +
    "\001\002\000\004\045\206\001\002\000\026\003\221\034" +
    "\222\056\220\057\212\060\211\061\210\062\214\063\217" +
    "\064\223\065\216\001\002\000\050\011\uffee\012\uffee\013" +
    "\uffee\014\uffee\015\uffee\016\uffee\020\uffee\021\uffee\022\uffee" +
    "\023\uffee\024\uffee\025\uffee\026\uffee\033\uffee\056\uffee\066" +
    "\uffee\067\uffee\071\uffee\073\uffee\001\002\000\024\003\uff0c" +
    "\027\uff0c\031\uff0c\035\uff0c\036\uff0c\037\uff0c\040\uff0c\041" +
    "\uff0c\070\uff0c\001\002\000\024\003\uff06\027\uff06\031\uff06" +
    "\035\uff06\036\uff06\037\uff06\040\uff06\041\uff06\070\uff06\001" +
    "\002\000\024\003\uff07\027\uff07\031\uff07\035\uff07\036\uff07" +
    "\037\uff07\040\uff07\041\uff07\070\uff07\001\002\000\014\027" +
    "\237\036\225\037\227\040\231\041\230\001\002\000\024" +
    "\003\uff0b\027\uff0b\031\uff0b\035\uff0b\036\uff0b\037\uff0b\040" +
    "\uff0b\041\uff0b\070\uff0b\001\002\000\022\003\uff0e\027\uff0e" +
    "\031\uff0e\035\uff0e\036\uff0e\037\uff0e\040\uff0e\041\uff0e\001" +
    "\002\000\024\003\uff08\027\uff08\031\uff08\035\uff08\036\uff08" +
    "\037\uff08\040\uff08\041\uff08\070\uff08\001\002\000\024\003" +
    "\uff0a\027\uff0a\031\uff0a\035\uff0a\036\uff0a\037\uff0a\040\uff0a" +
    "\041\uff0a\070\uff0a\001\002\000\004\027\236\001\002\000" +
    "\022\003\uff0d\027\uff0d\031\uff0d\035\uff0d\036\uff0d\037\uff0d" +
    "\040\uff0d\041\uff0d\001\002\000\024\003\221\034\222\057" +
    "\212\060\211\061\210\062\214\063\217\064\223\065\216" +
    "\001\002\000\024\003\uff09\027\uff09\031\uff09\035\uff09\036" +
    "\uff09\037\uff09\040\uff09\041\uff09\070\uff09\001\002\000\014" +
    "\035\226\036\225\037\227\040\231\041\230\001\002\000" +
    "\024\003\221\034\222\057\212\060\211\061\210\062\214" +
    "\063\217\064\223\065\216\001\002\000\022\003\uff0f\027" +
    "\uff0f\031\uff0f\035\uff0f\036\uff0f\037\uff0f\040\uff0f\041\uff0f" +
    "\001\002\000\024\003\221\034\222\057\212\060\211\061" +
    "\210\062\214\063\217\064\223\065\216\001\002\000\024" +
    "\003\221\034\222\057\212\060\211\061\210\062\214\063" +
    "\217\064\223\065\216\001\002\000\024\003\221\034\222" +
    "\057\212\060\211\061\210\062\214\063\217\064\223\065" +
    "\216\001\002\000\022\003\uff11\027\uff11\031\uff11\035\uff11" +
    "\036\uff11\037\uff11\040\uff11\041\uff11\001\002\000\022\003" +
    "\uff10\027\uff10\031\uff10\035\uff10\036\uff10\037\uff10\040\uff10" +
    "\041\uff10\001\002\000\022\003\uff12\027\uff12\031\uff12\035" +
    "\uff12\036\uff12\037\uff12\040\231\041\230\001\002\000\022" +
    "\003\uff13\027\uff13\031\uff13\035\uff13\036\uff13\037\uff13\040" +
    "\231\041\230\001\002\000\050\011\uffeb\012\uffeb\013\uffeb" +
    "\014\uffeb\015\uffeb\016\uffeb\020\uffeb\021\uffeb\022\uffeb\023" +
    "\uffeb\024\uffeb\025\uffeb\026\uffeb\033\uffeb\056\uffeb\066\uffeb" +
    "\067\uffeb\071\uffeb\073\uffeb\001\002\000\050\011\uffec\012" +
    "\uffec\013\uffec\014\uffec\015\uffec\016\uffec\020\uffec\021\uffec" +
    "\022\uffec\023\uffec\024\uffec\025\uffec\026\uffec\033\uffec\056" +
    "\uffec\066\uffec\067\uffec\071\uffec\073\uffec\001\002\000\050" +
    "\011\uffed\012\uffed\013\uffed\014\uffed\015\uffed\016\uffed\020" +
    "\uffed\021\uffed\022\uffed\023\uffed\024\uffed\025\uffed\026\uffed" +
    "\033\uffed\056\uffed\066\uffed\067\uffed\071\uffed\073\uffed\001" +
    "\002\000\060\003\uff1f\005\uff1f\006\uff1f\007\uff1f\011\uff1f" +
    "\012\uff1f\013\uff1f\014\uff1f\015\uff1f\016\uff1f\020\uff1f\021" +
    "\uff1f\022\uff1f\023\uff1f\024\uff1f\025\uff1f\026\uff1f\033\uff1f" +
    "\056\uff1f\066\uff1f\067\uff1f\071\uff1f\073\uff1f\001\002\000" +
    "\050\011\uff67\012\uff67\013\uff67\014\uff67\015\uff67\016\uff67" +
    "\020\uff67\021\uff67\022\uff67\023\uff67\024\uff67\025\uff67\026" +
    "\uff67\033\uff67\056\uff67\066\uff67\067\uff67\071\uff67\073\uff67" +
    "\001\002\000\050\011\uff64\012\uff64\013\uff64\014\uff64\015" +
    "\uff64\016\uff64\020\uff64\021\uff64\022\uff64\023\uff64\024\uff64" +
    "\025\uff64\026\uff64\033\uff64\056\uff64\066\uff64\067\uff64\071" +
    "\uff64\073\uff64\001\002\000\006\003\245\032\246\001\002" +
    "\000\050\011\uff62\012\uff62\013\uff62\014\uff62\015\uff62\016" +
    "\uff62\020\uff62\021\uff62\022\uff62\023\uff62\024\uff62\025\uff62" +
    "\026\uff62\033\uff62\056\uff62\066\uff62\067\uff62\071\uff62\073" +
    "\uff62\001\002\000\044\003\251\011\023\012\027\013\030" +
    "\014\044\015\024\016\117\020\133\021\112\022\124\023" +
    "\116\024\127\026\115\033\uffa0\056\121\071\040\073\122" +
    "\001\002\000\050\011\uff65\012\uff65\013\uff65\014\uff65\015" +
    "\uff65\016\uff65\020\uff65\021\uff65\022\uff65\023\uff65\024\uff65" +
    "\025\uff65\026\uff65\033\uff65\056\uff65\066\uff65\067\uff65\071" +
    "\uff65\073\uff65\001\002\000\050\011\uff63\012\uff63\013\uff63" +
    "\014\uff63\015\uff63\016\uff63\020\uff63\021\uff63\022\uff63\023" +
    "\uff63\024\uff63\025\uff63\026\uff63\033\uff63\056\uff63\066\uff63" +
    "\067\uff63\071\uff63\073\uff63\001\002\000\050\011\uff60\012" +
    "\uff60\013\uff60\014\uff60\015\uff60\016\uff60\020\uff60\021\uff60" +
    "\022\uff60\023\uff60\024\uff60\025\uff60\026\uff60\033\uff60\056" +
    "\uff60\066\uff60\067\uff60\071\uff60\073\uff60\001\002\000\004" +
    "\033\254\001\002\000\050\011\uff61\012\uff61\013\uff61\014" +
    "\uff61\015\uff61\016\uff61\020\uff61\021\uff61\022\uff61\023\uff61" +
    "\024\uff61\025\uff61\026\uff61\033\uff61\056\uff61\066\uff61\067" +
    "\uff61\071\uff61\073\uff61\001\002\000\050\011\uff5f\012\uff5f" +
    "\013\uff5f\014\uff5f\015\uff5f\016\uff5f\020\uff5f\021\uff5f\022" +
    "\uff5f\023\uff5f\024\uff5f\025\uff5f\026\uff5f\033\uff5f\056\uff5f" +
    "\066\uff5f\067\uff5f\071\uff5f\073\uff5f\001\002\000\012\025" +
    "\uffa7\033\uffa7\066\uffa7\067\uffa7\001\002\000\060\003\ufeff" +
    "\005\ufeff\006\ufeff\007\ufeff\011\ufeff\012\ufeff\013\ufeff\014" +
    "\ufeff\015\ufeff\016\ufeff\020\ufeff\021\ufeff\022\ufeff\023\ufeff" +
    "\024\ufeff\025\ufeff\026\ufeff\033\ufeff\056\ufeff\066\ufeff\067" +
    "\ufeff\071\ufeff\073\ufeff\001\002\000\060\003\ufefd\005\ufefd" +
    "\006\ufefd\007\ufefd\011\ufefd\012\ufefd\013\ufefd\014\ufefd\015" +
    "\ufefd\016\ufefd\020\ufefd\021\ufefd\022\ufefd\023\ufefd\024\ufefd" +
    "\025\ufefd\026\ufefd\033\ufefd\056\ufefd\066\ufefd\067\ufefd\071" +
    "\ufefd\073\ufefd\001\002\000\006\003\046\056\045\001\002" +
    "\000\050\011\ufff0\012\ufff0\013\ufff0\014\ufff0\015\ufff0\016" +
    "\ufff0\020\ufff0\021\ufff0\022\ufff0\023\ufff0\024\ufff0\025\ufff0" +
    "\026\ufff0\033\ufff0\056\ufff0\066\ufff0\067\ufff0\071\ufff0\073" +
    "\ufff0\001\002\000\012\025\uffa5\033\uffa5\066\uffa5\067\uffa5" +
    "\001\002\000\050\011\uff78\012\uff78\013\uff78\014\uff78\015" +
    "\uff78\016\uff78\020\uff78\021\uff78\022\uff78\023\uff78\024\uff78" +
    "\025\uff78\026\uff78\033\uff78\056\uff78\066\uff78\067\uff78\071" +
    "\uff78\073\uff78\001\002\000\050\011\uff7a\012\uff7a\013\uff7a" +
    "\014\uff7a\015\uff7a\016\uff7a\020\uff7a\021\uff7a\022\uff7a\023" +
    "\uff7a\024\uff7a\025\uff7a\026\uff7a\033\uff7a\056\uff7a\066\uff7a" +
    "\067\uff7a\071\uff7a\073\uff7a\001\002\000\044\003\267\011" +
    "\023\012\027\013\030\014\044\015\024\016\117\020\133" +
    "\021\112\022\124\023\116\024\127\026\115\033\uffa0\056" +
    "\121\071\040\073\122\001\002\000\050\011\uff79\012\uff79" +
    "\013\uff79\014\uff79\015\uff79\016\uff79\020\uff79\021\uff79\022" +
    "\uff79\023\uff79\024\uff79\025\uff79\026\uff79\033\uff79\056\uff79" +
    "\066\uff79\067\uff79\071\uff79\073\uff79\001\002\000\050\011" +
    "\uff76\012\uff76\013\uff76\014\uff76\015\uff76\016\uff76\020\uff76" +
    "\021\uff76\022\uff76\023\uff76\024\uff76\025\uff76\026\uff76\033" +
    "\uff76\056\uff76\066\uff76\067\uff76\071\uff76\073\uff76\001\002" +
    "\000\004\033\272\001\002\000\050\011\uff77\012\uff77\013" +
    "\uff77\014\uff77\015\uff77\016\uff77\020\uff77\021\uff77\022\uff77" +
    "\023\uff77\024\uff77\025\uff77\026\uff77\033\uff77\056\uff77\066" +
    "\uff77\067\uff77\071\uff77\073\uff77\001\002\000\006\003\273" +
    "\021\275\001\002\000\050\011\uff73\012\uff73\013\uff73\014" +
    "\uff73\015\uff73\016\uff73\020\uff73\021\uff73\022\uff73\023\uff73" +
    "\024\uff73\025\uff73\026\uff73\033\uff73\056\uff73\066\uff73\067" +
    "\uff73\071\uff73\073\uff73\001\002\000\050\011\uff75\012\uff75" +
    "\013\uff75\014\uff75\015\uff75\016\uff75\020\uff75\021\uff75\022" +
    "\uff75\023\uff75\024\uff75\025\uff75\026\uff75\033\uff75\056\uff75" +
    "\066\uff75\067\uff75\071\uff75\073\uff75\001\002\000\006\003" +
    "\276\034\277\001\002\000\050\011\uff71\012\uff71\013\uff71" +
    "\014\uff71\015\uff71\016\uff71\020\uff71\021\uff71\022\uff71\023" +
    "\uff71\024\uff71\025\uff71\026\uff71\033\uff71\056\uff71\066\uff71" +
    "\067\uff71\071\uff71\073\uff71\001\002\000\030\003\317\034" +
    "\320\053\305\056\307\057\321\060\303\061\301\062\306" +
    "\063\316\064\313\065\322\001\002\000\050\011\uff74\012" +
    "\uff74\013\uff74\014\uff74\015\uff74\016\uff74\020\uff74\021\uff74" +
    "\022\uff74\023\uff74\024\uff74\025\uff74\026\uff74\033\uff74\056" +
    "\uff74\066\uff74\067\uff74\071\uff74\073\uff74\001\002\000\036" +
    "\003\uff92\035\uff92\036\uff92\037\uff92\040\uff92\041\uff92\042" +
    "\uff92\043\uff92\044\uff92\046\uff92\047\uff92\050\uff92\051\uff92" +
    "\052\uff92\001\002\000\050\011\uff72\012\uff72\013\uff72\014" +
    "\uff72\015\uff72\016\uff72\020\uff72\021\uff72\022\uff72\023\uff72" +
    "\024\uff72\025\uff72\026\uff72\033\uff72\056\uff72\066\uff72\067" +
    "\uff72\071\uff72\073\uff72\001\002\000\036\003\uff8e\035\uff8e" +
    "\036\uff8e\037\uff8e\040\uff8e\041\uff8e\042\uff8e\043\uff8e\044" +
    "\uff8e\046\uff8e\047\uff8e\050\uff8e\051\uff8e\052\uff8e\001\002" +
    "\000\006\003\u0101\035\u0102\001\002\000\012\034\376\056" +
    "\373\062\306\063\316\001\002\000\012\003\uffb1\035\uffb1" +
    "\051\uffb1\052\uffb1\001\002\000\026\003\uffba\035\uffba\042" +
    "\363\043\157\044\156\046\152\047\153\050\364\051\uffba" +
    "\052\uffba\001\002\000\026\036\346\037\344\040\345\041" +
    "\350\042\154\043\157\044\156\046\152\047\153\050\155" +
    "\001\002\000\012\003\uffbd\035\uffbd\051\332\052\335\001" +
    "\002\000\012\003\uffbd\035\uffbd\051\332\052\335\001\002" +
    "\000\036\003\uff91\035\uff91\036\uff91\037\uff91\040\uff91\041" +
    "\uff91\042\uff91\043\uff91\044\uff91\046\uff91\047\uff91\050\uff91" +
    "\051\uff91\052\uff91\001\002\000\012\003\uffbd\035\uffbd\051" +
    "\332\052\335\001\002\000\012\003\uffbd\035\uffbd\051\332" +
    "\052\335\001\002\000\012\003\uffb0\035\uffb0\051\uffb0\052" +
    "\uffb0\001\002\000\050\011\uff6f\012\uff6f\013\uff6f\014\uff6f" +
    "\015\uff6f\016\uff6f\020\uff6f\021\uff6f\022\uff6f\023\uff6f\024" +
    "\uff6f\025\uff6f\026\uff6f\033\uff6f\056\uff6f\066\uff6f\067\uff6f" +
    "\071\uff6f\073\uff6f\001\002\000\026\034\320\053\305\056" +
    "\307\057\321\060\303\061\301\062\306\063\316\064\313" +
    "\065\322\001\002\000\036\003\uff8f\035\uff8f\036\uff8f\037" +
    "\uff8f\040\uff8f\041\uff8f\042\uff8f\043\uff8f\044\uff8f\046\uff8f" +
    "\047\uff8f\050\uff8f\051\uff8f\052\uff8f\001\002\000\036\003" +
    "\uff90\035\uff90\036\uff90\037\uff90\040\uff90\041\uff90\042\uff90" +
    "\043\uff90\044\uff90\046\uff90\047\uff90\050\uff90\051\uff90\052" +
    "\uff90\001\002\000\036\003\uff93\035\uff93\036\uff93\037\uff93" +
    "\040\uff93\041\uff93\042\uff93\043\uff93\044\uff93\046\uff93\047" +
    "\uff93\050\uff93\051\uff93\052\uff93\001\002\000\030\035\351" +
    "\036\346\037\344\040\345\041\350\042\154\043\157\044" +
    "\156\046\152\047\153\050\155\001\002\000\010\035\342" +
    "\051\332\052\335\001\002\000\010\035\341\051\332\052" +
    "\335\001\002\000\010\035\334\051\332\052\335\001\002" +
    "\000\004\035\331\001\002\000\012\003\uffaf\035\uffaf\051" +
    "\uffaf\052\uffaf\001\002\000\026\034\320\053\305\056\307" +
    "\057\321\060\303\061\301\062\306\063\316\064\313\065" +
    "\322\001\002\000\006\003\uffc2\035\uffc2\001\002\000\012" +
    "\003\uffb9\035\uffb9\051\uffb9\052\uffb9\001\002\000\026\034" +
    "\320\053\305\056\307\057\321\060\303\061\301\062\306" +
    "\063\316\064\313\065\322\001\002\000\006\003\uffbe\035" +
    "\uffbe\001\002\000\006\003\uffbf\035\uffbf\001\002\000\006" +
    "\003\uffc1\035\uffc1\001\002\000\012\003\uffb2\035\uffb2\051" +
    "\uffb2\052\uffb2\001\002\000\012\003\uffbb\035\uffbb\051\uffbb" +
    "\052\uffbb\001\002\000\006\003\uffc0\035\uffc0\001\002\000" +
    "\016\034\353\057\321\060\303\061\301\064\313\065\322" +
    "\001\002\000\016\034\353\057\321\060\303\061\301\064" +
    "\313\065\322\001\002\000\016\034\353\057\321\060\303" +
    "\061\301\064\313\065\322\001\002\000\016\034\353\057" +
    "\321\060\303\061\301\064\313\065\322\001\002\000\016" +
    "\034\353\057\321\060\303\061\301\064\313\065\322\001" +
    "\002\000\036\003\uff94\035\uff94\036\uff94\037\uff94\040\uff94" +
    "\041\uff94\042\uff94\043\uff94\044\uff94\046\uff94\047\uff94\050" +
    "\uff94\051\uff94\052\uff94\001\002\000\036\003\uff95\035\uff95" +
    "\036\uff95\037\uff95\040\uff95\041\uff95\042\uff95\043\uff95\044" +
    "\uff95\046\uff95\047\uff95\050\uff95\051\uff95\052\uff95\001\002" +
    "\000\016\034\353\057\321\060\303\061\301\064\313\065" +
    "\322\001\002\000\014\035\351\036\346\037\344\040\345" +
    "\041\350\001\002\000\022\003\uffbc\035\uffbc\036\346\037" +
    "\344\040\345\041\350\051\uffbc\052\uffbc\001\002\000\036" +
    "\003\uff98\035\uff98\036\uff98\037\uff98\040\345\041\350\042" +
    "\uff98\043\uff98\044\uff98\046\uff98\047\uff98\050\uff98\051\uff98" +
    "\052\uff98\001\002\000\036\003\uff96\035\uff96\036\uff96\037" +
    "\uff96\040\uff96\041\uff96\042\uff96\043\uff96\044\uff96\046\uff96" +
    "\047\uff96\050\uff96\051\uff96\052\uff96\001\002\000\036\003" +
    "\uff97\035\uff97\036\uff97\037\uff97\040\345\041\350\042\uff97" +
    "\043\uff97\044\uff97\046\uff97\047\uff97\050\uff97\051\uff97\052" +
    "\uff97\001\002\000\006\003\uffc4\035\uffc4\001\002\000\020" +
    "\034\353\056\372\057\321\060\303\061\301\064\313\065" +
    "\322\001\002\000\024\034\uff99\056\uff99\057\uff99\060\uff99" +
    "\061\uff99\062\367\063\370\064\uff99\065\uff99\001\002\000" +
    "\024\034\uff9e\056\uff9e\057\uff9e\060\uff9e\061\uff9e\062\365" +
    "\063\366\064\uff9e\065\uff9e\001\002\000\012\003\uffb4\035" +
    "\uffb4\051\uffb4\052\uffb4\001\002\000\012\003\uffb3\035\uffb3" +
    "\051\uffb3\052\uffb3\001\002\000\012\003\uffb6\035\uffb6\051" +
    "\uffb6\052\uffb6\001\002\000\012\003\uffb5\035\uffb5\051\uffb5" +
    "\052\uffb5\001\002\000\022\003\uffb8\035\uffb8\036\346\037" +
    "\344\040\345\041\350\051\uffb8\052\uffb8\001\002\000\012" +
    "\003\uffb7\035\uffb7\051\uffb7\052\uffb7\001\002\000\012\003" +
    "\uffba\035\uffba\051\uffba\052\uffba\001\002\000\012\003\uffbd" +
    "\035\uffbd\051\332\052\335\001\002\000\012\003\uffbd\035" +
    "\uffbd\051\332\052\335\001\002\000\026\034\320\053\305" +
    "\056\307\057\321\060\303\061\301\062\306\063\316\064" +
    "\313\065\322\001\002\000\006\003\uffc5\035\uffc5\001\002" +
    "\000\006\003\uffc3\035\uffc3\001\002\000\050\011\uff6d\012" +
    "\uff6d\013\uff6d\014\uff6d\015\uff6d\016\uff6d\020\uff6d\021\uff6d" +
    "\022\uff6d\023\uff6d\024\uff6d\025\uff6d\026\uff6d\033\uff6d\056" +
    "\uff6d\066\uff6d\067\uff6d\071\uff6d\073\uff6d\001\002\000\006" +
    "\003\u0104\027\u0106\001\002\000\050\011\uff70\012\uff70\013" +
    "\uff70\014\uff70\015\uff70\016\uff70\020\uff70\021\uff70\022\uff70" +
    "\023\uff70\024\uff70\025\uff70\026\uff70\033\uff70\056\uff70\066" +
    "\uff70\067\uff70\071\uff70\073\uff70\001\002\000\050\011\uff6b" +
    "\012\uff6b\013\uff6b\014\uff6b\015\uff6b\016\uff6b\020\uff6b\021" +
    "\uff6b\022\uff6b\023\uff6b\024\uff6b\025\uff6b\026\uff6b\033\uff6b" +
    "\056\uff6b\066\uff6b\067\uff6b\071\uff6b\073\uff6b\001\002\000" +
    "\050\011\uff6e\012\uff6e\013\uff6e\014\uff6e\015\uff6e\016\uff6e" +
    "\020\uff6e\021\uff6e\022\uff6e\023\uff6e\024\uff6e\025\uff6e\026" +
    "\uff6e\033\uff6e\056\uff6e\066\uff6e\067\uff6e\071\uff6e\073\uff6e" +
    "\001\002\000\050\011\uff6c\012\uff6c\013\uff6c\014\uff6c\015" +
    "\uff6c\016\uff6c\020\uff6c\021\uff6c\022\uff6c\023\uff6c\024\uff6c" +
    "\025\uff6c\026\uff6c\033\uff6c\056\uff6c\066\uff6c\067\uff6c\071" +
    "\uff6c\073\uff6c\001\002\000\012\025\uffa2\033\uffa2\066\uffa2" +
    "\067\uffa2\001\002\000\004\056\u0109\001\002\000\006\034" +
    "\u010b\045\206\001\002\000\050\011\uffd8\012\uffd8\013\uffd8" +
    "\014\uffd8\015\uffd8\016\uffd8\020\uffd8\021\uffd8\022\uffd8\023" +
    "\uffd8\024\uffd8\025\uffd8\026\uffd8\033\uffd8\056\uffd8\066\uffd8" +
    "\067\uffd8\071\uffd8\073\uffd8\001\002\000\030\003\u0111\034" +
    "\222\035\uffd0\056\u0110\057\212\060\211\061\210\062\214" +
    "\063\217\064\223\065\216\001\002\000\004\035\u0118\001" +
    "\002\000\020\003\u0113\031\u0112\035\uffcc\036\225\037\227" +
    "\040\231\041\230\001\002\000\004\035\uffd1\001\002\000" +
    "\050\011\uffd7\012\uffd7\013\uffd7\014\uffd7\015\uffd7\016\uffd7" +
    "\020\uffd7\021\uffd7\022\uffd7\023\uffd7\024\uffd7\025\uffd7\026" +
    "\uffd7\033\uffd7\056\uffd7\066\uffd7\067\uffd7\071\uffd7\073\uffd7" +
    "\001\002\000\010\003\u0113\031\u0112\035\uffcc\001\002\000" +
    "\066\003\uff0d\011\uffd5\012\uffd5\013\uffd5\014\uffd5\015\uffd5" +
    "\016\uffd5\020\uffd5\021\uffd5\022\uffd5\023\uffd5\024\uffd5\025" +
    "\uffd5\026\uffd5\031\uff0d\033\uffd5\035\uff0d\036\uff0d\037\uff0d" +
    "\040\uff0d\041\uff0d\056\uffd5\066\uffd5\067\uffd5\071\uffd5\073" +
    "\uffd5\001\002\000\026\003\221\034\222\056\u0110\057\212" +
    "\060\211\061\210\062\214\063\217\064\223\065\216\001" +
    "\002\000\004\035\uffcb\001\002\000\004\035\uffcf\001\002" +
    "\000\004\035\uffcd\001\002\000\004\035\uffce\001\002\000" +
    "\050\011\uffd6\012\uffd6\013\uffd6\014\uffd6\015\uffd6\016\uffd6" +
    "\020\uffd6\021\uffd6\022\uffd6\023\uffd6\024\uffd6\025\uffd6\026" +
    "\uffd6\033\uffd6\056\uffd6\066\uffd6\067\uffd6\071\uffd6\073\uffd6" +
    "\001\002\000\006\003\u011a\027\u011b\001\002\000\050\011" +
    "\uffd4\012\uffd4\013\uffd4\014\uffd4\015\uffd4\016\uffd4\020\uffd4" +
    "\021\uffd4\022\uffd4\023\uffd4\024\uffd4\025\uffd4\026\uffd4\033" +
    "\uffd4\056\uffd4\066\uffd4\067\uffd4\071\uffd4\073\uffd4\001\002" +
    "\000\050\011\uffd2\012\uffd2\013\uffd2\014\uffd2\015\uffd2\016" +
    "\uffd2\020\uffd2\021\uffd2\022\uffd2\023\uffd2\024\uffd2\025\uffd2" +
    "\026\uffd2\033\uffd2\056\uffd2\066\uffd2\067\uffd2\071\uffd2\073" +
    "\uffd2\001\002\000\050\011\uffd3\012\uffd3\013\uffd3\014\uffd3" +
    "\015\uffd3\016\uffd3\020\uffd3\021\uffd3\022\uffd3\023\uffd3\024" +
    "\uffd3\025\uffd3\026\uffd3\033\uffd3\056\uffd3\066\uffd3\067\uffd3" +
    "\071\uffd3\073\uffd3\001\002\000\050\011\uffd9\012\uffd9\013" +
    "\uffd9\014\uffd9\015\uffd9\016\uffd9\020\uffd9\021\uffd9\022\uffd9" +
    "\023\uffd9\024\uffd9\025\uffd9\026\uffd9\033\uffd9\056\uffd9\066" +
    "\uffd9\067\uffd9\071\uffd9\073\uffd9\001\002\000\012\025\uffa1" +
    "\033\uffa1\066\uffa1\067\uffa1\001\002\000\050\011\uffc8\012" +
    "\uffc8\013\uffc8\014\uffc8\015\uffc8\016\uffc8\020\uffc8\021\uffc8" +
    "\022\uffc8\023\uffc8\024\uffc8\025\uffc8\026\uffc8\033\uffc8\056" +
    "\uffc8\066\uffc8\067\uffc8\071\uffc8\073\uffc8\001\002\000\030" +
    "\003\u0123\034\320\053\305\056\307\057\321\060\303\061" +
    "\301\062\306\063\316\064\313\065\322\001\002\000\050" +
    "\011\uffca\012\uffca\013\uffca\014\uffca\015\uffca\016\uffca\020" +
    "\uffca\021\uffca\022\uffca\023\uffca\024\uffca\025\uffca\026\uffca" +
    "\033\uffca\056\uffca\066\uffca\067\uffca\071\uffca\073\uffca\001" +
    "\002\000\050\011\uffc9\012\uffc9\013\uffc9\014\uffc9\015\uffc9" +
    "\016\uffc9\020\uffc9\021\uffc9\022\uffc9\023\uffc9\024\uffc9\025" +
    "\uffc9\026\uffc9\033\uffc9\056\uffc9\066\uffc9\067\uffc9\071\uffc9" +
    "\073\uffc9\001\002\000\006\003\u0124\035\u0125\001\002\000" +
    "\050\011\uffc6\012\uffc6\013\uffc6\014\uffc6\015\uffc6\016\uffc6" +
    "\020\uffc6\021\uffc6\022\uffc6\023\uffc6\024\uffc6\025\uffc6\026" +
    "\uffc6\033\uffc6\056\uffc6\066\uffc6\067\uffc6\071\uffc6\073\uffc6" +
    "\001\002\000\050\011\uffad\012\uffad\013\uffad\014\uffad\015" +
    "\uffad\016\uffad\020\uffad\021\uffad\022\uffad\023\uffad\024\uffad" +
    "\025\uffad\026\uffad\033\uffad\056\uffad\066\uffad\067\uffad\071" +
    "\uffad\073\uffad\001\002\000\006\003\u0127\032\u0129\001\002" +
    "\000\050\011\uffc7\012\uffc7\013\uffc7\014\uffc7\015\uffc7\016" +
    "\uffc7\020\uffc7\021\uffc7\022\uffc7\023\uffc7\024\uffc7\025\uffc7" +
    "\026\uffc7\033\uffc7\056\uffc7\066\uffc7\067\uffc7\071\uffc7\073" +
    "\uffc7\001\002\000\050\011\uffab\012\uffab\013\uffab\014\uffab" +
    "\015\uffab\016\uffab\020\uffab\021\uffab\022\uffab\023\uffab\024" +
    "\uffab\025\uffab\026\uffab\033\uffab\056\uffab\066\uffab\067\uffab" +
    "\071\uffab\073\uffab\001\002\000\050\011\uffae\012\uffae\013" +
    "\uffae\014\uffae\015\uffae\016\uffae\020\uffae\021\uffae\022\uffae" +
    "\023\uffae\024\uffae\025\uffae\026\uffae\033\uffae\056\uffae\066" +
    "\uffae\067\uffae\071\uffae\073\uffae\001\002\000\044\003\u012b" +
    "\011\023\012\027\013\030\014\044\015\024\016\117\020" +
    "\133\021\112\022\124\023\116\024\127\026\115\033\uffa0" +
    "\056\121\071\040\073\122\001\002\000\050\011\uffac\012" +
    "\uffac\013\uffac\014\uffac\015\uffac\016\uffac\020\uffac\021\uffac" +
    "\022\uffac\023\uffac\024\uffac\025\uffac\026\uffac\033\uffac\056" +
    "\uffac\066\uffac\067\uffac\071\uffac\073\uffac\001\002\000\050" +
    "\011\uffa9\012\uffa9\013\uffa9\014\uffa9\015\uffa9\016\uffa9\020" +
    "\uffa9\021\uffa9\022\uffa9\023\uffa9\024\uffa9\025\uffa9\026\uffa9" +
    "\033\uffa9\056\uffa9\066\uffa9\067\uffa9\071\uffa9\073\uffa9\001" +
    "\002\000\004\033\u012e\001\002\000\050\011\uffaa\012\uffaa" +
    "\013\uffaa\014\uffaa\015\uffaa\016\uffaa\020\uffaa\021\uffaa\022" +
    "\uffaa\023\uffaa\024\uffaa\025\uffaa\026\uffaa\033\uffaa\056\uffaa" +
    "\066\uffaa\067\uffaa\071\uffaa\073\uffaa\001\002\000\052\011" +
    "\uff8c\012\uff8c\013\uff8c\014\uff8c\015\uff8c\016\uff8c\017\u012f" +
    "\020\uff8c\021\uff8c\022\uff8c\023\uff8c\024\uff8c\025\uff8c\026" +
    "\uff8c\033\uff8c\056\uff8c\066\uff8c\067\uff8c\071\uff8c\073\uff8c" +
    "\001\002\000\006\003\u0131\032\u0133\001\002\000\050\011" +
    "\uff9f\012\uff9f\013\uff9f\014\uff9f\015\uff9f\016\uff9f\020\uff9f" +
    "\021\uff9f\022\uff9f\023\uff9f\024\uff9f\025\uff9f\026\uff9f\033" +
    "\uff9f\056\uff9f\066\uff9f\067\uff9f\071\uff9f\073\uff9f\001\002" +
    "\000\050\011\uff8a\012\uff8a\013\uff8a\014\uff8a\015\uff8a\016" +
    "\uff8a\020\uff8a\021\uff8a\022\uff8a\023\uff8a\024\uff8a\025\uff8a" +
    "\026\uff8a\033\uff8a\056\uff8a\066\uff8a\067\uff8a\071\uff8a\073" +
    "\uff8a\001\002\000\050\011\uff8d\012\uff8d\013\uff8d\014\uff8d" +
    "\015\uff8d\016\uff8d\020\uff8d\021\uff8d\022\uff8d\023\uff8d\024" +
    "\uff8d\025\uff8d\026\uff8d\033\uff8d\056\uff8d\066\uff8d\067\uff8d" +
    "\071\uff8d\073\uff8d\001\002\000\044\003\u0134\011\023\012" +
    "\027\013\030\014\044\015\024\016\117\020\133\021\112" +
    "\022\124\023\116\024\127\026\115\033\uffa0\056\121\071" +
    "\040\073\122\001\002\000\050\011\uff88\012\uff88\013\uff88" +
    "\014\uff88\015\uff88\016\uff88\020\uff88\021\uff88\022\uff88\023" +
    "\uff88\024\uff88\025\uff88\026\uff88\033\uff88\056\uff88\066\uff88" +
    "\067\uff88\071\uff88\073\uff88\001\002\000\004\033\u0138\001" +
    "\002\000\050\011\uff8b\012\uff8b\013\uff8b\014\uff8b\015\uff8b" +
    "\016\uff8b\020\uff8b\021\uff8b\022\uff8b\023\uff8b\024\uff8b\025" +
    "\uff8b\026\uff8b\033\uff8b\056\uff8b\066\uff8b\067\uff8b\071\uff8b" +
    "\073\uff8b\001\002\000\050\011\uff89\012\uff89\013\uff89\014" +
    "\uff89\015\uff89\016\uff89\020\uff89\021\uff89\022\uff89\023\uff89" +
    "\024\uff89\025\uff89\026\uff89\033\uff89\056\uff89\066\uff89\067" +
    "\uff89\071\uff89\073\uff89\001\002\000\050\011\uff87\012\uff87" +
    "\013\uff87\014\uff87\015\uff87\016\uff87\020\uff87\021\uff87\022" +
    "\uff87\023\uff87\024\uff87\025\uff87\026\uff87\033\uff87\056\uff87" +
    "\066\uff87\067\uff87\071\uff87\073\uff87\001\002\000\050\011" +
    "\uff50\012\uff50\013\uff50\014\uff50\015\uff50\016\uff50\020\uff50" +
    "\021\uff50\022\uff50\023\uff50\024\uff50\025\uff50\026\uff50\033" +
    "\uff50\056\uff50\066\uff50\067\uff50\071\uff50\073\uff50\001\002" +
    "\000\050\011\uff52\012\uff52\013\uff52\014\uff52\015\uff52\016" +
    "\uff52\020\uff52\021\uff52\022\uff52\023\uff52\024\uff52\025\uff52" +
    "\026\uff52\033\uff52\056\uff52\066\uff52\067\uff52\071\uff52\073" +
    "\uff52\001\002\000\006\003\u013e\056\u013c\001\002\000\006" +
    "\003\u0140\035\u0141\001\002\000\050\011\uff51\012\uff51\013" +
    "\uff51\014\uff51\015\uff51\016\uff51\020\uff51\021\uff51\022\uff51" +
    "\023\uff51\024\uff51\025\uff51\026\uff51\033\uff51\056\uff51\066" +
    "\uff51\067\uff51\071\uff51\073\uff51\001\002\000\050\011\uff4e" +
    "\012\uff4e\013\uff4e\014\uff4e\015\uff4e\016\uff4e\020\uff4e\021" +
    "\uff4e\022\uff4e\023\uff4e\024\uff4e\025\uff4e\026\uff4e\033\uff4e" +
    "\056\uff4e\066\uff4e\067\uff4e\071\uff4e\073\uff4e\001\002\000" +
    "\050\011\uff4f\012\uff4f\013\uff4f\014\uff4f\015\uff4f\016\uff4f" +
    "\020\uff4f\021\uff4f\022\uff4f\023\uff4f\024\uff4f\025\uff4f\026" +
    "\uff4f\033\uff4f\056\uff4f\066\uff4f\067\uff4f\071\uff4f\073\uff4f" +
    "\001\002\000\050\011\uff4c\012\uff4c\013\uff4c\014\uff4c\015" +
    "\uff4c\016\uff4c\020\uff4c\021\uff4c\022\uff4c\023\uff4c\024\uff4c" +
    "\025\uff4c\026\uff4c\033\uff4c\056\uff4c\066\uff4c\067\uff4c\071" +
    "\uff4c\073\uff4c\001\002\000\006\003\u0143\032\u0144\001\002" +
    "\000\050\011\uff4d\012\uff4d\013\uff4d\014\uff4d\015\uff4d\016" +
    "\uff4d\020\uff4d\021\uff4d\022\uff4d\023\uff4d\024\uff4d\025\uff4d" +
    "\026\uff4d\033\uff4d\056\uff4d\066\uff4d\067\uff4d\071\uff4d\073" +
    "\uff4d\001\002\000\050\011\uff4a\012\uff4a\013\uff4a\014\uff4a" +
    "\015\uff4a\016\uff4a\020\uff4a\021\uff4a\022\uff4a\023\uff4a\024" +
    "\uff4a\025\uff4a\026\uff4a\033\uff4a\056\uff4a\066\uff4a\067\uff4a" +
    "\071\uff4a\073\uff4a\001\002\000\012\003\u0147\033\u0148\066" +
    "\u0149\067\u0145\001\002\000\006\003\u015e\070\u015f\001\002" +
    "\000\004\033\u015c\001\002\000\050\011\uff48\012\uff48\013" +
    "\uff48\014\uff48\015\uff48\016\uff48\020\uff48\021\uff48\022\uff48" +
    "\023\uff48\024\uff48\025\uff48\026\uff48\033\uff48\056\uff48\066" +
    "\uff48\067\uff48\071\uff48\073\uff48\001\002\000\050\011\uff45" +
    "\012\uff45\013\uff45\014\uff45\015\uff45\016\uff45\020\uff45\021" +
    "\uff45\022\uff45\023\uff45\024\uff45\025\uff45\026\uff45\033\uff45" +
    "\056\uff45\066\uff45\067\uff45\071\uff45\073\uff45\001\002\000" +
    "\022\003\u014d\057\212\060\211\061\210\062\214\063\217" +
    "\064\223\065\216\001\002\000\050\011\uff49\012\uff49\013" +
    "\uff49\014\uff49\015\uff49\016\uff49\020\uff49\021\uff49\022\uff49" +
    "\023\uff49\024\uff49\025\uff49\026\uff49\033\uff49\056\uff49\066" +
    "\uff49\067\uff49\071\uff49\073\uff49\001\002\000\050\011\uff4b" +
    "\012\uff4b\013\uff4b\014\uff4b\015\uff4b\016\uff4b\020\uff4b\021" +
    "\uff4b\022\uff4b\023\uff4b\024\uff4b\025\uff4b\026\uff4b\033\uff4b" +
    "\056\uff4b\066\uff4b\067\uff4b\071\uff4b\073\uff4b\001\002\000" +
    "\006\003\uff43\070\uff43\001\002\000\006\003\uff42\070\uff42" +
    "\001\002\000\010\033\u0148\066\u0149\067\u0145\001\002\000" +
    "\006\003\u0150\070\u0152\001\002\000\010\033\uff40\066\uff40" +
    "\067\uff40\001\002\000\010\033\uff44\066\uff44\067\uff44\001" +
    "\002\000\052\003\u0154\011\023\012\027\013\030\014\044" +
    "\015\024\016\117\020\133\021\112\022\124\023\116\024" +
    "\127\025\uffa0\026\115\033\uffa0\056\121\066\uffa0\067\uffa0" +
    "\071\040\073\122\001\002\000\010\033\uff41\066\uff41\067" +
    "\uff41\001\002\000\010\033\uff3e\066\uff3e\067\uff3e\001\002" +
    "\000\012\025\u0156\033\uff3c\066\uff3c\067\uff3c\001\002\000" +
    "\006\003\u0158\027\u015a\001\002\000\010\033\uff3f\066\uff3f" +
    "\067\uff3f\001\002\000\010\033\uff3a\066\uff3a\067\uff3a\001" +
    "\002\000\010\033\uff3d\066\uff3d\067\uff3d\001\002\000\010" +
    "\033\uff3b\066\uff3b\067\uff3b\001\002\000\050\011\uff47\012" +
    "\uff47\013\uff47\014\uff47\015\uff47\016\uff47\020\uff47\021\uff47" +
    "\022\uff47\023\uff47\024\uff47\025\uff47\026\uff47\033\uff47\056" +
    "\uff47\066\uff47\067\uff47\071\uff47\073\uff47\001\002\000\050" +
    "\011\uff46\012\uff46\013\uff46\014\uff46\015\uff46\016\uff46\020" +
    "\uff46\021\uff46\022\uff46\023\uff46\024\uff46\025\uff46\026\uff46" +
    "\033\uff46\056\uff46\066\uff46\067\uff46\071\uff46\073\uff46\001" +
    "\002\000\004\033\uff39\001\002\000\004\033\uff37\001\002" +
    "\000\042\011\023\012\027\013\030\014\044\015\024\016" +
    "\117\020\133\021\112\022\124\023\116\024\127\026\115" +
    "\033\uffa0\056\121\071\040\073\122\001\002\000\004\033" +
    "\uff38\001\002\000\004\027\u0166\001\002\000\050\011\uffde" +
    "\012\uffde\013\uffde\014\uffde\015\uffde\016\uffde\020\uffde\021" +
    "\uffde\022\uffde\023\uffde\024\uffde\025\uffde\026\uffde\033\uffde" +
    "\056\uffde\066\uffde\067\uffde\071\uffde\073\uffde\001\002\000" +
    "\004\027\u0166\001\002\000\050\011\uffdb\012\uffdb\013\uffdb" +
    "\014\uffdb\015\uffdb\016\uffdb\020\uffdb\021\uffdb\022\uffdb\023" +
    "\uffdb\024\uffdb\025\uffdb\026\uffdb\033\uffdb\056\uffdb\066\uffdb" +
    "\067\uffdb\071\uffdb\073\uffdb\001\002\000\050\011\uffdc\012" +
    "\uffdc\013\uffdc\014\uffdc\015\uffdc\016\uffdc\020\uffdc\021\uffdc" +
    "\022\uffdc\023\uffdc\024\uffdc\025\uffdc\026\uffdc\033\uffdc\056" +
    "\uffdc\066\uffdc\067\uffdc\071\uffdc\073\uffdc\001\002\000\050" +
    "\011\uffda\012\uffda\013\uffda\014\uffda\015\uffda\016\uffda\020" +
    "\uffda\021\uffda\022\uffda\023\uffda\024\uffda\025\uffda\026\uffda" +
    "\033\uffda\056\uffda\066\uffda\067\uffda\071\uffda\073\uffda\001" +
    "\002\000\050\011\uffdd\012\uffdd\013\uffdd\014\uffdd\015\uffdd" +
    "\016\uffdd\020\uffdd\021\uffdd\022\uffdd\023\uffdd\024\uffdd\025" +
    "\uffdd\026\uffdd\033\uffdd\056\uffdd\066\uffdd\067\uffdd\071\uffdd" +
    "\073\uffdd\001\002\000\012\025\uffa6\033\uffa6\066\uffa6\067" +
    "\uffa6\001\002\000\012\025\uffa3\033\uffa3\066\uffa3\067\uffa3" +
    "\001\002\000\050\011\uff84\012\uff84\013\uff84\014\uff84\015" +
    "\uff84\016\uff84\020\uff84\021\uff84\022\uff84\023\uff84\024\uff84" +
    "\025\uff84\026\uff84\033\uff84\056\uff84\066\uff84\067\uff84\071" +
    "\uff84\073\uff84\001\002\000\050\011\uff86\012\uff86\013\uff86" +
    "\014\uff86\015\uff86\016\uff86\020\uff86\021\uff86\022\uff86\023" +
    "\uff86\024\uff86\025\uff86\026\uff86\033\uff86\056\uff86\066\uff86" +
    "\067\uff86\071\uff86\073\uff86\001\002\000\030\003\u016e\034" +
    "\320\053\305\056\307\057\321\060\303\061\301\062\306" +
    "\063\316\064\313\065\322\001\002\000\006\003\u0171\035" +
    "\u0172\001\002\000\050\011\uff82\012\uff82\013\uff82\014\uff82" +
    "\015\uff82\016\uff82\020\uff82\021\uff82\022\uff82\023\uff82\024" +
    "\uff82\025\uff82\026\uff82\033\uff82\056\uff82\066\uff82\067\uff82" +
    "\071\uff82\073\uff82\001\002\000\050\011\uff85\012\uff85\013" +
    "\uff85\014\uff85\015\uff85\016\uff85\020\uff85\021\uff85\022\uff85" +
    "\023\uff85\024\uff85\025\uff85\026\uff85\033\uff85\056\uff85\066" +
    "\uff85\067\uff85\071\uff85\073\uff85\001\002\000\050\011\uff83" +
    "\012\uff83\013\uff83\014\uff83\015\uff83\016\uff83\020\uff83\021" +
    "\uff83\022\uff83\023\uff83\024\uff83\025\uff83\026\uff83\033\uff83" +
    "\056\uff83\066\uff83\067\uff83\071\uff83\073\uff83\001\002\000" +
    "\050\011\uff80\012\uff80\013\uff80\014\uff80\015\uff80\016\uff80" +
    "\020\uff80\021\uff80\022\uff80\023\uff80\024\uff80\025\uff80\026" +
    "\uff80\033\uff80\056\uff80\066\uff80\067\uff80\071\uff80\073\uff80" +
    "\001\002\000\006\003\u0174\032\u0175\001\002\000\050\011" +
    "\uff81\012\uff81\013\uff81\014\uff81\015\uff81\016\uff81\020\uff81" +
    "\021\uff81\022\uff81\023\uff81\024\uff81\025\uff81\026\uff81\033" +
    "\uff81\056\uff81\066\uff81\067\uff81\071\uff81\073\uff81\001\002" +
    "\000\050\011\uff7e\012\uff7e\013\uff7e\014\uff7e\015\uff7e\016" +
    "\uff7e\020\uff7e\021\uff7e\022\uff7e\023\uff7e\024\uff7e\025\uff7e" +
    "\026\uff7e\033\uff7e\056\uff7e\066\uff7e\067\uff7e\071\uff7e\073" +
    "\uff7e\001\002\000\044\003\u0177\011\023\012\027\013\030" +
    "\014\044\015\024\016\117\020\133\021\112\022\124\023" +
    "\116\024\127\026\115\033\uffa0\056\121\071\040\073\122" +
    "\001\002\000\050\011\uff7f\012\uff7f\013\uff7f\014\uff7f\015" +
    "\uff7f\016\uff7f\020\uff7f\021\uff7f\022\uff7f\023\uff7f\024\uff7f" +
    "\025\uff7f\026\uff7f\033\uff7f\056\uff7f\066\uff7f\067\uff7f\071" +
    "\uff7f\073\uff7f\001\002\000\050\011\uff7c\012\uff7c\013\uff7c" +
    "\014\uff7c\015\uff7c\016\uff7c\020\uff7c\021\uff7c\022\uff7c\023" +
    "\uff7c\024\uff7c\025\uff7c\026\uff7c\033\uff7c\056\uff7c\066\uff7c" +
    "\067\uff7c\071\uff7c\073\uff7c\001\002\000\004\033\u017a\001" +
    "\002\000\050\011\uff7d\012\uff7d\013\uff7d\014\uff7d\015\uff7d" +
    "\016\uff7d\020\uff7d\021\uff7d\022\uff7d\023\uff7d\024\uff7d\025" +
    "\uff7d\026\uff7d\033\uff7d\056\uff7d\066\uff7d\067\uff7d\071\uff7d" +
    "\073\uff7d\001\002\000\050\011\uff7b\012\uff7b\013\uff7b\014" +
    "\uff7b\015\uff7b\016\uff7b\020\uff7b\021\uff7b\022\uff7b\023\uff7b" +
    "\024\uff7b\025\uff7b\026\uff7b\033\uff7b\056\uff7b\066\uff7b\067" +
    "\uff7b\071\uff7b\073\uff7b\001\002\000\012\025\uffa8\033\uffa8" +
    "\066\uffa8\067\uffa8\001\002\000\004\035\uffe7\001\002\000" +
    "\004\035\uffe8\001\002\000\004\056\u0181\001\002\000\016" +
    "\027\053\031\050\036\225\037\227\040\231\041\230\001" +
    "\002\000\060\003\uff18\005\uff18\006\uff18\007\uff18\011\uff18" +
    "\012\uff18\013\uff18\014\uff18\015\uff18\016\uff18\020\uff18\021" +
    "\uff18\022\uff18\023\uff18\024\uff18\025\uff18\026\uff18\033\uff18" +
    "\056\uff18\066\uff18\067\uff18\071\uff18\073\uff18\001\002\000" +
    "\004\034\u0182\001\002\000\030\003\221\034\222\035\uffd0" +
    "\056\u0110\057\212\060\211\061\210\062\214\063\217\064" +
    "\223\065\216\001\002\000\004\035\u0184\001\002\000\004" +
    "\027\u0185\001\002\000\060\003\uff17\005\uff17\006\uff17\007" +
    "\uff17\011\uff17\012\uff17\013\uff17\014\uff17\015\uff17\016\uff17" +
    "\020\uff17\021\uff17\022\uff17\023\uff17\024\uff17\025\uff17\026" +
    "\uff17\033\uff17\056\uff17\066\uff17\067\uff17\071\uff17\073\uff17" +
    "\001\002\000\060\003\uff15\005\uff15\006\uff15\007\uff15\011" +
    "\uff15\012\uff15\013\uff15\014\uff15\015\uff15\016\uff15\020\uff15" +
    "\021\uff15\022\uff15\023\uff15\024\uff15\025\uff15\026\uff15\033" +
    "\uff15\056\uff15\066\uff15\067\uff15\071\uff15\073\uff15\001\002" +
    "\000\004\002\uff2f\001\002\000\004\034\060\001\002\000" +
    "\060\003\uff1e\005\uff1e\006\uff1e\007\uff1e\011\uff1e\012\uff1e" +
    "\013\uff1e\014\uff1e\015\uff1e\016\uff1e\020\uff1e\021\uff1e\022" +
    "\uff1e\023\uff1e\024\uff1e\025\uff1e\026\uff1e\033\uff1e\056\uff1e" +
    "\066\uff1e\067\uff1e\071\uff1e\073\uff1e\001\002\000\034\003" +
    "\uff2b\005\uff2b\006\uff2b\007\uff2b\011\uff2b\012\uff2b\013\uff2b" +
    "\014\uff2b\015\uff2b\024\uff2b\033\uff2b\056\uff2b\071\uff2b\001" +
    "\002\000\034\003\uff26\005\uff26\006\uff26\007\uff26\011\uff26" +
    "\012\uff26\013\uff26\014\uff26\015\uff26\024\uff26\033\uff26\056" +
    "\uff26\071\uff26\001\002\000\034\003\uff2a\005\uff2a\006\uff2a" +
    "\007\uff2a\011\uff2a\012\uff2a\013\uff2a\014\uff2a\015\uff2a\024" +
    "\uff2a\033\uff2a\056\uff2a\071\uff2a\001\002\000\060\003\uff22" +
    "\005\uff22\006\uff22\007\uff22\011\uff22\012\uff22\013\uff22\014" +
    "\uff22\015\uff22\016\uff22\020\uff22\021\uff22\022\uff22\023\uff22" +
    "\024\uff22\025\uff22\026\uff22\033\uff22\056\uff22\066\uff22\067" +
    "\uff22\071\uff22\073\uff22\001\002\000\060\003\uff23\005\uff23" +
    "\006\uff23\007\uff23\011\uff23\012\uff23\013\uff23\014\uff23\015" +
    "\uff23\016\uff23\020\uff23\021\uff23\022\uff23\023\uff23\024\uff23" +
    "\025\uff23\026\uff23\033\uff23\056\uff23\066\uff23\067\uff23\071" +
    "\uff23\073\uff23\001\002\000\034\003\uff2c\005\uff2c\006\uff2c" +
    "\007\uff2c\011\uff2c\012\uff2c\013\uff2c\014\uff2c\015\uff2c\024" +
    "\uff2c\033\uff2c\056\uff2c\071\uff2c\001\002\000\034\003\uff27" +
    "\005\uff27\006\uff27\007\uff27\011\uff27\012\uff27\013\uff27\014" +
    "\uff27\015\uff27\024\uff27\033\uff27\056\uff27\071\uff27\001\002" +
    "\000\022\003\u0194\011\061\012\062\013\065\014\066\015" +
    "\072\035\uffe9\056\067\001\002\000\034\003\ufefc\005\ufefc" +
    "\006\ufefc\007\ufefc\011\ufefc\012\ufefc\013\ufefc\014\ufefc\015" +
    "\ufefc\024\ufefc\033\ufefc\056\ufefc\071\ufefc\001\002\000\004" +
    "\035\u0196\001\002\000\034\003\ufefa\005\ufefa\006\ufefa\007" +
    "\ufefa\011\ufefa\012\ufefa\013\ufefa\014\ufefa\015\ufefa\024\ufefa" +
    "\033\ufefa\056\ufefa\071\ufefa\001\002\000\034\003\ufefb\005" +
    "\ufefb\006\ufefb\007\ufefb\011\ufefb\012\ufefb\013\ufefb\014\ufefb" +
    "\015\ufefb\024\ufefb\033\ufefb\056\ufefb\071\ufefb\001\002\000" +
    "\006\003\u0197\032\u0199\001\002\000\034\003\ufef7\005\ufef7" +
    "\006\ufef7\007\ufef7\011\ufef7\012\ufef7\013\ufef7\014\ufef7\015" +
    "\ufef7\024\ufef7\033\ufef7\056\ufef7\071\ufef7\001\002\000\034" +
    "\003\ufef9\005\ufef9\006\ufef9\007\ufef9\011\ufef9\012\ufef9\013" +
    "\ufef9\014\ufef9\015\ufef9\024\ufef9\033\ufef9\056\ufef9\071\ufef9" +
    "\001\002\000\044\003\u019a\011\023\012\027\013\030\014" +
    "\044\015\024\016\117\020\133\021\112\022\124\023\116" +
    "\024\127\026\115\033\uffa0\056\121\071\040\073\122\001" +
    "\002\000\034\003\ufef5\005\ufef5\006\ufef5\007\ufef5\011\ufef5" +
    "\012\ufef5\013\ufef5\014\ufef5\015\ufef5\024\ufef5\033\ufef5\056" +
    "\ufef5\071\ufef5\001\002\000\004\033\u019e\001\002\000\034" +
    "\003\ufef8\005\ufef8\006\ufef8\007\ufef8\011\ufef8\012\ufef8\013" +
    "\ufef8\014\ufef8\015\ufef8\024\ufef8\033\ufef8\056\ufef8\071\ufef8" +
    "\001\002\000\034\003\ufef6\005\ufef6\006\ufef6\007\ufef6\011" +
    "\ufef6\012\ufef6\013\ufef6\014\ufef6\015\ufef6\024\ufef6\033\ufef6" +
    "\056\ufef6\071\ufef6\001\002\000\034\003\ufef4\005\ufef4\006" +
    "\ufef4\007\ufef4\011\ufef4\012\ufef4\013\ufef4\014\ufef4\015\ufef4" +
    "\024\ufef4\033\ufef4\056\ufef4\071\ufef4\001\002\000\060\003" +
    "\uff21\005\uff21\006\uff21\007\uff21\011\uff21\012\uff21\013\uff21" +
    "\014\uff21\015\uff21\016\uff21\020\uff21\021\uff21\022\uff21\023" +
    "\uff21\024\uff21\025\uff21\026\uff21\033\uff21\056\uff21\066\uff21" +
    "\067\uff21\071\uff21\073\uff21\001\002\000\060\003\uff24\005" +
    "\uff24\006\uff24\007\uff24\011\uff24\012\uff24\013\uff24\014\uff24" +
    "\015\uff24\016\uff24\020\uff24\021\uff24\022\uff24\023\uff24\024" +
    "\uff24\025\uff24\026\uff24\033\uff24\056\uff24\066\uff24\067\uff24" +
    "\071\uff24\073\uff24\001\002\000\004\002\001\001\002\000" +
    "\004\002\000\001\002\000\006\003\u01a8\030\u01a6\001\002" +
    "\000\014\002\ufffd\003\ufffd\004\ufffd\005\ufffd\010\ufffd\001" +
    "\002\000\014\002\ufffa\003\ufffa\004\ufffa\005\ufffa\010\ufffa" +
    "\001\002\000\010\003\u01ab\040\u01ac\056\u01a9\001\002\000" +
    "\014\002\ufffb\003\ufffb\004\ufffb\005\ufffb\010\ufffb\001\002" +
    "\000\014\002\ufff8\003\ufff8\004\ufff8\005\ufff8\010\ufff8\001" +
    "\002\000\010\003\u01a8\027\u01b1\030\u01a6\001\002\000\014" +
    "\002\ufff9\003\ufff9\004\ufff9\005\ufff9\010\ufff9\001\002\000" +
    "\014\002\ufff5\003\ufff5\004\ufff5\005\ufff5\010\ufff5\001\002" +
    "\000\006\003\u01ae\027\u01af\001\002\000\014\002\ufff7\003" +
    "\ufff7\004\ufff7\005\ufff7\010\ufff7\001\002\000\014\002\ufff3" +
    "\003\ufff3\004\ufff3\005\ufff3\010\ufff3\001\002\000\014\002" +
    "\ufff4\003\ufff4\004\ufff4\005\ufff4\010\ufff4\001\002\000\014" +
    "\002\ufff1\003\ufff1\004\ufff1\005\ufff1\010\ufff1\001\002\000" +
    "\014\002\ufff2\003\ufff2\004\ufff2\005\ufff2\010\ufff2\001\002" +
    "\000\014\002\ufff6\003\ufff6\004\ufff6\005\ufff6\010\ufff6\001" +
    "\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\u01b0\000\012\002\005\154\011\155\007\163\006\001" +
    "\001\000\004\003\u01a3\001\001\000\002\001\001\000\012" +
    "\002\005\154\011\155\007\163\u01a1\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\156\016\001\001\000\002" +
    "\001\001\000\004\155\013\001\001\000\002\001\001\000" +
    "\004\157\020\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\014\010\042\011" +
    "\041\012\040\160\036\161\030\001\001\000\004\013\u019f" +
    "\001\001\000\004\013\u019e\001\001\000\006\013\240\146" +
    "\u018f\001\001\000\010\011\041\012\040\161\u018e\001\001" +
    "\000\004\013\u018d\001\001\000\004\013\u018c\001\001\000" +
    "\002\001\001\000\010\011\041\012\040\161\u018b\001\001" +
    "\000\004\012\u018a\001\001\000\002\001\001\000\010\011" +
    "\041\012\040\161\u0189\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\014\010\042\011\041\012\040\160\u0186\161\030" +
    "\001\001\000\004\013\046\001\001\000\012\014\056\017" +
    "\050\140\051\162\053\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\013\u0185\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\006\015\214\016\u017e\001\001\000\002\001" +
    "\001\000\010\022\067\025\063\141\062\001\001\000\004" +
    "\023\u017c\001\001\000\004\023\u017b\001\001\000\002\001" +
    "\001\000\004\142\104\001\001\000\004\023\102\001\001" +
    "\000\004\023\101\001\001\000\004\023\100\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\023\073\001\001" +
    "\000\004\024\076\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\022\077\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\143\106\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\030\012\133\020\112\026" +
    "\122\031\117\041\110\065\130\066\131\075\113\106\125" +
    "\121\134\144\124\001\001\000\026\012\133\020\112\026" +
    "\122\031\117\041\110\065\u017a\066\131\075\113\106\125" +
    "\121\134\001\001\000\004\067\u016a\001\001\000\026\012" +
    "\133\020\112\026\122\031\117\041\110\065\u0168\066\131" +
    "\075\113\106\125\121\134\001\001\000\026\012\133\020" +
    "\112\026\122\031\117\041\110\065\u0167\066\131\075\113" +
    "\106\125\121\134\001\001\000\006\015\u0160\027\u0161\001" +
    "\001\000\004\122\u0139\001\001\000\004\042\u011f\001\001" +
    "\000\026\012\133\020\112\026\122\031\117\041\110\065" +
    "\u011c\066\131\075\113\106\125\121\134\001\001\000\010" +
    "\013\240\021\237\032\u011b\001\001\000\002\001\001\000" +
    "\026\012\133\020\112\026\122\031\117\041\110\065\u0106" +
    "\066\131\075\113\106\125\121\134\001\001\000\004\076" +
    "\263\001\001\000\002\001\001\000\026\012\133\020\112" +
    "\026\122\031\117\041\110\065\261\066\131\075\113\106" +
    "\125\121\134\001\001\000\004\012\260\001\001\000\002" +
    "\001\001\000\004\145\255\001\001\000\026\012\133\020" +
    "\112\026\122\031\117\041\110\065\254\066\131\075\113" +
    "\106\125\121\134\001\001\000\004\107\136\001\001\000" +
    "\002\001\001\000\026\012\133\020\112\026\122\031\117" +
    "\041\110\065\135\066\131\075\113\106\125\121\134\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\012\012\133\020\146\110\142\115\141\001\001\000" +
    "\004\111\241\001\001\000\002\001\001\000\006\013\240" +
    "\021\237\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\064\150\001\001\000\006\116\163" +
    "\120\161\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\006\116\201\120\161\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\006\116\200\120" +
    "\161\001\001\000\006\116\177\120\161\001\001\000\004" +
    "\117\172\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\006\116\176\120\161\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\021\206\001\001\000\006\015\214\016\212\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\006\015\214\016\223\001" +
    "\001\000\002\001\001\000\002\001\001\000\006\015\214" +
    "\016\234\001\001\000\002\001\001\000\006\015\214\016" +
    "\233\001\001\000\006\015\214\016\232\001\001\000\006" +
    "\015\214\016\231\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\112\246\001\001" +
    "\000\002\001\001\000\030\012\133\020\112\026\122\031" +
    "\117\041\110\065\251\066\131\075\113\106\125\113\247" +
    "\121\134\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\114\252\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\013\240\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\030\012\133\020\112\026\122\031\117\041\110\065\267" +
    "\066\131\075\113\077\265\106\125\121\134\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\100\270\001\001" +
    "\000\002\001\001\000\004\101\273\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\102\277\001\001\000\002" +
    "\001\001\000\022\050\314\052\313\053\311\054\310\055" +
    "\307\056\322\063\303\103\301\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\104\u0102\001\001\000\006\050\374\052\373\001\001" +
    "\000\002\001\001\000\004\064\361\001\001\000\004\064" +
    "\346\001\001\000\004\051\342\001\001\000\004\051\337" +
    "\001\001\000\002\001\001\000\004\051\332\001\001\000" +
    "\004\051\360\001\001\000\002\001\001\000\002\001\001" +
    "\000\020\050\314\052\326\053\325\054\324\055\323\056" +
    "\322\063\327\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\064\346\001\001\000\004\051" +
    "\342\001\001\000\004\051\337\001\001\000\004\051\332" +
    "\001\001\000\002\001\001\000\002\001\001\000\020\050" +
    "\314\052\313\053\311\054\310\055\307\056\322\063\336" +
    "\001\001\000\002\001\001\000\002\001\001\000\020\050" +
    "\314\052\313\053\311\054\310\055\307\056\322\063\335" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\006\055\357\056\322\001\001\000\006\055\356\056" +
    "\322\001\001\000\006\055\355\056\322\001\001\000\006" +
    "\055\354\056\322\001\001\000\006\055\351\056\322\001" +
    "\001\000\002\001\001\000\002\001\001\000\006\055\353" +
    "\056\322\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\006\055\370\056\322\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\051\377\001\001" +
    "\000\004\051\376\001\001\000\020\050\314\052\326\053" +
    "\311\054\310\055\307\056\322\063\327\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\105" +
    "\u0104\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\006\021\206\032\u0109\001\001\000\002\001\001" +
    "\000\014\015\214\016\u010c\033\u010e\036\u010d\040\u010b\001" +
    "\001\000\004\034\u0116\001\001\000\004\037\u0115\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\037\u0113\001" +
    "\001\000\002\001\001\000\010\015\214\016\u010c\036\u0114" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\035\u0118" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\022\043\u0120\050\314\052\313\053\311\054\310\055" +
    "\307\056\322\063\u0121\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\044\u0125\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\045\u0127\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\030\012\133\020" +
    "\112\026\122\031\117\041\110\046\u0129\065\u012b\066\131" +
    "\075\113\106\125\121\134\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\047\u012c\001\001\000\002\001\001" +
    "\000\004\057\u012f\001\001\000\004\060\u0131\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\030" +
    "\012\133\020\112\026\122\031\117\041\110\061\u0135\065" +
    "\u0134\066\131\075\113\106\125\121\134\001\001\000\002" +
    "\001\001\000\004\062\u0136\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\123\u013c\001\001\000\004\124\u013e\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\125\u0141\001\001\000\002\001" +
    "\001\000\002\001\001\000\010\126\u014a\127\u0149\136\u0145" +
    "\001\001\000\004\137\u015c\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\010\015\u014b\130\u014d" +
    "\131\u014e\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\006\127\u015a\136\u0145" +
    "\001\001\000\004\132\u0150\001\001\000\002\001\001\000" +
    "\002\001\001\000\030\012\133\020\112\026\122\031\117" +
    "\041\110\065\u0154\066\131\075\113\106\125\121\134\133" +
    "\u0152\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\134\u0156\001\001\000\004\135\u0158\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\026\012\133\020\112\026\122\031\117" +
    "\041\110\065\u015f\066\131\075\113\106\125\121\134\001" +
    "\001\000\002\001\001\000\004\030\u0166\001\001\000\002" +
    "\001\001\000\004\030\u0164\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\022\050\314\052\313\053\311\054\310\055\307" +
    "\056\322\063\u016c\070\u016e\001\001\000\004\071\u016f\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\072\u0172\001\001\000\002\001" +
    "\001\000\002\001\001\000\030\012\133\020\112\026\122" +
    "\031\117\041\110\065\u0177\066\131\073\u0175\075\113\106" +
    "\125\121\134\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\074\u0178\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\017\u017f\001\001\000\002\001" +
    "\001\000\002\001\001\000\012\015\214\016\u010c\036\u010d" +
    "\040\u0182\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\140\u0188\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\010\022" +
    "\067\025\u0192\147\u0191\001\001\000\002\001\001\000\004" +
    "\150\u0194\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\151\u0197\001\001\000\002\001\001\000\002\001\001" +
    "\000\030\012\133\020\112\026\122\031\117\041\110\065" +
    "\u019a\066\131\075\113\106\125\121\134\152\u019b\001\001" +
    "\000\002\001\001\000\004\153\u019c\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\004\u01a6\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\005\u01a9\001\001\000\002\001\001\000\002\001" +
    "\001\000\006\004\u01af\007\u01b1\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\006\u01ac\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$parser$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$parser$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$parser$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}



    
    public void syntax_error(Symbol s){
        System.out.println("Error sintactico: " + s.value.toString() + " Linea:" + s.right + " Columna:" + s.left);
    }

    public void unrecovered_syntax_error(Symbol s) throws java.lang.Exception {
        System.out.println("No se pudo recuperar el analizador. Linea:" + s.right + " Columna:" + s.left);
    }



/** Cup generated class to encapsulate user supplied action code.*/
@SuppressWarnings({"rawtypes", "unchecked", "unused"})
class CUP$parser$actions {
  private final parser parser;

  /** Constructor */
  CUP$parser$actions(parser parser) {
    this.parser = parser;
  }

  /** Method 0 with the actual generated action code for actions 0 to 300. */
  public final java_cup.runtime.Symbol CUP$parser$do_action_part00000000(
    int                        CUP$parser$act_num,
    java_cup.runtime.lr_parser CUP$parser$parser,
    java.util.Stack            CUP$parser$stack,
    int                        CUP$parser$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$parser$result;

      /* select the action based on the action number */
      switch (CUP$parser$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= s0 EOF 
            {
              Object RESULT =null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String start_val = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		RESULT = start_val;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$parser$parser.done_parsing();
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // s0 ::= s1 s0 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s0",113, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // s0 ::= s95 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s0",113, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // s0 ::= 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s0",113, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // s1 ::= IMPORT s2 
            {
              String RESULT =null;
		int v1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int v1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String v1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int v2left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int v2right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String v2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s1",0, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // s1 ::= error 
            {
              String RESULT =null;
		System.out.println("Se esperaba import o la definicion de una clase.");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s1",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // s2 ::= ID s3 
            {
              String RESULT =null;
		int v1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int v1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String v1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int v2left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int v2right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String v2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		RESULT=v1 + v2;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s2",1, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // s2 ::= error 
            {
              String RESULT =null;
		System.out.println("Se esperaba el nombre del paquete");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s2",1, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // s3 ::= PUNTO s4 
            {
              String RESULT =null;
		int v1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int v1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String v1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int v2left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int v2right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String v2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		RESULT=v1 + v2;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s3",2, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // s3 ::= error 
            {
              String RESULT =null;
		System.out.println("Se esperaba un punto, punto coma, o el import es muy corto Ej: import pack;");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s3",2, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // s4 ::= POR s5 
            {
              String RESULT =null;
		int v1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int v1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String v1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int v2left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int v2right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String v2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		RESULT = v1 + v2;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s4",3, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // s4 ::= ID s6 
            {
              String RESULT =null;
		int v1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int v1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String v1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int v2left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int v2right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String v2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		RESULT = v1 + v2;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s4",3, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // s4 ::= error 
            {
              String RESULT =null;
		System.out.println("Se esperaba * o id");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s4",3, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // s5 ::= P_COMA 
            {
              String RESULT =null;
		int v1left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int v1right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String v1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		RESULT=v1;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s5",4, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // s5 ::= error 
            {
              String RESULT =null;
		System.out.println("Se esperaba un punto y coma");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s5",4, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // s6 ::= P_COMA 
            {
              String RESULT =null;
		int v1left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int v1right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String v1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		RESULT=v1;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s6",5, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // s6 ::= s3 
            {
              String RESULT =null;
		int v1left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int v1right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String v1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		RESULT=v1;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s6",5, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // s12 ::= FINAL s9 
            {
              String RESULT =null;
		int v1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int v1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String v1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int v2left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int v2right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String v2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		RESULT=v1+" "+v2;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s12",14, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // s12 ::= s9 
            {
              String RESULT =null;
		int v1left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int v1right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String v1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		RESULT=v1;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s12",14, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // s12 ::= THIS PUNTO ID s13 
            {
              String RESULT =null;
		int v1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int v1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String v1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int v2left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int v2right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String v2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		RESULT=v1+" "+v2;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s12",14, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // s12 ::= ID s13 
            {
              String RESULT =null;
		int v1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int v1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String v1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int v2left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int v2right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String v2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		RESULT=v1+" "+v2;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s12",14, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // s13 ::= ASIGNACION exp P_COMA 
            {
              String RESULT =null;
		int v1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int v1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		String v1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int v2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int v2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String v2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int v3left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int v3right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String v3 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		RESULT=v1 + " " + v2 + " " + v3;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s13",15, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // s13 ::= ASIGNACION ID P_COMA 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s13",15, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // parametro ::= s14 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro",19, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // parametro ::= 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro",19, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // s14 ::= INT s15 
            {
              String RESULT =null;
		int v1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int v1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String v1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int v2left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int v2right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String v2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		RESULT=v1 + " " + v2;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s14",16, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // s14 ::= BOOLEAN s15 
            {
              String RESULT =null;
		int v1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int v1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String v1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int v2left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int v2right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String v2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		RESULT=v1 + " " + v2;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s14",16, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // s14 ::= STRING s15 
            {
              String RESULT =null;
		int v1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int v1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String v1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int v2left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int v2right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String v2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		RESULT=v1 + " " + v2;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s14",16, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // s14 ::= CHAR s15 
            {
              String RESULT =null;
		int v1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int v1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String v1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int v2left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int v2right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String v2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		RESULT=v1 + " " + v2;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s14",16, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // s14 ::= DOUBLE s15 
            {
              String RESULT =null;
		int v1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int v1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String v1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int v2left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int v2right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String v2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		RESULT=v1 + " " + v2;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s14",16, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // s14 ::= ID s15 
            {
              String RESULT =null;
		int v1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int v1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String v1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int v2left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int v2right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String v2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		RESULT=v1 + " " + v2;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s14",16, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // s15 ::= ID s16 
            {
              String RESULT =null;
		int v1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int v1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String v1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int v2left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int v2right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String v2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		RESULT=v1 + " " + v2;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s15",17, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // s15 ::= error 
            {
              String RESULT =null;
		System.out.println("Se esperaba un id");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s15",17, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // s16 ::= COMA s14 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s16",18, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // s16 ::= 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s16",18, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // s105 ::= RETURN s106 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s105",20, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // s106 ::= valor s107 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s106",21, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // s106 ::= ID s107 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s106",21, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // s106 ::= error 
            {
              String RESULT =null;
		System.out.println("Se esperaba un valor y punto y coma");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s106",21, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // s107 ::= P_COMA 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s107",22, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // s108 ::= ID s109 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s108",23, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // s108 ::= THIS PUNTO ID s109 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s108",23, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // s109 ::= PARENTESIS_A s110 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s109",24, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 43: // s110 ::= argumento s111 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s110",25, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 44: // s110 ::= error 
            {
              String RESULT =null;
		System.out.println("Se esperaban los argumentos o )");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s110",25, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 45: // s111 ::= PARENTESIS_C s112 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s111",26, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 46: // s112 ::= P_COMA 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s112",27, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 47: // s112 ::= error 
            {
              String RESULT =null;
		System.out.println("Se esperaba punto y coma ");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s112",27, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 48: // argumento ::= s113 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("argumento",30, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 49: // argumento ::= 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("argumento",30, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 50: // s113 ::= ID s114 
            {
              String RESULT =null;
		int v1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int v1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String v1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int v2left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int v2right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String v2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		RESULT=v1 + " " + v2;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s113",28, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 51: // s113 ::= exp s114 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s113",28, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 52: // s114 ::= COMA s113 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s114",29, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 53: // s114 ::= 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s114",29, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 54: // s114 ::= error 
            {
              String RESULT =null;
		System.out.println("Se esperaba argumentos o )");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s114",29, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 55: // s17 ::= IF s18 
            {
              String RESULT =null;
		int v1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int v1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String v1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int v2left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int v2right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String v2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s17",31, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 56: // s18 ::= PARENTESIS_A s19 
            {
              String RESULT =null;
		int v1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int v1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String v1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s18",32, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 57: // s18 ::= error 
            {
              String RESULT =null;
		System.out.println("Se esperaba ( ");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s18",32, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 58: // s19 ::= condicion s20 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s19",33, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 59: // s19 ::= error 
            {
              String RESULT =null;
		System.out.println("Se esperaba una condicion valida");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s19",33, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 60: // condicion ::= NOT s24 s25 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("condicion",49, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 61: // condicion ::= s24 s25 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("condicion",49, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 62: // condicion ::= NOT s26 s25 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("condicion",49, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 63: // condicion ::= s26 s25 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("condicion",49, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 64: // condicion ::= s27 s25 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("condicion",49, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 65: // condicion ::= s28 s25 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("condicion",49, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 66: // s25 ::= AND condicion 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s25",39, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 67: // s25 ::= OR condicion 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s25",39, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 68: // s25 ::= 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s25",39, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 69: // s28 ::= s29 opcompa s29 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s28",42, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 70: // s28 ::= PARENTESIS_A s28 PARENTESIS_C 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s28",42, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 71: // s26 ::= ID 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s26",40, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 72: // s26 ::= PARENTESIS_A s26 PARENTESIS_C 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s26",40, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 73: // s27 ::= ID opcompa s29 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s27",41, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 74: // s27 ::= ID opcompa ID 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s27",41, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 75: // s27 ::= ID IGUAL TRUE 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s27",41, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 76: // s27 ::= ID IGUAL FALSE 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s27",41, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 77: // s27 ::= ID DIFERENTE TRUE 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s27",41, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 78: // s27 ::= ID DIFERENTE FALSE 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s27",41, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 79: // s27 ::= PARENTESIS_A s27 PARENTESIS_C 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s27",41, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 80: // s24 ::= TRUE 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s24",38, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 81: // s24 ::= FALSE 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s24",38, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 82: // s24 ::= PARENTESIS_A condicion PARENTESIS_C 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s24",38, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 83: // s20 ::= PARENTESIS_C s21 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s20",34, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 84: // s20 ::= error 
            {
              String RESULT =null;
		System.out.println("Se esperaba el ) ");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s20",34, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 85: // s21 ::= LLAVE_A s22 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s21",35, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 86: // s21 ::= error 
            {
              String RESULT =null;
		System.out.println("Se esperaba { ");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s21",35, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 87: // s22 ::= sentences s23 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s22",36, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 88: // s22 ::= error 
            {
              String RESULT =null;
		System.out.println("Se esperaban las sentencias o } ");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s22",36, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 89: // sentences ::= s17 sentences 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("sentences",51, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 90: // sentences ::= s35 sentences 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("sentences",51, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 91: // sentences ::= s42 sentences 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("sentences",51, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 92: // sentences ::= s51 sentences 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("sentences",51, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 93: // sentences ::= s62 sentences 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("sentences",51, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 94: // sentences ::= s12 sentences 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("sentences",51, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 95: // sentences ::= s105 sentences 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("sentences",51, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 96: // sentences ::= s108 sentences 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("sentences",51, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 97: // sentences ::= 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("sentences",51, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 98: // s23 ::= LLAVE_C s31 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s23",37, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 99: // opcompa ::= DIFERENTE 
            {
              String RESULT =null;
		int v1left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int v1right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String v1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		RESULT=v1;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("opcompa",50, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 100: // opcompa ::= MAYOR_IGUAL 
            {
              String RESULT =null;
		int v1left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int v1right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String v1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		RESULT=v1;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("opcompa",50, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 101: // opcompa ::= MAYOR_QUE 
            {
              String RESULT =null;
		int v1left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int v1right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String v1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		RESULT=v1;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("opcompa",50, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 102: // opcompa ::= MENOR_IGUAL 
            {
              String RESULT =null;
		int v1left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int v1right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String v1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		RESULT=v1;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("opcompa",50, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 103: // opcompa ::= MENOR_QUE 
            {
              String RESULT =null;
		int v1left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int v1right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String v1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		RESULT=v1;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("opcompa",50, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 104: // opcompa ::= IGUAL 
            {
              String RESULT =null;
		int v1left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int v1right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String v1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		RESULT=v1;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("opcompa",50, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 105: // s29 ::= s29 MAS s29 
            {
              String RESULT =null;
		int v1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int v1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		String v1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int v2left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int v2right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String v2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		RESULT = v1 + "+" + v2;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s29",43, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 106: // s29 ::= s29 MENOS s29 
            {
              String RESULT =null;
		int v1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int v1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		String v1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int v2left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int v2right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String v2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		RESULT = v1 + "-" + v2;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s29",43, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 107: // s29 ::= s29 POR s29 
            {
              String RESULT =null;
		int v1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int v1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		String v1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int v2left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int v2right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String v2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		RESULT = v1 + "*" + v2;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s29",43, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 108: // s29 ::= s29 DIVISION s29 
            {
              String RESULT =null;
		int v1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int v1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		String v1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int v2left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int v2right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String v2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		RESULT = v1 + "/" + v2;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s29",43, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 109: // s29 ::= PARENTESIS_A s29 PARENTESIS_C 
            {
              String RESULT =null;
		int v1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int v1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		String v1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int v2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int v2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String v2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int v3left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int v3right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String v3 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		RESULT = v1+v2+v3;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s29",43, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 110: // s29 ::= s30 
            {
              String RESULT =null;
		int v1left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int v1right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String v1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		RESULT = v1;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s29",43, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 111: // s30 ::= CADENA 
            {
              String RESULT =null;
		int v1left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int v1right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String v1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		RESULT=v1;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s30",44, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 112: // s30 ::= CARACTER 
            {
              String RESULT =null;
		int v1left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int v1right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String v1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		RESULT=v1;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s30",44, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 113: // s30 ::= NULL 
            {
              String RESULT =null;
		int v1left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int v1right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String v1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		RESULT=v1;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s30",44, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 114: // s30 ::= ENTERO 
            {
              String RESULT =null;
		int v1left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int v1right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String v1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		RESULT=v1;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s30",44, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 115: // s30 ::= DECIMAL 
            {
              String RESULT =null;
		int v1left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int v1right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String v1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		RESULT=v1;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s30",44, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 116: // s31 ::= ELSE s32 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s31",45, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 117: // s31 ::= 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s31",45, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 118: // s32 ::= LLAVE_A s33 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s32",46, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 119: // s32 ::= error 
            {
              String RESULT =null;
		System.out.println("Se esperaba { ");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s32",46, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 120: // s33 ::= sentences s34 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s33",47, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 121: // s33 ::= error 
            {
              String RESULT =null;
		System.out.println("Se esperaban las sentencias o } ");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s33",47, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 122: // s34 ::= LLAVE_C 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s34",48, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 123: // s35 ::= WHILE s36 
            {
              String RESULT =null;
		int v1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int v1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String v1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int v2left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int v2right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String v2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s35",52, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 124: // s36 ::= PARENTESIS_A s37 
            {
              String RESULT =null;
		int v1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int v1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String v1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s36",53, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 125: // s36 ::= error 
            {
              String RESULT =null;
		System.out.println("Se esperaba ( ");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s36",53, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 126: // s37 ::= condicion s38 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s37",54, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 127: // s37 ::= error 
            {
              String RESULT =null;
		System.out.println("Se esperaba una condicion valida");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s37",54, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 128: // s38 ::= PARENTESIS_C s39 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s38",55, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 129: // s38 ::= error 
            {
              String RESULT =null;
		System.out.println("Se esperaba ) ");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s38",55, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 130: // s39 ::= LLAVE_A s40 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s39",56, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 131: // s39 ::= error 
            {
              String RESULT =null;
		System.out.println("Se esperaba { ");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s39",56, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 132: // s40 ::= sentences s41 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s40",57, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 133: // s40 ::= error 
            {
              String RESULT =null;
		System.out.println("Se esperaban las sentencias o } ");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s40",57, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 134: // s41 ::= LLAVE_C 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s41",58, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 135: // s42 ::= DO s43 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s42",59, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 136: // s43 ::= LLAVE_A s44 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s43",60, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 137: // s43 ::= error 
            {
              String RESULT =null;
		System.out.println("Se esperaba { ");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s43",60, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 138: // s44 ::= sentences s45 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s44",61, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 139: // s44 ::= error 
            {
              String RESULT =null;
		System.out.println("Se esperaban las sentencias o } ");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s44",61, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 140: // s45 ::= LLAVE_C s46 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s45",62, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 141: // s46 ::= WHILE s47 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s46",63, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 142: // s46 ::= error 
            {
              String RESULT =null;
		System.out.println("Se esperaba while ");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s46",63, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 143: // s47 ::= PARENTESIS_A s48 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s47",64, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 144: // s47 ::= error 
            {
              String RESULT =null;
		System.out.println("Se esperaba ( ");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s47",64, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 145: // s48 ::= condicion s49 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s48",65, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 146: // s48 ::= error 
            {
              String RESULT =null;
		System.out.println("Se esperaba una condicion valida");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s48",65, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 147: // s49 ::= PARENTESIS_C s50 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s49",66, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 148: // s49 ::= error 
            {
              String RESULT =null;
		System.out.println("Se esperaba ) ");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s49",66, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 149: // s50 ::= P_COMA 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s50",67, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 150: // s50 ::= error 
            {
              String RESULT =null;
		System.out.println("Se esperaba el ; ");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s50",67, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 151: // s51 ::= FOR s52 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s51",68, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 152: // s52 ::= PARENTESIS_A s53 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s52",69, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 153: // s52 ::= error 
            {
              String RESULT =null;
		System.out.println("Se esperaba ( ");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s52",69, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 154: // s53 ::= s58 s54 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s53",70, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 155: // s53 ::= error 
            {
              String RESULT =null;
		System.out.println("Se esperaba unos limites validos");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s53",70, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 156: // s54 ::= PARENTESIS_C s55 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s54",71, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 157: // s54 ::= error 
            {
              String RESULT =null;
		System.out.println("Se esperaba ) ");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s54",71, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 158: // s55 ::= LLAVE_A s56 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s55",72, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 159: // s55 ::= error 
            {
              String RESULT =null;
		System.out.println("Se esperaba {");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s55",72, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 160: // s56 ::= sentences s57 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s56",73, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 161: // s56 ::= error 
            {
              String RESULT =null;
		System.out.println("Se esperaban las sentencias o } ");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s56",73, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 162: // s57 ::= LLAVE_C 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s57",74, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 163: // s58 ::= s12 ID opcompa s59 P_COMA s60 
            {
              String RESULT =null;
		int v1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).left;
		int v1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).right;
		String v1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		int v2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left;
		int v2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).right;
		String v2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		int v3left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int v3right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		String v3 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		int v4left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int v4right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		String v4 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int v5left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int v5right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String v5 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int v6left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int v6right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String v6 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s58",75, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 164: // s60 ::= ID INCREMENTO 
            {
              String RESULT =null;
		int v1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int v1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String v1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int v2left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int v2right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String v2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		RESULT=v1+" "+v2;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s60",77, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 165: // s60 ::= ID DECREMENTO 
            {
              String RESULT =null;
		int v1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int v1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String v1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int v2left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int v2right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String v2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		RESULT=v1+" "+v2;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s60",77, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 166: // s60 ::= ID ASIGNACION s59 
            {
              String RESULT =null;
		int v1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int v1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		String v1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int v2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int v2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String v2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int v3left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int v3right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String v3 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		RESULT=v1+" "+v2+" "+v3;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s60",77, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 167: // s59 ::= s59 MAS s59 
            {
              String RESULT =null;
		int v1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int v1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		String v1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int v2left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int v2right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String v2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		RESULT = v1 + "+" + v2;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s59",76, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 168: // s59 ::= s59 MENOS s59 
            {
              String RESULT =null;
		int v1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int v1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		String v1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int v2left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int v2right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String v2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		RESULT = v1 + "/" + v2;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s59",76, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 169: // s59 ::= PARENTESIS_A s59 PARENTESIS_C 
            {
              String RESULT =null;
		int v1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int v1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		String v1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int v2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int v2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String v2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int v3left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int v3right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String v3 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		RESULT = v1+v2+v3;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s59",76, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 170: // s59 ::= s61 
            {
              String RESULT =null;
		int v1left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int v1right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String v1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		RESULT = v1;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s59",76, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 171: // s59 ::= error 
            {
              String RESULT =null;
		System.out.println("Se esperaba un valor");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s59",76, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 172: // s61 ::= ID 
            {
              String RESULT =null;
		int v1left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int v1right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String v1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		RESULT=v1;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s61",78, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 173: // s61 ::= ENTERO 
            {
              String RESULT =null;
		int v1left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int v1right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String v1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		RESULT=v1;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s61",78, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 174: // s61 ::= DECIMAL 
            {
              String RESULT =null;
		int v1left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int v1right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String v1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		RESULT=v1;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s61",78, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 175: // s62 ::= SWITCH s63 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s62",79, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 176: // s63 ::= PARENTESIS_A s64 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s63",80, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 177: // s63 ::= error 
            {
              String RESULT =null;
		System.out.println("Se esperaba (");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s63",80, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 178: // s64 ::= ID s65 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s64",81, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 179: // s64 ::= error 
            {
              String RESULT =null;
		System.out.println("Se esperaba un id");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s64",81, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 180: // s65 ::= PARENTESIS_C s66 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s65",82, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 181: // s65 ::= error 
            {
              String RESULT =null;
		System.out.println("Se esperaba )");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s65",82, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 182: // s66 ::= LLAVE_A s67 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s66",83, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 183: // s66 ::= error 
            {
              String RESULT =null;
		System.out.println("Se esperaba {");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s66",83, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 184: // s67 ::= s68 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s67",84, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 185: // s67 ::= error 
            {
              String RESULT =null;
		System.out.println("Se esperaban los casos o }");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s67",84, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 186: // s68 ::= CASE s69 s68 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s68",85, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 187: // s68 ::= s75 LLAVE_C 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s68",85, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 188: // s68 ::= LLAVE_C 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s68",85, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 189: // s69 ::= s70 s71 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s69",86, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 190: // s70 ::= valor 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s70",87, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 191: // s70 ::= error 
            {
              String RESULT =null;
		System.out.println("Se esperaba un valor");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s70",87, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 192: // s71 ::= DOS_PUNTOS s72 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s71",88, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 193: // s71 ::= error 
            {
              String RESULT =null;
		System.out.println("Se esperaban dos puntos");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s71",88, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 194: // s72 ::= sentences s73 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s72",89, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 195: // s72 ::= error 
            {
              String RESULT =null;
		System.out.println("Se esperaban las sentencias,case,break,default o }");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s72",89, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 196: // s73 ::= BREAK s74 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s73",90, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 197: // s73 ::= 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s73",90, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 198: // s74 ::= P_COMA 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s74",91, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 199: // s74 ::= error 
            {
              String RESULT =null;
		System.out.println("Se esperaba punto y coma");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s74",91, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 200: // s75 ::= DEFAULT s76 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s75",92, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 201: // s76 ::= DOS_PUNTOS sentences 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s76",93, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 202: // s76 ::= error 
            {
              String RESULT =null;
		System.out.println("Se esperaba dos puntos");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s76",93, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 203: // s95 ::= PUBLIC s96 
            {
              String RESULT =null;
		int v1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int v1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String v1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int v2left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int v2right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String v2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s95",106, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 204: // s95 ::= s96 
            {
              String RESULT =null;
		int v1left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int v1right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String v1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s95",106, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 205: // s96 ::= CLASS s97 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s96",107, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 206: // s97 ::= ID s98 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s97",108, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 207: // s97 ::= error 
            {
              String RESULT =null;
		System.out.println("Se esperaba el nombre de la clase");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s97",108, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 208: // s98 ::= LLAVE_A s99 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s98",109, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 209: // s98 ::= error 
            {
              String RESULT =null;
		System.out.println("Se esperaba {");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s98",109, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 210: // s99 ::= s7 s99 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s99",110, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 211: // s99 ::= LLAVE_C 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s99",110, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 212: // s99 ::= error 
            {
              String RESULT =null;
		System.out.println("Se esperaban los miembro de la clase, constructor o }");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s99",110, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 213: // s7 ::= PUBLIC s101 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s7",6, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 214: // s7 ::= PRIVATED s101 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s7",6, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 215: // s7 ::= PROTECTED s101 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s7",6, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 216: // s7 ::= s101 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s7",6, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 217: // s101 ::= s8 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s101",111, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 218: // s101 ::= ID s89 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s101",111, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 219: // s8 ::= FINAL s9 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s8",7, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 220: // s8 ::= s9 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s8",7, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 221: // s9 ::= INT s10 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s9",8, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 222: // s9 ::= BOOLEAN s10 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s9",8, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 223: // s9 ::= STRING s10 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s9",8, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 224: // s9 ::= CHAR s10 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s9",8, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 225: // s9 ::= DOUBLE s10 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s9",8, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 226: // s9 ::= ID s10 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s9",8, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 227: // s9 ::= VOID ID s81 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s9",8, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 228: // s10 ::= ID s104 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s10",9, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 229: // s10 ::= error 
            {
              String RESULT =null;
		System.out.println("Se esperaba un identificador");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s10",9, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 230: // s104 ::= s11 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s104",112, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 231: // s104 ::= s81 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s104",112, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 232: // s11 ::= s115 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s11",10, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 233: // s11 ::= ASIGNACION exp s115 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s11",10, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 234: // s11 ::= ASIGNACION NEW ID PARENTESIS_A argumento PARENTESIS_C P_COMA 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s11",10, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 235: // s11 ::= error 
            {
              String RESULT =null;
		System.out.println("Se esperaba punto y coma, signo igual o (");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s11",10, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 236: // s115 ::= COMA s10 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s115",13, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 237: // s115 ::= P_COMA 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s115",13, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 238: // exp ::= exp MAS exp 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("exp",12, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 239: // exp ::= exp MENOS exp 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("exp",12, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 240: // exp ::= exp POR exp 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("exp",12, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 241: // exp ::= exp DIVISION exp 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("exp",12, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 242: // exp ::= PARENTESIS_A exp PARENTESIS_C 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("exp",12, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 243: // exp ::= valor 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("exp",12, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 244: // exp ::= error 
            {
              String RESULT =null;
		System.out.println("Se esperaba un valor");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("exp",12, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 245: // valor ::= CADENA 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("valor",11, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 246: // valor ::= TRUE 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("valor",11, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 247: // valor ::= FALSE 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("valor",11, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 248: // valor ::= CARACTER 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("valor",11, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 249: // valor ::= NULL 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("valor",11, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 250: // valor ::= ENTERO 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("valor",11, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 251: // valor ::= DECIMAL 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("valor",11, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 252: // s81 ::= PARENTESIS_A s82 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s81",94, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 253: // s82 ::= parametro s83 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s82",95, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 254: // s82 ::= error 
            {
              String RESULT =null;
		System.out.println("Se esperaban los parametros o ) ");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s82",95, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 255: // s83 ::= PARENTESIS_C s84 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s83",96, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 256: // s84 ::= LLAVE_A s85 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s84",97, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 257: // s84 ::= error 
            {
              String RESULT =null;
		System.out.println("Se esperaba {");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s84",97, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 258: // s85 ::= sentences s86 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s85",98, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 259: // s85 ::= error 
            {
              String RESULT =null;
		System.out.println("Se esperaban las sentencias o } ");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s85",98, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 260: // s86 ::= LLAVE_C 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s86",99, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 261: // s89 ::= PARENTESIS_A s90 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s89",100, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 262: // s90 ::= parametro s91 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s90",101, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 263: // s90 ::= error 
            {
              String RESULT =null;
		System.out.println("Se esperaban los parametros o ) ");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s90",101, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 264: // s91 ::= PARENTESIS_C s92 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s91",102, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 265: // s92 ::= LLAVE_A s93 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s92",103, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 266: // s92 ::= error 
            {
              String RESULT =null;
		System.out.println("Se esperaba { ");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s92",103, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 267: // s93 ::= sentences s94 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s93",104, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 268: // s93 ::= error 
            {
              String RESULT =null;
		System.out.println("Se esperaban las sentencias o }");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s93",104, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 269: // s94 ::= LLAVE_C 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s94",105, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number "+CUP$parser$act_num+"found in internal parse table");

        }
    } /* end of method */

  /** Method splitting the generated action code into several parts. */
  public final java_cup.runtime.Symbol CUP$parser$do_action(
    int                        CUP$parser$act_num,
    java_cup.runtime.lr_parser CUP$parser$parser,
    java.util.Stack            CUP$parser$stack,
    int                        CUP$parser$top)
    throws java.lang.Exception
    {
              return CUP$parser$do_action_part00000000(
                               CUP$parser$act_num,
                               CUP$parser$parser,
                               CUP$parser$stack,
                               CUP$parser$top);
    }
}

}


//----------------------------------------------------
// The following code was generated by CUP v0.11b 20160615 (GIT 4ac7450)
//----------------------------------------------------

package midik.cup;

import java_cup.runtime.Symbol;
import midik.tablaSimbolos.Termino;
import midik.tablaSimbolos.Visibilidad;
import midik.tablaSimbolos.Roles;
import midik.tablaSimbolos.TablaSimbolos;
import java_cup.runtime.XMLElement;

/** CUP v0.11b 20160615 (GIT 4ac7450) generated parser.
  */
@SuppressWarnings({"rawtypes"})
public class parser extends java_cup.runtime.lr_parser {

 public final Class getSymbolContainer() {
    return sym.class;
}

  /** Default constructor. */
  @Deprecated
  public parser() {super();}

  /** Constructor which sets the default scanner. */
  @Deprecated
  public parser(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public parser(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\u0114\000\002\002\004\000\002\163\004\000\002\163" +
    "\003\000\002\163\002\000\002\002\004\000\002\002\003" +
    "\000\002\003\004\000\002\003\003\000\002\004\004\000" +
    "\002\004\003\000\002\005\004\000\002\005\004\000\002" +
    "\005\003\000\002\006\003\000\002\006\003\000\002\007" +
    "\003\000\002\007\003\000\002\020\004\000\002\020\003" +
    "\000\002\020\006\000\002\020\004\000\002\021\005\000" +
    "\002\021\005\000\002\021\011\000\002\010\004\000\002" +
    "\010\004\000\002\010\004\000\002\010\003\000\002\161" +
    "\003\000\002\164\002\000\002\161\005\000\002\011\004" +
    "\000\002\011\003\000\002\012\004\000\002\012\004\000" +
    "\002\012\004\000\002\012\004\000\002\012\004\000\002" +
    "\012\004\000\002\165\002\000\002\012\006\000\002\166" +
    "\002\000\002\013\005\000\002\013\003\000\002\162\003" +
    "\000\002\162\003\000\002\014\003\000\002\014\005\000" +
    "\002\014\011\000\002\014\003\000\002\017\004\000\002" +
    "\017\003\000\002\016\005\000\002\016\005\000\002\016" +
    "\005\000\002\016\005\000\002\016\005\000\002\016\003" +
    "\000\002\016\003\000\002\015\003\000\002\015\003\000" +
    "\002\015\003\000\002\015\003\000\002\015\003\000\002" +
    "\015\003\000\002\015\003\000\002\167\002\000\002\140" +
    "\005\000\002\141\004\000\002\141\003\000\002\142\004" +
    "\000\002\143\004\000\002\143\003\000\002\144\004\000" +
    "\002\144\003\000\002\145\003\000\002\025\003\000\002" +
    "\025\002\000\002\022\004\000\002\022\004\000\002\022" +
    "\004\000\002\022\004\000\002\022\004\000\002\022\004" +
    "\000\002\023\004\000\002\023\003\000\002\024\004\000" +
    "\002\024\002\000\002\026\004\000\002\027\004\000\002" +
    "\027\004\000\002\027\003\000\002\030\003\000\002\031" +
    "\004\000\002\031\006\000\002\032\004\000\002\033\004" +
    "\000\002\033\003\000\002\034\004\000\002\035\003\000" +
    "\002\035\003\000\002\040\003\000\002\040\002\000\002" +
    "\036\004\000\002\036\004\000\002\037\004\000\002\037" +
    "\002\000\002\037\003\000\002\041\004\000\002\042\004" +
    "\000\002\042\003\000\002\043\004\000\002\043\003\000" +
    "\002\063\005\000\002\063\004\000\002\063\005\000\002" +
    "\063\004\000\002\063\004\000\002\063\004\000\002\051" +
    "\004\000\002\051\004\000\002\051\002\000\002\054\005" +
    "\000\002\054\005\000\002\052\003\000\002\052\005\000" +
    "\002\053\005\000\002\053\005\000\002\053\005\000\002" +
    "\053\005\000\002\053\005\000\002\053\005\000\002\053" +
    "\005\000\002\050\003\000\002\050\003\000\002\050\005" +
    "\000\002\044\004\000\002\044\003\000\002\045\004\000" +
    "\002\045\003\000\002\046\004\000\002\046\003\000\002" +
    "\065\004\000\002\065\004\000\002\065\004\000\002\065" +
    "\004\000\002\065\004\000\002\065\004\000\002\065\004" +
    "\000\002\065\004\000\002\065\002\000\002\047\004\000" +
    "\002\064\003\000\002\064\003\000\002\064\003\000\002" +
    "\064\003\000\002\064\003\000\002\064\003\000\002\055" +
    "\005\000\002\055\005\000\002\055\005\000\002\055\005" +
    "\000\002\055\005\000\002\055\003\000\002\056\003\000" +
    "\002\056\003\000\002\056\003\000\002\056\003\000\002" +
    "\056\003\000\002\057\004\000\002\057\002\000\002\060" +
    "\004\000\002\060\003\000\002\061\004\000\002\061\003" +
    "\000\002\062\003\000\002\066\004\000\002\067\004\000" +
    "\002\067\003\000\002\070\004\000\002\070\003\000\002" +
    "\071\004\000\002\071\003\000\002\072\004\000\002\072" +
    "\003\000\002\073\004\000\002\073\003\000\002\074\003" +
    "\000\002\075\004\000\002\076\004\000\002\076\003\000" +
    "\002\077\004\000\002\077\003\000\002\100\004\000\002" +
    "\101\004\000\002\101\003\000\002\102\004\000\002\102" +
    "\003\000\002\103\004\000\002\103\003\000\002\104\004" +
    "\000\002\104\003\000\002\105\003\000\002\105\003\000" +
    "\002\106\004\000\002\107\004\000\002\107\003\000\002" +
    "\110\004\000\002\110\003\000\002\111\004\000\002\111" +
    "\003\000\002\112\004\000\002\112\003\000\002\113\004" +
    "\000\002\113\003\000\002\114\003\000\002\115\010\000" +
    "\002\117\004\000\002\117\004\000\002\117\005\000\002" +
    "\116\005\000\002\116\005\000\002\116\005\000\002\116" +
    "\003\000\002\116\003\000\002\120\003\000\002\120\003" +
    "\000\002\120\003\000\002\121\004\000\002\122\004\000" +
    "\002\122\003\000\002\123\004\000\002\123\003\000\002" +
    "\124\004\000\002\124\003\000\002\125\004\000\002\125" +
    "\003\000\002\126\003\000\002\126\003\000\002\127\005" +
    "\000\002\127\004\000\002\127\003\000\002\130\004\000" +
    "\002\131\003\000\002\131\003\000\002\132\004\000\002" +
    "\132\003\000\002\133\004\000\002\133\003\000\002\134" +
    "\004\000\002\134\002\000\002\135\003\000\002\135\003" +
    "\000\002\136\004\000\002\137\004\000\002\137\003\000" +
    "\002\154\004\000\002\154\003\000\002\155\004\000\002" +
    "\170\002\000\002\156\005\000\002\156\003\000\002\157" +
    "\004\000\002\157\003\000\002\160\004\000\002\160\003" +
    "\000\002\160\003\000\002\146\004\000\002\147\004\000" +
    "\002\147\003\000\002\150\004\000\002\151\004\000\002" +
    "\151\003\000\002\152\004\000\002\152\003\000\002\153" +
    "\003" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\u01bb\000\014\002\ufffe\003\005\004\004\005\013\010" +
    "\012\001\002\000\006\003\u01b0\056\u01ae\001\002\000\014" +
    "\002\ufffc\003\ufffc\004\ufffc\005\ufffc\010\ufffc\001\002\000" +
    "\014\002\ufffe\003\005\004\004\005\013\010\012\001\002" +
    "\000\004\002\u01ac\001\002\000\004\002\uff00\001\002\000" +
    "\004\002\uffff\001\002\000\006\003\016\056\015\001\002" +
    "\000\004\010\012\001\002\000\004\002\uff01\001\002\000" +
    "\006\003\ufefe\032\ufefe\001\002\000\004\002\ufefc\001\002" +
    "\000\004\002\ufeff\001\002\000\006\003\021\032\023\001" +
    "\002\000\004\002\ufefa\001\002\000\004\002\ufefd\001\002" +
    "\000\034\003\036\005\030\006\026\007\034\011\024\012" +
    "\031\013\032\014\045\015\025\024\035\033\037\056\027" +
    "\071\041\001\002\000\006\003\047\056\046\001\002\000" +
    "\006\003\047\056\046\001\002\000\022\011\024\012\031" +
    "\013\032\014\045\015\025\024\035\056\027\071\041\001" +
    "\002\000\010\003\047\034\uffe4\056\046\001\002\000\022" +
    "\011\024\012\031\013\032\014\045\015\025\024\035\056" +
    "\027\071\041\001\002\000\006\003\047\056\046\001\002" +
    "\000\006\003\047\056\046\001\002\000\034\003\uffe6\005" +
    "\uffe6\006\uffe6\007\uffe6\011\uffe6\012\uffe6\013\uffe6\014\uffe6" +
    "\015\uffe6\024\uffe6\033\uffe6\056\uffe6\071\uffe6\001\002\000" +
    "\022\011\024\012\031\013\032\014\045\015\025\024\035" +
    "\056\027\071\041\001\002\000\020\011\024\012\031\013" +
    "\032\014\045\015\025\056\301\071\041\001\002\000\004" +
    "\002\ufef7\001\002\000\004\002\ufef8\001\002\000\004\002" +
    "\ufefb\001\002\000\004\056\u0191\001\002\000\034\003\uffe1" +
    "\005\uffe1\006\uffe1\007\uffe1\011\uffe1\012\uffe1\013\uffe1\014" +
    "\uffe1\015\uffe1\024\uffe1\033\uffe1\056\uffe1\071\uffe1\001\002" +
    "\000\034\003\uffe5\005\uffe5\006\uffe5\007\uffe5\011\uffe5\012" +
    "\uffe5\013\uffe5\014\uffe5\015\uffe5\024\uffe5\033\uffe5\056\uffe5" +
    "\071\uffe5\001\002\000\034\003\036\005\030\006\026\007" +
    "\034\011\024\012\031\013\032\014\045\015\025\024\035" +
    "\033\037\056\027\071\041\001\002\000\006\003\047\056" +
    "\046\001\002\000\014\003\uffd8\027\uffd8\031\uffd8\034\uffd8" +
    "\045\uffd8\001\002\000\060\003\uffd6\005\uffd6\006\uffd6\007" +
    "\uffd6\011\uffd6\012\uffd6\013\uffd6\014\uffd6\015\uffd6\016\uffd6" +
    "\020\uffd6\021\uffd6\022\uffd6\023\uffd6\024\uffd6\025\uffd6\026" +
    "\uffd6\033\uffd6\056\uffd6\066\uffd6\067\uffd6\071\uffd6\073\uffd6" +
    "\001\002\000\060\003\uffdc\005\uffdc\006\uffdc\007\uffdc\011" +
    "\uffdc\012\uffdc\013\uffdc\014\uffdc\015\uffdc\016\uffdc\020\uffdc" +
    "\021\uffdc\022\uffdc\023\uffdc\024\uffdc\025\uffdc\026\uffdc\033" +
    "\uffdc\056\uffdc\066\uffdc\067\uffdc\071\uffdc\073\uffdc\001\002" +
    "\000\014\003\057\027\055\031\052\034\062\045\060\001" +
    "\002\000\006\003\047\056\046\001\002\000\060\003\uffd3" +
    "\005\uffd3\006\uffd3\007\uffd3\011\uffd3\012\uffd3\013\uffd3\014" +
    "\uffd3\015\uffd3\016\uffd3\020\uffd3\021\uffd3\022\uffd3\023\uffd3" +
    "\024\uffd3\025\uffd3\026\uffd3\033\uffd3\056\uffd3\066\uffd3\067" +
    "\uffd3\071\uffd3\073\uffd3\001\002\000\060\003\uffd4\005\uffd4" +
    "\006\uffd4\007\uffd4\011\uffd4\012\uffd4\013\uffd4\014\uffd4\015" +
    "\uffd4\016\uffd4\020\uffd4\021\uffd4\022\uffd4\023\uffd4\024\uffd4" +
    "\025\uffd4\026\uffd4\033\uffd4\056\uffd4\066\uffd4\067\uffd4\071" +
    "\uffd4\073\uffd4\001\002\000\060\003\uffce\005\uffce\006\uffce" +
    "\007\uffce\011\uffce\012\uffce\013\uffce\014\uffce\015\uffce\016" +
    "\uffce\020\uffce\021\uffce\022\uffce\023\uffce\024\uffce\025\uffce" +
    "\026\uffce\033\uffce\056\uffce\066\uffce\067\uffce\071\uffce\073" +
    "\uffce\001\002\000\060\003\uffd7\005\uffd7\006\uffd7\007\uffd7" +
    "\011\uffd7\012\uffd7\013\uffd7\014\uffd7\015\uffd7\016\uffd7\020" +
    "\uffd7\021\uffd7\022\uffd7\023\uffd7\024\uffd7\025\uffd7\026\uffd7" +
    "\033\uffd7\056\uffd7\066\uffd7\067\uffd7\071\uffd7\073\uffd7\001" +
    "\002\000\060\003\uffd0\005\uffd0\006\uffd0\007\uffd0\011\uffd0" +
    "\012\uffd0\013\uffd0\014\uffd0\015\uffd0\016\uffd0\020\uffd0\021" +
    "\uffd0\022\uffd0\023\uffd0\024\uffd0\025\uffd0\026\uffd0\033\uffd0" +
    "\056\uffd0\066\uffd0\067\uffd0\071\uffd0\073\uffd0\001\002\000" +
    "\026\003\225\034\226\057\216\060\214\061\213\062\220" +
    "\063\223\064\227\065\222\072\u0187\001\002\000\060\003" +
    "\uffd5\005\uffd5\006\uffd5\007\uffd5\011\uffd5\012\uffd5\013\uffd5" +
    "\014\uffd5\015\uffd5\016\uffd5\020\uffd5\021\uffd5\022\uffd5\023" +
    "\uffd5\024\uffd5\025\uffd5\026\uffd5\033\uffd5\056\uffd5\066\uffd5" +
    "\067\uffd5\071\uffd5\073\uffd5\001\002\000\022\003\uffbf\011" +
    "\uffbf\012\uffbf\013\uffbf\014\uffbf\015\uffbf\035\uffbf\056\uffbf" +
    "\001\002\000\022\003\073\011\064\012\065\013\070\014" +
    "\071\015\075\035\uffb4\056\072\001\002\000\006\003\100" +
    "\056\076\001\002\000\006\003\100\056\076\001\002\000" +
    "\060\003\uffbe\005\uffbe\006\uffbe\007\uffbe\011\uffbe\012\uffbe" +
    "\013\uffbe\014\uffbe\015\uffbe\016\uffbe\020\uffbe\021\uffbe\022" +
    "\uffbe\023\uffbe\024\uffbe\025\uffbe\026\uffbe\033\uffbe\056\uffbe" +
    "\066\uffbe\067\uffbe\071\uffbe\073\uffbe\001\002\000\004\035" +
    "\107\001\002\000\006\003\100\056\076\001\002\000\006" +
    "\003\100\056\076\001\002\000\006\003\100\056\076\001" +
    "\002\000\060\003\uffbc\005\uffbc\006\uffbc\007\uffbc\011\uffbc" +
    "\012\uffbc\013\uffbc\014\uffbc\015\uffbc\016\uffbc\020\uffbc\021" +
    "\uffbc\022\uffbc\023\uffbc\024\uffbc\025\uffbc\026\uffbc\033\uffbc" +
    "\056\uffbc\066\uffbc\067\uffbc\071\uffbc\073\uffbc\001\002\000" +
    "\004\035\uffb5\001\002\000\006\003\100\056\076\001\002" +
    "\000\006\031\101\035\uffaa\001\002\000\004\035\uffb0\001" +
    "\002\000\004\035\uffac\001\002\000\016\011\064\012\065" +
    "\013\070\014\071\015\075\056\072\001\002\000\004\035" +
    "\uffad\001\002\000\004\035\uffab\001\002\000\004\035\uffae" +
    "\001\002\000\004\035\uffaf\001\002\000\004\035\uffb1\001" +
    "\002\000\006\003\111\032\113\001\002\000\060\003\uffbd" +
    "\005\uffbd\006\uffbd\007\uffbd\011\uffbd\012\uffbd\013\uffbd\014" +
    "\uffbd\015\uffbd\016\uffbd\020\uffbd\021\uffbd\022\uffbd\023\uffbd" +
    "\024\uffbd\025\uffbd\026\uffbd\033\uffbd\056\uffbd\066\uffbd\067" +
    "\uffbd\071\uffbd\073\uffbd\001\002\000\060\003\uffb9\005\uffb9" +
    "\006\uffb9\007\uffb9\011\uffb9\012\uffb9\013\uffb9\014\uffb9\015" +
    "\uffb9\016\uffb9\020\uffb9\021\uffb9\022\uffb9\023\uffb9\024\uffb9" +
    "\025\uffb9\026\uffb9\033\uffb9\056\uffb9\066\uffb9\067\uffb9\071" +
    "\uffb9\073\uffb9\001\002\000\060\003\uffbb\005\uffbb\006\uffbb" +
    "\007\uffbb\011\uffbb\012\uffbb\013\uffbb\014\uffbb\015\uffbb\016" +
    "\uffbb\020\uffbb\021\uffbb\022\uffbb\023\uffbb\024\uffbb\025\uffbb" +
    "\026\uffbb\033\uffbb\056\uffbb\066\uffbb\067\uffbb\071\uffbb\073" +
    "\uffbb\001\002\000\044\003\132\011\024\012\031\013\032" +
    "\014\045\015\025\016\122\020\136\021\115\022\127\023" +
    "\121\024\133\026\120\033\uff6b\056\124\071\041\073\125" +
    "\001\002\000\050\011\024\012\031\013\032\014\045\015" +
    "\025\016\122\020\136\021\115\022\127\023\121\024\133" +
    "\025\uff6b\026\120\033\uff6b\056\124\066\uff6b\067\uff6b\071" +
    "\041\073\125\001\002\000\006\003\u0173\034\u0175\001\002" +
    "\000\050\011\024\012\031\013\032\014\045\015\025\016" +
    "\122\020\136\021\115\022\127\023\121\024\133\025\uff6b" +
    "\026\120\033\uff6b\056\124\066\uff6b\067\uff6b\071\041\073" +
    "\125\001\002\000\050\011\024\012\031\013\032\014\045" +
    "\015\025\016\122\020\136\021\115\022\127\023\121\024" +
    "\133\025\uff6b\026\120\033\uff6b\056\124\066\uff6b\067\uff6b" +
    "\071\041\073\125\001\002\000\024\003\u016d\056\u016c\057" +
    "\216\060\214\061\213\062\220\063\223\064\227\065\222" +
    "\001\002\000\006\003\u0143\034\u0144\001\002\000\006\003" +
    "\u0127\034\u0128\001\002\000\050\011\024\012\031\013\032" +
    "\014\045\015\025\016\122\020\136\021\115\022\127\023" +
    "\121\024\133\025\uff6b\026\120\033\uff6b\056\124\066\uff6b" +
    "\067\uff6b\071\041\073\125\001\002\000\012\003\047\034" +
    "\u011c\045\211\056\046\001\002\000\004\030\u0119\001\002" +
    "\000\050\011\024\012\031\013\032\014\045\015\025\016" +
    "\122\020\136\021\115\022\127\023\121\024\133\025\uff6b" +
    "\026\120\033\uff6b\056\124\066\uff6b\067\uff6b\071\041\073" +
    "\125\001\002\000\006\003\304\032\306\001\002\000\060" +
    "\003\uffba\005\uffba\006\uffba\007\uffba\011\uffba\012\uffba\013" +
    "\uffba\014\uffba\015\uffba\016\uffba\020\uffba\021\uffba\022\uffba" +
    "\023\uffba\024\uffba\025\uffba\026\uffba\033\uffba\056\uffba\066" +
    "\uffba\067\uffba\071\uffba\073\uffba\001\002\000\050\011\024" +
    "\012\031\013\032\014\045\015\025\016\122\020\136\021" +
    "\115\022\127\023\121\024\133\025\uff6b\026\120\033\uff6b" +
    "\056\124\066\uff6b\067\uff6b\071\041\073\125\001\002\000" +
    "\060\003\uffb7\005\uffb7\006\uffb7\007\uffb7\011\uffb7\012\uffb7" +
    "\013\uffb7\014\uffb7\015\uffb7\016\uffb7\020\uffb7\021\uffb7\022" +
    "\uffb7\023\uffb7\024\uffb7\025\uffb7\026\uffb7\033\uffb7\056\uffb7" +
    "\066\uffb7\067\uffb7\071\uffb7\073\uffb7\001\002\000\020\011" +
    "\024\012\031\013\032\014\045\015\025\056\301\071\041" +
    "\001\002\000\004\033\300\001\002\000\050\011\024\012" +
    "\031\013\032\014\045\015\025\016\122\020\136\021\115" +
    "\022\127\023\121\024\133\025\uff6b\026\120\033\uff6b\056" +
    "\124\066\uff6b\067\uff6b\071\041\073\125\001\002\000\006" +
    "\003\143\034\144\001\002\000\050\011\uffef\012\uffef\013" +
    "\uffef\014\uffef\015\uffef\016\uffef\020\uffef\021\uffef\022\uffef" +
    "\023\uffef\024\uffef\025\uffef\026\uffef\033\uffef\056\uffef\066" +
    "\uffef\067\uffef\071\uffef\073\uffef\001\002\000\050\011\024" +
    "\012\031\013\032\014\045\015\025\016\122\020\136\021" +
    "\115\022\127\023\121\024\133\025\uff6b\026\120\033\uff6b" +
    "\056\124\066\uff6b\067\uff6b\071\041\073\125\001\002\000" +
    "\012\025\uff6f\033\uff6f\066\uff6f\067\uff6f\001\002\000\050" +
    "\011\uff35\012\uff35\013\uff35\014\uff35\015\uff35\016\uff35\020" +
    "\uff35\021\uff35\022\uff35\023\uff35\024\uff35\025\uff35\026\uff35" +
    "\033\uff35\056\uff35\066\uff35\067\uff35\071\uff35\073\uff35\001" +
    "\002\000\050\011\uff33\012\uff33\013\uff33\014\uff33\015\uff33" +
    "\016\uff33\020\uff33\021\uff33\022\uff33\023\uff33\024\uff33\025" +
    "\uff33\026\uff33\033\uff33\056\uff33\066\uff33\067\uff33\071\uff33" +
    "\073\uff33\001\002\000\026\003\150\011\024\012\031\013" +
    "\032\014\045\015\025\024\133\056\147\071\041\073\151" +
    "\001\002\000\006\003\264\035\265\001\002\000\050\011" +
    "\uff34\012\uff34\013\uff34\014\uff34\015\uff34\016\uff34\020\uff34" +
    "\021\uff34\022\uff34\023\uff34\024\uff34\025\uff34\026\uff34\033" +
    "\uff34\056\uff34\066\uff34\067\uff34\071\uff34\073\uff34\001\002" +
    "\000\010\003\047\045\211\056\046\001\002\000\050\011" +
    "\uff31\012\uff31\013\uff31\014\uff31\015\uff31\016\uff31\020\uff31" +
    "\021\uff31\022\uff31\023\uff31\024\uff31\025\uff31\026\uff31\033" +
    "\uff31\056\uff31\066\uff31\067\uff31\071\uff31\073\uff31\001\002" +
    "\000\004\030\207\001\002\000\004\056\153\001\002\000" +
    "\016\042\157\043\162\044\161\046\155\047\156\050\160" +
    "\001\002\000\014\003\164\034\166\056\163\057\171\060" +
    "\170\001\002\000\022\003\uff67\034\uff67\056\uff67\057\uff67" +
    "\060\uff67\061\uff67\064\uff67\065\uff67\001\002\000\022\003" +
    "\uff65\034\uff65\056\uff65\057\uff65\060\uff65\061\uff65\064\uff65" +
    "\065\uff65\001\002\000\022\003\uff64\034\uff64\056\uff64\057" +
    "\uff64\060\uff64\061\uff64\064\uff64\065\uff64\001\002\000\022" +
    "\003\uff69\034\uff69\056\uff69\057\uff69\060\uff69\061\uff69\064" +
    "\uff69\065\uff69\001\002\000\022\003\uff66\034\uff66\056\uff66" +
    "\057\uff66\060\uff66\061\uff66\064\uff66\065\uff66\001\002\000" +
    "\022\003\uff68\034\uff68\056\uff68\057\uff68\060\uff68\061\uff68" +
    "\064\uff68\065\uff68\001\002\000\014\003\uff20\027\uff20\035" +
    "\uff20\036\uff20\037\uff20\001\002\000\014\003\uff21\027\uff21" +
    "\035\uff21\036\uff21\037\uff21\001\002\000\014\003\uff22\027" +
    "\uff22\035\uff22\036\uff22\037\uff22\001\002\000\014\003\164" +
    "\034\166\056\163\057\171\060\170\001\002\000\010\027" +
    "\174\036\172\037\173\001\002\000\014\003\uff1e\027\uff1e" +
    "\035\uff1e\036\uff1e\037\uff1e\001\002\000\014\003\uff1f\027" +
    "\uff1f\035\uff1f\036\uff1f\037\uff1f\001\002\000\014\003\164" +
    "\034\166\056\163\057\171\060\170\001\002\000\014\003" +
    "\164\034\166\056\163\057\171\060\170\001\002\000\004" +
    "\056\175\001\002\000\010\045\200\054\201\055\177\001" +
    "\002\000\006\003\uff29\035\uff29\001\002\000\006\003\uff27" +
    "\035\uff27\001\002\000\014\003\164\034\166\056\163\057" +
    "\171\060\170\001\002\000\006\003\uff28\035\uff28\001\002" +
    "\000\012\003\uff26\035\uff26\036\172\037\173\001\002\000" +
    "\014\003\uff24\027\uff24\035\uff24\036\uff24\037\uff24\001\002" +
    "\000\014\003\uff25\027\uff25\035\uff25\036\uff25\037\uff25\001" +
    "\002\000\010\035\206\036\172\037\173\001\002\000\014" +
    "\003\uff23\027\uff23\035\uff23\036\uff23\037\uff23\001\002\000" +
    "\004\056\210\001\002\000\004\045\211\001\002\000\030" +
    "\003\225\034\226\056\224\057\216\060\214\061\213\062" +
    "\220\063\223\064\227\065\222\072\215\001\002\000\050" +
    "\011\uffee\012\uffee\013\uffee\014\uffee\015\uffee\016\uffee\020" +
    "\uffee\021\uffee\022\uffee\023\uffee\024\uffee\025\uffee\026\uffee" +
    "\033\uffee\056\uffee\066\uffee\067\uffee\071\uffee\073\uffee\001" +
    "\002\000\024\003\uffc6\027\uffc6\031\uffc6\035\uffc6\036\uffc6" +
    "\037\uffc6\040\uffc6\041\uffc6\070\uffc6\001\002\000\024\003" +
    "\uffc0\027\uffc0\031\uffc0\035\uffc0\036\uffc0\037\uffc0\040\uffc0" +
    "\041\uffc0\070\uffc0\001\002\000\004\056\244\001\002\000" +
    "\024\003\uffc1\027\uffc1\031\uffc1\035\uffc1\036\uffc1\037\uffc1" +
    "\040\uffc1\041\uffc1\070\uffc1\001\002\000\014\027\243\036" +
    "\231\037\234\040\235\041\233\001\002\000\024\003\uffc5" +
    "\027\uffc5\031\uffc5\035\uffc5\036\uffc5\037\uffc5\040\uffc5\041" +
    "\uffc5\070\uffc5\001\002\000\022\003\uffc8\027\uffc8\031\uffc8" +
    "\035\uffc8\036\uffc8\037\uffc8\040\uffc8\041\uffc8\001\002\000" +
    "\024\003\uffc2\027\uffc2\031\uffc2\035\uffc2\036\uffc2\037\uffc2" +
    "\040\uffc2\041\uffc2\070\uffc2\001\002\000\024\003\uffc4\027" +
    "\uffc4\031\uffc4\035\uffc4\036\uffc4\037\uffc4\040\uffc4\041\uffc4" +
    "\070\uffc4\001\002\000\004\027\242\001\002\000\022\003" +
    "\uffc7\027\uffc7\031\uffc7\035\uffc7\036\uffc7\037\uffc7\040\uffc7" +
    "\041\uffc7\001\002\000\024\003\225\034\226\057\216\060" +
    "\214\061\213\062\220\063\223\064\227\065\222\001\002" +
    "\000\024\003\uffc3\027\uffc3\031\uffc3\035\uffc3\036\uffc3\037" +
    "\uffc3\040\uffc3\041\uffc3\070\uffc3\001\002\000\014\035\232" +
    "\036\231\037\234\040\235\041\233\001\002\000\024\003" +
    "\225\034\226\057\216\060\214\061\213\062\220\063\223" +
    "\064\227\065\222\001\002\000\022\003\uffc9\027\uffc9\031" +
    "\uffc9\035\uffc9\036\uffc9\037\uffc9\040\uffc9\041\uffc9\001\002" +
    "\000\024\003\225\034\226\057\216\060\214\061\213\062" +
    "\220\063\223\064\227\065\222\001\002\000\024\003\225" +
    "\034\226\057\216\060\214\061\213\062\220\063\223\064" +
    "\227\065\222\001\002\000\024\003\225\034\226\057\216" +
    "\060\214\061\213\062\220\063\223\064\227\065\222\001" +
    "\002\000\022\003\uffcb\027\uffcb\031\uffcb\035\uffcb\036\uffcb" +
    "\037\uffcb\040\uffcb\041\uffcb\001\002\000\022\003\uffcc\027" +
    "\uffcc\031\uffcc\035\uffcc\036\uffcc\037\uffcc\040\235\041\233" +
    "\001\002\000\022\003\uffca\027\uffca\031\uffca\035\uffca\036" +
    "\uffca\037\uffca\040\uffca\041\uffca\001\002\000\022\003\uffcd" +
    "\027\uffcd\031\uffcd\035\uffcd\036\uffcd\037\uffcd\040\235\041" +
    "\233\001\002\000\050\011\uffeb\012\uffeb\013\uffeb\014\uffeb" +
    "\015\uffeb\016\uffeb\020\uffeb\021\uffeb\022\uffeb\023\uffeb\024" +
    "\uffeb\025\uffeb\026\uffeb\033\uffeb\056\uffeb\066\uffeb\067\uffeb" +
    "\071\uffeb\073\uffeb\001\002\000\050\011\uffec\012\uffec\013" +
    "\uffec\014\uffec\015\uffec\016\uffec\020\uffec\021\uffec\022\uffec" +
    "\023\uffec\024\uffec\025\uffec\026\uffec\033\uffec\056\uffec\066" +
    "\uffec\067\uffec\071\uffec\073\uffec\001\002\000\004\034\245" +
    "\001\002\000\030\003\225\034\226\035\uff9b\056\251\057" +
    "\216\060\214\061\213\062\220\063\223\064\227\065\222" +
    "\001\002\000\004\035\257\001\002\000\020\003\253\031" +
    "\252\035\uff97\036\231\037\234\040\235\041\233\001\002" +
    "\000\004\035\uff9c\001\002\000\010\003\253\031\252\035" +
    "\uff97\001\002\000\026\003\225\034\226\056\251\057\216" +
    "\060\214\061\213\062\220\063\223\064\227\065\222\001" +
    "\002\000\004\035\uff96\001\002\000\004\035\uff9a\001\002" +
    "\000\004\035\uff98\001\002\000\004\035\uff99\001\002\000" +
    "\004\027\260\001\002\000\050\011\uffea\012\uffea\013\uffea" +
    "\014\uffea\015\uffea\016\uffea\020\uffea\021\uffea\022\uffea\023" +
    "\uffea\024\uffea\025\uffea\026\uffea\033\uffea\056\uffea\066\uffea" +
    "\067\uffea\071\uffea\073\uffea\001\002\000\050\011\uffed\012" +
    "\uffed\013\uffed\014\uffed\015\uffed\016\uffed\020\uffed\021\uffed" +
    "\022\uffed\023\uffed\024\uffed\025\uffed\026\uffed\033\uffed\056" +
    "\uffed\066\uffed\067\uffed\071\uffed\073\uffed\001\002\000\060" +
    "\003\uffdb\005\uffdb\006\uffdb\007\uffdb\011\uffdb\012\uffdb\013" +
    "\uffdb\014\uffdb\015\uffdb\016\uffdb\020\uffdb\021\uffdb\022\uffdb" +
    "\023\uffdb\024\uffdb\025\uffdb\026\uffdb\033\uffdb\056\uffdb\066" +
    "\uffdb\067\uffdb\071\uffdb\073\uffdb\001\002\000\050\011\uff32" +
    "\012\uff32\013\uff32\014\uff32\015\uff32\016\uff32\020\uff32\021" +
    "\uff32\022\uff32\023\uff32\024\uff32\025\uff32\026\uff32\033\uff32" +
    "\056\uff32\066\uff32\067\uff32\071\uff32\073\uff32\001\002\000" +
    "\050\011\uff2f\012\uff2f\013\uff2f\014\uff2f\015\uff2f\016\uff2f" +
    "\020\uff2f\021\uff2f\022\uff2f\023\uff2f\024\uff2f\025\uff2f\026" +
    "\uff2f\033\uff2f\056\uff2f\066\uff2f\067\uff2f\071\uff2f\073\uff2f" +
    "\001\002\000\006\003\266\032\270\001\002\000\050\011" +
    "\uff2d\012\uff2d\013\uff2d\014\uff2d\015\uff2d\016\uff2d\020\uff2d" +
    "\021\uff2d\022\uff2d\023\uff2d\024\uff2d\025\uff2d\026\uff2d\033" +
    "\uff2d\056\uff2d\066\uff2d\067\uff2d\071\uff2d\073\uff2d\001\002" +
    "\000\050\011\uff30\012\uff30\013\uff30\014\uff30\015\uff30\016" +
    "\uff30\020\uff30\021\uff30\022\uff30\023\uff30\024\uff30\025\uff30" +
    "\026\uff30\033\uff30\056\uff30\066\uff30\067\uff30\071\uff30\073" +
    "\uff30\001\002\000\044\003\272\011\024\012\031\013\032" +
    "\014\045\015\025\016\122\020\136\021\115\022\127\023" +
    "\121\024\133\026\120\033\uff6b\056\124\071\041\073\125" +
    "\001\002\000\050\011\uff2e\012\uff2e\013\uff2e\014\uff2e\015" +
    "\uff2e\016\uff2e\020\uff2e\021\uff2e\022\uff2e\023\uff2e\024\uff2e" +
    "\025\uff2e\026\uff2e\033\uff2e\056\uff2e\066\uff2e\067\uff2e\071" +
    "\uff2e\073\uff2e\001\002\000\050\011\uff2b\012\uff2b\013\uff2b" +
    "\014\uff2b\015\uff2b\016\uff2b\020\uff2b\021\uff2b\022\uff2b\023" +
    "\uff2b\024\uff2b\025\uff2b\026\uff2b\033\uff2b\056\uff2b\066\uff2b" +
    "\067\uff2b\071\uff2b\073\uff2b\001\002\000\004\033\274\001" +
    "\002\000\050\011\uff2a\012\uff2a\013\uff2a\014\uff2a\015\uff2a" +
    "\016\uff2a\020\uff2a\021\uff2a\022\uff2a\023\uff2a\024\uff2a\025" +
    "\uff2a\026\uff2a\033\uff2a\056\uff2a\066\uff2a\067\uff2a\071\uff2a" +
    "\073\uff2a\001\002\000\050\011\uff2c\012\uff2c\013\uff2c\014" +
    "\uff2c\015\uff2c\016\uff2c\020\uff2c\021\uff2c\022\uff2c\023\uff2c" +
    "\024\uff2c\025\uff2c\026\uff2c\033\uff2c\056\uff2c\066\uff2c\067" +
    "\uff2c\071\uff2c\073\uff2c\001\002\000\012\025\uff72\033\uff72" +
    "\066\uff72\067\uff72\001\002\000\060\003\uffb8\005\uffb8\006" +
    "\uffb8\007\uffb8\011\uffb8\012\uffb8\013\uffb8\014\uffb8\015\uffb8" +
    "\016\uffb8\020\uffb8\021\uffb8\022\uffb8\023\uffb8\024\uffb8\025" +
    "\uffb8\026\uffb8\033\uffb8\056\uffb8\066\uffb8\067\uffb8\071\uffb8" +
    "\073\uffb8\001\002\000\060\003\uffb6\005\uffb6\006\uffb6\007" +
    "\uffb6\011\uffb6\012\uffb6\013\uffb6\014\uffb6\015\uffb6\016\uffb6" +
    "\020\uffb6\021\uffb6\022\uffb6\023\uffb6\024\uffb6\025\uffb6\026" +
    "\uffb6\033\uffb6\056\uffb6\066\uffb6\067\uffb6\071\uffb6\073\uffb6" +
    "\001\002\000\006\003\047\056\046\001\002\000\050\011" +
    "\ufff0\012\ufff0\013\ufff0\014\ufff0\015\ufff0\016\ufff0\020\ufff0" +
    "\021\ufff0\022\ufff0\023\ufff0\024\ufff0\025\ufff0\026\ufff0\033" +
    "\ufff0\056\ufff0\066\ufff0\067\ufff0\071\ufff0\073\ufff0\001\002" +
    "\000\012\025\uff70\033\uff70\066\uff70\067\uff70\001\002\000" +
    "\050\011\uff43\012\uff43\013\uff43\014\uff43\015\uff43\016\uff43" +
    "\020\uff43\021\uff43\022\uff43\023\uff43\024\uff43\025\uff43\026" +
    "\uff43\033\uff43\056\uff43\066\uff43\067\uff43\071\uff43\073\uff43" +
    "\001\002\000\050\011\uff45\012\uff45\013\uff45\014\uff45\015" +
    "\uff45\016\uff45\020\uff45\021\uff45\022\uff45\023\uff45\024\uff45" +
    "\025\uff45\026\uff45\033\uff45\056\uff45\066\uff45\067\uff45\071" +
    "\uff45\073\uff45\001\002\000\044\003\310\011\024\012\031" +
    "\013\032\014\045\015\025\016\122\020\136\021\115\022" +
    "\127\023\121\024\133\026\120\033\uff6b\056\124\071\041" +
    "\073\125\001\002\000\050\011\uff44\012\uff44\013\uff44\014" +
    "\uff44\015\uff44\016\uff44\020\uff44\021\uff44\022\uff44\023\uff44" +
    "\024\uff44\025\uff44\026\uff44\033\uff44\056\uff44\066\uff44\067" +
    "\uff44\071\uff44\073\uff44\001\002\000\050\011\uff41\012\uff41" +
    "\013\uff41\014\uff41\015\uff41\016\uff41\020\uff41\021\uff41\022" +
    "\uff41\023\uff41\024\uff41\025\uff41\026\uff41\033\uff41\056\uff41" +
    "\066\uff41\067\uff41\071\uff41\073\uff41\001\002\000\004\033" +
    "\312\001\002\000\006\003\314\021\316\001\002\000\050" +
    "\011\uff42\012\uff42\013\uff42\014\uff42\015\uff42\016\uff42\020" +
    "\uff42\021\uff42\022\uff42\023\uff42\024\uff42\025\uff42\026\uff42" +
    "\033\uff42\056\uff42\066\uff42\067\uff42\071\uff42\073\uff42\001" +
    "\002\000\050\011\uff3e\012\uff3e\013\uff3e\014\uff3e\015\uff3e" +
    "\016\uff3e\020\uff3e\021\uff3e\022\uff3e\023\uff3e\024\uff3e\025" +
    "\uff3e\026\uff3e\033\uff3e\056\uff3e\066\uff3e\067\uff3e\071\uff3e" +
    "\073\uff3e\001\002\000\050\011\uff40\012\uff40\013\uff40\014" +
    "\uff40\015\uff40\016\uff40\020\uff40\021\uff40\022\uff40\023\uff40" +
    "\024\uff40\025\uff40\026\uff40\033\uff40\056\uff40\066\uff40\067" +
    "\uff40\071\uff40\073\uff40\001\002\000\006\003\317\034\320" +
    "\001\002\000\050\011\uff3c\012\uff3c\013\uff3c\014\uff3c\015" +
    "\uff3c\016\uff3c\020\uff3c\021\uff3c\022\uff3c\023\uff3c\024\uff3c" +
    "\025\uff3c\026\uff3c\033\uff3c\056\uff3c\066\uff3c\067\uff3c\071" +
    "\uff3c\073\uff3c\001\002\000\030\003\340\034\341\053\326" +
    "\056\330\057\342\060\324\061\323\062\327\063\337\064" +
    "\335\065\343\001\002\000\050\011\uff3f\012\uff3f\013\uff3f" +
    "\014\uff3f\015\uff3f\016\uff3f\020\uff3f\021\uff3f\022\uff3f\023" +
    "\uff3f\024\uff3f\025\uff3f\026\uff3f\033\uff3f\056\uff3f\066\uff3f" +
    "\067\uff3f\071\uff3f\073\uff3f\001\002\000\050\011\uff3d\012" +
    "\uff3d\013\uff3d\014\uff3d\015\uff3d\016\uff3d\020\uff3d\021\uff3d" +
    "\022\uff3d\023\uff3d\024\uff3d\025\uff3d\026\uff3d\033\uff3d\056" +
    "\uff3d\066\uff3d\067\uff3d\071\uff3d\073\uff3d\001\002\000\036" +
    "\003\uff5d\035\uff5d\036\uff5d\037\uff5d\040\uff5d\041\uff5d\042" +
    "\uff5d\043\uff5d\044\uff5d\046\uff5d\047\uff5d\050\uff5d\051\uff5d" +
    "\052\uff5d\001\002\000\036\003\uff59\035\uff59\036\uff59\037" +
    "\uff59\040\uff59\041\uff59\042\uff59\043\uff59\044\uff59\046\uff59" +
    "\047\uff59\050\uff59\051\uff59\052\uff59\001\002\000\006\003" +
    "\u0112\035\u0114\001\002\000\012\034\u010f\056\u010c\062\327" +
    "\063\337\001\002\000\012\003\uff7c\035\uff7c\051\uff7c\052" +
    "\uff7c\001\002\000\026\003\uff85\035\uff85\042\u0104\043\162" +
    "\044\161\046\155\047\156\050\u0105\051\uff85\052\uff85\001" +
    "\002\000\026\036\367\037\365\040\366\041\371\042\157" +
    "\043\162\044\161\046\155\047\156\050\160\001\002\000" +
    "\012\003\uff88\035\uff88\051\353\052\356\001\002\000\012" +
    "\003\uff88\035\uff88\051\353\052\356\001\002\000\012\003" +
    "\uff88\035\uff88\051\353\052\356\001\002\000\036\003\uff5c" +
    "\035\uff5c\036\uff5c\037\uff5c\040\uff5c\041\uff5c\042\uff5c\043" +
    "\uff5c\044\uff5c\046\uff5c\047\uff5c\050\uff5c\051\uff5c\052\uff5c" +
    "\001\002\000\012\003\uff88\035\uff88\051\353\052\356\001" +
    "\002\000\012\003\uff7b\035\uff7b\051\uff7b\052\uff7b\001\002" +
    "\000\050\011\uff3a\012\uff3a\013\uff3a\014\uff3a\015\uff3a\016" +
    "\uff3a\020\uff3a\021\uff3a\022\uff3a\023\uff3a\024\uff3a\025\uff3a" +
    "\026\uff3a\033\uff3a\056\uff3a\066\uff3a\067\uff3a\071\uff3a\073" +
    "\uff3a\001\002\000\026\034\341\053\326\056\330\057\342" +
    "\060\324\061\323\062\327\063\337\064\335\065\343\001" +
    "\002\000\036\003\uff5a\035\uff5a\036\uff5a\037\uff5a\040\uff5a" +
    "\041\uff5a\042\uff5a\043\uff5a\044\uff5a\046\uff5a\047\uff5a\050" +
    "\uff5a\051\uff5a\052\uff5a\001\002\000\036\003\uff5b\035\uff5b" +
    "\036\uff5b\037\uff5b\040\uff5b\041\uff5b\042\uff5b\043\uff5b\044" +
    "\uff5b\046\uff5b\047\uff5b\050\uff5b\051\uff5b\052\uff5b\001\002" +
    "\000\036\003\uff5e\035\uff5e\036\uff5e\037\uff5e\040\uff5e\041" +
    "\uff5e\042\uff5e\043\uff5e\044\uff5e\046\uff5e\047\uff5e\050\uff5e" +
    "\051\uff5e\052\uff5e\001\002\000\030\035\372\036\367\037" +
    "\365\040\366\041\371\042\157\043\162\044\161\046\155" +
    "\047\156\050\160\001\002\000\010\035\364\051\353\052" +
    "\356\001\002\000\010\035\361\051\353\052\356\001\002" +
    "\000\010\035\355\051\353\052\356\001\002\000\004\035" +
    "\352\001\002\000\012\003\uff7a\035\uff7a\051\uff7a\052\uff7a" +
    "\001\002\000\026\034\341\053\326\056\330\057\342\060" +
    "\324\061\323\062\327\063\337\064\335\065\343\001\002" +
    "\000\006\003\uff8d\035\uff8d\001\002\000\012\003\uff84\035" +
    "\uff84\051\uff84\052\uff84\001\002\000\026\034\341\053\326" +
    "\056\330\057\342\060\324\061\323\062\327\063\337\064" +
    "\335\065\343\001\002\000\006\003\uff89\035\uff89\001\002" +
    "\000\006\003\uff8a\035\uff8a\001\002\000\012\003\uff7d\035" +
    "\uff7d\051\uff7d\052\uff7d\001\002\000\006\003\uff8c\035\uff8c" +
    "\001\002\000\006\003\uff8b\035\uff8b\001\002\000\012\003" +
    "\uff86\035\uff86\051\uff86\052\uff86\001\002\000\016\034\374" +
    "\057\342\060\324\061\323\064\335\065\343\001\002\000" +
    "\016\034\374\057\342\060\324\061\323\064\335\065\343" +
    "\001\002\000\016\034\374\057\342\060\324\061\323\064" +
    "\335\065\343\001\002\000\016\034\374\057\342\060\324" +
    "\061\323\064\335\065\343\001\002\000\016\034\374\057" +
    "\342\060\324\061\323\064\335\065\343\001\002\000\036" +
    "\003\uff5f\035\uff5f\036\uff5f\037\uff5f\040\uff5f\041\uff5f\042" +
    "\uff5f\043\uff5f\044\uff5f\046\uff5f\047\uff5f\050\uff5f\051\uff5f" +
    "\052\uff5f\001\002\000\036\003\uff60\035\uff60\036\uff60\037" +
    "\uff60\040\uff60\041\uff60\042\uff60\043\uff60\044\uff60\046\uff60" +
    "\047\uff60\050\uff60\051\uff60\052\uff60\001\002\000\016\034" +
    "\374\057\342\060\324\061\323\064\335\065\343\001\002" +
    "\000\014\035\372\036\367\037\365\040\366\041\371\001" +
    "\002\000\022\003\uff87\035\uff87\036\367\037\365\040\366" +
    "\041\371\051\uff87\052\uff87\001\002\000\036\003\uff63\035" +
    "\uff63\036\uff63\037\uff63\040\366\041\371\042\uff63\043\uff63" +
    "\044\uff63\046\uff63\047\uff63\050\uff63\051\uff63\052\uff63\001" +
    "\002\000\036\003\uff61\035\uff61\036\uff61\037\uff61\040\uff61" +
    "\041\uff61\042\uff61\043\uff61\044\uff61\046\uff61\047\uff61\050" +
    "\uff61\051\uff61\052\uff61\001\002\000\036\003\uff62\035\uff62" +
    "\036\uff62\037\uff62\040\366\041\371\042\uff62\043\uff62\044" +
    "\uff62\046\uff62\047\uff62\050\uff62\051\uff62\052\uff62\001\002" +
    "\000\006\003\uff8f\035\uff8f\001\002\000\020\034\374\056" +
    "\u010b\057\342\060\324\061\323\064\335\065\343\001\002" +
    "\000\024\034\uff64\056\uff64\057\uff64\060\uff64\061\uff64\062" +
    "\u0108\063\u0109\064\uff64\065\uff64\001\002\000\024\034\uff69" +
    "\056\uff69\057\uff69\060\uff69\061\uff69\062\u0106\063\u0107\064" +
    "\uff69\065\uff69\001\002\000\012\003\uff7f\035\uff7f\051\uff7f" +
    "\052\uff7f\001\002\000\012\003\uff7e\035\uff7e\051\uff7e\052" +
    "\uff7e\001\002\000\012\003\uff81\035\uff81\051\uff81\052\uff81" +
    "\001\002\000\012\003\uff80\035\uff80\051\uff80\052\uff80\001" +
    "\002\000\022\003\uff83\035\uff83\036\367\037\365\040\366" +
    "\041\371\051\uff83\052\uff83\001\002\000\012\003\uff82\035" +
    "\uff82\051\uff82\052\uff82\001\002\000\012\003\uff85\035\uff85" +
    "\051\uff85\052\uff85\001\002\000\012\003\uff88\035\uff88\051" +
    "\353\052\356\001\002\000\012\003\uff88\035\uff88\051\353" +
    "\052\356\001\002\000\026\034\341\053\326\056\330\057" +
    "\342\060\324\061\323\062\327\063\337\064\335\065\343" +
    "\001\002\000\006\003\uff90\035\uff90\001\002\000\006\003" +
    "\uff8e\035\uff8e\001\002\000\050\011\uff38\012\uff38\013\uff38" +
    "\014\uff38\015\uff38\016\uff38\020\uff38\021\uff38\022\uff38\023" +
    "\uff38\024\uff38\025\uff38\026\uff38\033\uff38\056\uff38\066\uff38" +
    "\067\uff38\071\uff38\073\uff38\001\002\000\050\011\uff3b\012" +
    "\uff3b\013\uff3b\014\uff3b\015\uff3b\016\uff3b\020\uff3b\021\uff3b" +
    "\022\uff3b\023\uff3b\024\uff3b\025\uff3b\026\uff3b\033\uff3b\056" +
    "\uff3b\066\uff3b\067\uff3b\071\uff3b\073\uff3b\001\002\000\006" +
    "\003\u0115\027\u0117\001\002\000\050\011\uff36\012\uff36\013" +
    "\uff36\014\uff36\015\uff36\016\uff36\020\uff36\021\uff36\022\uff36" +
    "\023\uff36\024\uff36\025\uff36\026\uff36\033\uff36\056\uff36\066" +
    "\uff36\067\uff36\071\uff36\073\uff36\001\002\000\050\011\uff39" +
    "\012\uff39\013\uff39\014\uff39\015\uff39\016\uff39\020\uff39\021" +
    "\uff39\022\uff39\023\uff39\024\uff39\025\uff39\026\uff39\033\uff39" +
    "\056\uff39\066\uff39\067\uff39\071\uff39\073\uff39\001\002\000" +
    "\050\011\uff37\012\uff37\013\uff37\014\uff37\015\uff37\016\uff37" +
    "\020\uff37\021\uff37\022\uff37\023\uff37\024\uff37\025\uff37\026" +
    "\uff37\033\uff37\056\uff37\066\uff37\067\uff37\071\uff37\073\uff37" +
    "\001\002\000\012\025\uff6d\033\uff6d\066\uff6d\067\uff6d\001" +
    "\002\000\004\056\u011a\001\002\000\006\034\u011c\045\211" +
    "\001\002\000\050\011\uffa3\012\uffa3\013\uffa3\014\uffa3\015" +
    "\uffa3\016\uffa3\020\uffa3\021\uffa3\022\uffa3\023\uffa3\024\uffa3" +
    "\025\uffa3\026\uffa3\033\uffa3\056\uffa3\066\uffa3\067\uffa3\071" +
    "\uffa3\073\uffa3\001\002\000\030\003\u011f\034\226\035\uff9b" +
    "\056\251\057\216\060\214\061\213\062\220\063\223\064" +
    "\227\065\222\001\002\000\004\035\u0121\001\002\000\050" +
    "\011\uffa2\012\uffa2\013\uffa2\014\uffa2\015\uffa2\016\uffa2\020" +
    "\uffa2\021\uffa2\022\uffa2\023\uffa2\024\uffa2\025\uffa2\026\uffa2" +
    "\033\uffa2\056\uffa2\066\uffa2\067\uffa2\071\uffa2\073\uffa2\001" +
    "\002\000\066\003\uffc7\011\uffa0\012\uffa0\013\uffa0\014\uffa0" +
    "\015\uffa0\016\uffa0\020\uffa0\021\uffa0\022\uffa0\023\uffa0\024" +
    "\uffa0\025\uffa0\026\uffa0\031\uffc7\033\uffa0\035\uffc7\036\uffc7" +
    "\037\uffc7\040\uffc7\041\uffc7\056\uffa0\066\uffa0\067\uffa0\071" +
    "\uffa0\073\uffa0\001\002\000\050\011\uffa1\012\uffa1\013\uffa1" +
    "\014\uffa1\015\uffa1\016\uffa1\020\uffa1\021\uffa1\022\uffa1\023" +
    "\uffa1\024\uffa1\025\uffa1\026\uffa1\033\uffa1\056\uffa1\066\uffa1" +
    "\067\uffa1\071\uffa1\073\uffa1\001\002\000\006\003\u0123\027" +
    "\u0124\001\002\000\050\011\uff9f\012\uff9f\013\uff9f\014\uff9f" +
    "\015\uff9f\016\uff9f\020\uff9f\021\uff9f\022\uff9f\023\uff9f\024" +
    "\uff9f\025\uff9f\026\uff9f\033\uff9f\056\uff9f\066\uff9f\067\uff9f" +
    "\071\uff9f\073\uff9f\001\002\000\050\011\uff9d\012\uff9d\013" +
    "\uff9d\014\uff9d\015\uff9d\016\uff9d\020\uff9d\021\uff9d\022\uff9d" +
    "\023\uff9d\024\uff9d\025\uff9d\026\uff9d\033\uff9d\056\uff9d\066" +
    "\uff9d\067\uff9d\071\uff9d\073\uff9d\001\002\000\050\011\uff9e" +
    "\012\uff9e\013\uff9e\014\uff9e\015\uff9e\016\uff9e\020\uff9e\021" +
    "\uff9e\022\uff9e\023\uff9e\024\uff9e\025\uff9e\026\uff9e\033\uff9e" +
    "\056\uff9e\066\uff9e\067\uff9e\071\uff9e\073\uff9e\001\002\000" +
    "\050\011\uffa4\012\uffa4\013\uffa4\014\uffa4\015\uffa4\016\uffa4" +
    "\020\uffa4\021\uffa4\022\uffa4\023\uffa4\024\uffa4\025\uffa4\026" +
    "\uffa4\033\uffa4\056\uffa4\066\uffa4\067\uffa4\071\uffa4\073\uffa4" +
    "\001\002\000\012\025\uff6c\033\uff6c\066\uff6c\067\uff6c\001" +
    "\002\000\050\011\uff93\012\uff93\013\uff93\014\uff93\015\uff93" +
    "\016\uff93\020\uff93\021\uff93\022\uff93\023\uff93\024\uff93\025" +
    "\uff93\026\uff93\033\uff93\056\uff93\066\uff93\067\uff93\071\uff93" +
    "\073\uff93\001\002\000\030\003\u012c\034\341\053\326\056" +
    "\330\057\342\060\324\061\323\062\327\063\337\064\335" +
    "\065\343\001\002\000\050\011\uff95\012\uff95\013\uff95\014" +
    "\uff95\015\uff95\016\uff95\020\uff95\021\uff95\022\uff95\023\uff95" +
    "\024\uff95\025\uff95\026\uff95\033\uff95\056\uff95\066\uff95\067" +
    "\uff95\071\uff95\073\uff95\001\002\000\050\011\uff94\012\uff94" +
    "\013\uff94\014\uff94\015\uff94\016\uff94\020\uff94\021\uff94\022" +
    "\uff94\023\uff94\024\uff94\025\uff94\026\uff94\033\uff94\056\uff94" +
    "\066\uff94\067\uff94\071\uff94\073\uff94\001\002\000\006\003" +
    "\u012d\035\u012e\001\002\000\050\011\uff91\012\uff91\013\uff91" +
    "\014\uff91\015\uff91\016\uff91\020\uff91\021\uff91\022\uff91\023" +
    "\uff91\024\uff91\025\uff91\026\uff91\033\uff91\056\uff91\066\uff91" +
    "\067\uff91\071\uff91\073\uff91\001\002\000\050\011\uff78\012" +
    "\uff78\013\uff78\014\uff78\015\uff78\016\uff78\020\uff78\021\uff78" +
    "\022\uff78\023\uff78\024\uff78\025\uff78\026\uff78\033\uff78\056" +
    "\uff78\066\uff78\067\uff78\071\uff78\073\uff78\001\002\000\006" +
    "\003\u0130\032\u0132\001\002\000\050\011\uff92\012\uff92\013" +
    "\uff92\014\uff92\015\uff92\016\uff92\020\uff92\021\uff92\022\uff92" +
    "\023\uff92\024\uff92\025\uff92\026\uff92\033\uff92\056\uff92\066" +
    "\uff92\067\uff92\071\uff92\073\uff92\001\002\000\050\011\uff76" +
    "\012\uff76\013\uff76\014\uff76\015\uff76\016\uff76\020\uff76\021" +
    "\uff76\022\uff76\023\uff76\024\uff76\025\uff76\026\uff76\033\uff76" +
    "\056\uff76\066\uff76\067\uff76\071\uff76\073\uff76\001\002\000" +
    "\050\011\uff79\012\uff79\013\uff79\014\uff79\015\uff79\016\uff79" +
    "\020\uff79\021\uff79\022\uff79\023\uff79\024\uff79\025\uff79\026" +
    "\uff79\033\uff79\056\uff79\066\uff79\067\uff79\071\uff79\073\uff79" +
    "\001\002\000\044\003\u0134\011\024\012\031\013\032\014" +
    "\045\015\025\016\122\020\136\021\115\022\127\023\121" +
    "\024\133\026\120\033\uff6b\056\124\071\041\073\125\001" +
    "\002\000\050\011\uff77\012\uff77\013\uff77\014\uff77\015\uff77" +
    "\016\uff77\020\uff77\021\uff77\022\uff77\023\uff77\024\uff77\025" +
    "\uff77\026\uff77\033\uff77\056\uff77\066\uff77\067\uff77\071\uff77" +
    "\073\uff77\001\002\000\050\011\uff74\012\uff74\013\uff74\014" +
    "\uff74\015\uff74\016\uff74\020\uff74\021\uff74\022\uff74\023\uff74" +
    "\024\uff74\025\uff74\026\uff74\033\uff74\056\uff74\066\uff74\067" +
    "\uff74\071\uff74\073\uff74\001\002\000\004\033\u0137\001\002" +
    "\000\050\011\uff75\012\uff75\013\uff75\014\uff75\015\uff75\016" +
    "\uff75\020\uff75\021\uff75\022\uff75\023\uff75\024\uff75\025\uff75" +
    "\026\uff75\033\uff75\056\uff75\066\uff75\067\uff75\071\uff75\073" +
    "\uff75\001\002\000\052\011\uff57\012\uff57\013\uff57\014\uff57" +
    "\015\uff57\016\uff57\017\u0138\020\uff57\021\uff57\022\uff57\023" +
    "\uff57\024\uff57\025\uff57\026\uff57\033\uff57\056\uff57\066\uff57" +
    "\067\uff57\071\uff57\073\uff57\001\002\000\006\003\u013a\032" +
    "\u013c\001\002\000\050\011\uff6a\012\uff6a\013\uff6a\014\uff6a" +
    "\015\uff6a\016\uff6a\020\uff6a\021\uff6a\022\uff6a\023\uff6a\024" +
    "\uff6a\025\uff6a\026\uff6a\033\uff6a\056\uff6a\066\uff6a\067\uff6a" +
    "\071\uff6a\073\uff6a\001\002\000\050\011\uff55\012\uff55\013" +
    "\uff55\014\uff55\015\uff55\016\uff55\020\uff55\021\uff55\022\uff55" +
    "\023\uff55\024\uff55\025\uff55\026\uff55\033\uff55\056\uff55\066" +
    "\uff55\067\uff55\071\uff55\073\uff55\001\002\000\050\011\uff58" +
    "\012\uff58\013\uff58\014\uff58\015\uff58\016\uff58\020\uff58\021" +
    "\uff58\022\uff58\023\uff58\024\uff58\025\uff58\026\uff58\033\uff58" +
    "\056\uff58\066\uff58\067\uff58\071\uff58\073\uff58\001\002\000" +
    "\044\003\u013d\011\024\012\031\013\032\014\045\015\025" +
    "\016\122\020\136\021\115\022\127\023\121\024\133\026" +
    "\120\033\uff6b\056\124\071\041\073\125\001\002\000\050" +
    "\011\uff53\012\uff53\013\uff53\014\uff53\015\uff53\016\uff53\020" +
    "\uff53\021\uff53\022\uff53\023\uff53\024\uff53\025\uff53\026\uff53" +
    "\033\uff53\056\uff53\066\uff53\067\uff53\071\uff53\073\uff53\001" +
    "\002\000\004\033\u0141\001\002\000\050\011\uff56\012\uff56" +
    "\013\uff56\014\uff56\015\uff56\016\uff56\020\uff56\021\uff56\022" +
    "\uff56\023\uff56\024\uff56\025\uff56\026\uff56\033\uff56\056\uff56" +
    "\066\uff56\067\uff56\071\uff56\073\uff56\001\002\000\050\011" +
    "\uff54\012\uff54\013\uff54\014\uff54\015\uff54\016\uff54\020\uff54" +
    "\021\uff54\022\uff54\023\uff54\024\uff54\025\uff54\026\uff54\033" +
    "\uff54\056\uff54\066\uff54\067\uff54\071\uff54\073\uff54\001\002" +
    "\000\050\011\uff52\012\uff52\013\uff52\014\uff52\015\uff52\016" +
    "\uff52\020\uff52\021\uff52\022\uff52\023\uff52\024\uff52\025\uff52" +
    "\026\uff52\033\uff52\056\uff52\066\uff52\067\uff52\071\uff52\073" +
    "\uff52\001\002\000\050\011\uff1d\012\uff1d\013\uff1d\014\uff1d" +
    "\015\uff1d\016\uff1d\020\uff1d\021\uff1d\022\uff1d\023\uff1d\024" +
    "\uff1d\025\uff1d\026\uff1d\033\uff1d\056\uff1d\066\uff1d\067\uff1d" +
    "\071\uff1d\073\uff1d\001\002\000\050\011\uff1b\012\uff1b\013" +
    "\uff1b\014\uff1b\015\uff1b\016\uff1b\020\uff1b\021\uff1b\022\uff1b" +
    "\023\uff1b\024\uff1b\025\uff1b\026\uff1b\033\uff1b\056\uff1b\066" +
    "\uff1b\067\uff1b\071\uff1b\073\uff1b\001\002\000\006\003\u0147" +
    "\056\u0145\001\002\000\006\003\u0149\035\u014a\001\002\000" +
    "\050\011\uff1c\012\uff1c\013\uff1c\014\uff1c\015\uff1c\016\uff1c" +
    "\020\uff1c\021\uff1c\022\uff1c\023\uff1c\024\uff1c\025\uff1c\026" +
    "\uff1c\033\uff1c\056\uff1c\066\uff1c\067\uff1c\071\uff1c\073\uff1c" +
    "\001\002\000\050\011\uff19\012\uff19\013\uff19\014\uff19\015" +
    "\uff19\016\uff19\020\uff19\021\uff19\022\uff19\023\uff19\024\uff19" +
    "\025\uff19\026\uff19\033\uff19\056\uff19\066\uff19\067\uff19\071" +
    "\uff19\073\uff19\001\002\000\050\011\uff1a\012\uff1a\013\uff1a" +
    "\014\uff1a\015\uff1a\016\uff1a\020\uff1a\021\uff1a\022\uff1a\023" +
    "\uff1a\024\uff1a\025\uff1a\026\uff1a\033\uff1a\056\uff1a\066\uff1a" +
    "\067\uff1a\071\uff1a\073\uff1a\001\002\000\050\011\uff17\012" +
    "\uff17\013\uff17\014\uff17\015\uff17\016\uff17\020\uff17\021\uff17" +
    "\022\uff17\023\uff17\024\uff17\025\uff17\026\uff17\033\uff17\056" +
    "\uff17\066\uff17\067\uff17\071\uff17\073\uff17\001\002\000\006" +
    "\003\u014c\032\u014d\001\002\000\050\011\uff18\012\uff18\013" +
    "\uff18\014\uff18\015\uff18\016\uff18\020\uff18\021\uff18\022\uff18" +
    "\023\uff18\024\uff18\025\uff18\026\uff18\033\uff18\056\uff18\066" +
    "\uff18\067\uff18\071\uff18\073\uff18\001\002\000\050\011\uff15" +
    "\012\uff15\013\uff15\014\uff15\015\uff15\016\uff15\020\uff15\021" +
    "\uff15\022\uff15\023\uff15\024\uff15\025\uff15\026\uff15\033\uff15" +
    "\056\uff15\066\uff15\067\uff15\071\uff15\073\uff15\001\002\000" +
    "\012\003\u0150\033\u0151\066\u0153\067\u014e\001\002\000\006" +
    "\003\u0167\070\u0168\001\002\000\004\033\u0165\001\002\000" +
    "\050\011\uff13\012\uff13\013\uff13\014\uff13\015\uff13\016\uff13" +
    "\020\uff13\021\uff13\022\uff13\023\uff13\024\uff13\025\uff13\026" +
    "\uff13\033\uff13\056\uff13\066\uff13\067\uff13\071\uff13\073\uff13" +
    "\001\002\000\050\011\uff10\012\uff10\013\uff10\014\uff10\015" +
    "\uff10\016\uff10\020\uff10\021\uff10\022\uff10\023\uff10\024\uff10" +
    "\025\uff10\026\uff10\033\uff10\056\uff10\066\uff10\067\uff10\071" +
    "\uff10\073\uff10\001\002\000\050\011\uff14\012\uff14\013\uff14" +
    "\014\uff14\015\uff14\016\uff14\020\uff14\021\uff14\022\uff14\023" +
    "\uff14\024\uff14\025\uff14\026\uff14\033\uff14\056\uff14\066\uff14" +
    "\067\uff14\071\uff14\073\uff14\001\002\000\022\003\u0156\057" +
    "\216\060\214\061\213\062\220\063\223\064\227\065\222" +
    "\001\002\000\050\011\uff16\012\uff16\013\uff16\014\uff16\015" +
    "\uff16\016\uff16\020\uff16\021\uff16\022\uff16\023\uff16\024\uff16" +
    "\025\uff16\026\uff16\033\uff16\056\uff16\066\uff16\067\uff16\071" +
    "\uff16\073\uff16\001\002\000\006\003\uff0e\070\uff0e\001\002" +
    "\000\006\003\uff0d\070\uff0d\001\002\000\010\033\u0151\066" +
    "\u0153\067\u014e\001\002\000\006\003\u0159\070\u015b\001\002" +
    "\000\010\033\uff0b\066\uff0b\067\uff0b\001\002\000\010\033" +
    "\uff0f\066\uff0f\067\uff0f\001\002\000\052\003\u015d\011\024" +
    "\012\031\013\032\014\045\015\025\016\122\020\136\021" +
    "\115\022\127\023\121\024\133\025\uff6b\026\120\033\uff6b" +
    "\056\124\066\uff6b\067\uff6b\071\041\073\125\001\002\000" +
    "\010\033\uff0c\066\uff0c\067\uff0c\001\002\000\010\033\uff09" +
    "\066\uff09\067\uff09\001\002\000\012\025\u015f\033\uff07\066" +
    "\uff07\067\uff07\001\002\000\006\003\u0161\027\u0163\001\002" +
    "\000\010\033\uff0a\066\uff0a\067\uff0a\001\002\000\010\033" +
    "\uff05\066\uff05\067\uff05\001\002\000\010\033\uff08\066\uff08" +
    "\067\uff08\001\002\000\010\033\uff06\066\uff06\067\uff06\001" +
    "\002\000\050\011\uff12\012\uff12\013\uff12\014\uff12\015\uff12" +
    "\016\uff12\020\uff12\021\uff12\022\uff12\023\uff12\024\uff12\025" +
    "\uff12\026\uff12\033\uff12\056\uff12\066\uff12\067\uff12\071\uff12" +
    "\073\uff12\001\002\000\050\011\uff11\012\uff11\013\uff11\014" +
    "\uff11\015\uff11\016\uff11\020\uff11\021\uff11\022\uff11\023\uff11" +
    "\024\uff11\025\uff11\026\uff11\033\uff11\056\uff11\066\uff11\067" +
    "\uff11\071\uff11\073\uff11\001\002\000\004\033\uff04\001\002" +
    "\000\004\033\uff02\001\002\000\042\011\024\012\031\013" +
    "\032\014\045\015\025\016\122\020\136\021\115\022\127" +
    "\023\121\024\133\026\120\033\uff6b\056\124\071\041\073" +
    "\125\001\002\000\004\033\uff03\001\002\000\004\027\u016f" +
    "\001\002\000\050\011\uffa9\012\uffa9\013\uffa9\014\uffa9\015" +
    "\uffa9\016\uffa9\020\uffa9\021\uffa9\022\uffa9\023\uffa9\024\uffa9" +
    "\025\uffa9\026\uffa9\033\uffa9\056\uffa9\066\uffa9\067\uffa9\071" +
    "\uffa9\073\uffa9\001\002\000\004\027\u016f\001\002\000\050" +
    "\011\uffa6\012\uffa6\013\uffa6\014\uffa6\015\uffa6\016\uffa6\020" +
    "\uffa6\021\uffa6\022\uffa6\023\uffa6\024\uffa6\025\uffa6\026\uffa6" +
    "\033\uffa6\056\uffa6\066\uffa6\067\uffa6\071\uffa6\073\uffa6\001" +
    "\002\000\050\011\uffa7\012\uffa7\013\uffa7\014\uffa7\015\uffa7" +
    "\016\uffa7\020\uffa7\021\uffa7\022\uffa7\023\uffa7\024\uffa7\025" +
    "\uffa7\026\uffa7\033\uffa7\056\uffa7\066\uffa7\067\uffa7\071\uffa7" +
    "\073\uffa7\001\002\000\050\011\uffa5\012\uffa5\013\uffa5\014" +
    "\uffa5\015\uffa5\016\uffa5\020\uffa5\021\uffa5\022\uffa5\023\uffa5" +
    "\024\uffa5\025\uffa5\026\uffa5\033\uffa5\056\uffa5\066\uffa5\067" +
    "\uffa5\071\uffa5\073\uffa5\001\002\000\050\011\uffa8\012\uffa8" +
    "\013\uffa8\014\uffa8\015\uffa8\016\uffa8\020\uffa8\021\uffa8\022" +
    "\uffa8\023\uffa8\024\uffa8\025\uffa8\026\uffa8\033\uffa8\056\uffa8" +
    "\066\uffa8\067\uffa8\071\uffa8\073\uffa8\001\002\000\012\025" +
    "\uff71\033\uff71\066\uff71\067\uff71\001\002\000\012\025\uff6e" +
    "\033\uff6e\066\uff6e\067\uff6e\001\002\000\050\011\uff4f\012" +
    "\uff4f\013\uff4f\014\uff4f\015\uff4f\016\uff4f\020\uff4f\021\uff4f" +
    "\022\uff4f\023\uff4f\024\uff4f\025\uff4f\026\uff4f\033\uff4f\056" +
    "\uff4f\066\uff4f\067\uff4f\071\uff4f\073\uff4f\001\002\000\050" +
    "\011\uff51\012\uff51\013\uff51\014\uff51\015\uff51\016\uff51\020" +
    "\uff51\021\uff51\022\uff51\023\uff51\024\uff51\025\uff51\026\uff51" +
    "\033\uff51\056\uff51\066\uff51\067\uff51\071\uff51\073\uff51\001" +
    "\002\000\030\003\u0177\034\341\053\326\056\330\057\342" +
    "\060\324\061\323\062\327\063\337\064\335\065\343\001" +
    "\002\000\006\003\u017a\035\u017b\001\002\000\050\011\uff4d" +
    "\012\uff4d\013\uff4d\014\uff4d\015\uff4d\016\uff4d\020\uff4d\021" +
    "\uff4d\022\uff4d\023\uff4d\024\uff4d\025\uff4d\026\uff4d\033\uff4d" +
    "\056\uff4d\066\uff4d\067\uff4d\071\uff4d\073\uff4d\001\002\000" +
    "\050\011\uff50\012\uff50\013\uff50\014\uff50\015\uff50\016\uff50" +
    "\020\uff50\021\uff50\022\uff50\023\uff50\024\uff50\025\uff50\026" +
    "\uff50\033\uff50\056\uff50\066\uff50\067\uff50\071\uff50\073\uff50" +
    "\001\002\000\050\011\uff4e\012\uff4e\013\uff4e\014\uff4e\015" +
    "\uff4e\016\uff4e\020\uff4e\021\uff4e\022\uff4e\023\uff4e\024\uff4e" +
    "\025\uff4e\026\uff4e\033\uff4e\056\uff4e\066\uff4e\067\uff4e\071" +
    "\uff4e\073\uff4e\001\002\000\050\011\uff4b\012\uff4b\013\uff4b" +
    "\014\uff4b\015\uff4b\016\uff4b\020\uff4b\021\uff4b\022\uff4b\023" +
    "\uff4b\024\uff4b\025\uff4b\026\uff4b\033\uff4b\056\uff4b\066\uff4b" +
    "\067\uff4b\071\uff4b\073\uff4b\001\002\000\006\003\u017d\032" +
    "\u017e\001\002\000\050\011\uff4c\012\uff4c\013\uff4c\014\uff4c" +
    "\015\uff4c\016\uff4c\020\uff4c\021\uff4c\022\uff4c\023\uff4c\024" +
    "\uff4c\025\uff4c\026\uff4c\033\uff4c\056\uff4c\066\uff4c\067\uff4c" +
    "\071\uff4c\073\uff4c\001\002\000\050\011\uff49\012\uff49\013" +
    "\uff49\014\uff49\015\uff49\016\uff49\020\uff49\021\uff49\022\uff49" +
    "\023\uff49\024\uff49\025\uff49\026\uff49\033\uff49\056\uff49\066" +
    "\uff49\067\uff49\071\uff49\073\uff49\001\002\000\044\003\u0180" +
    "\011\024\012\031\013\032\014\045\015\025\016\122\020" +
    "\136\021\115\022\127\023\121\024\133\026\120\033\uff6b" +
    "\056\124\071\041\073\125\001\002\000\050\011\uff4a\012" +
    "\uff4a\013\uff4a\014\uff4a\015\uff4a\016\uff4a\020\uff4a\021\uff4a" +
    "\022\uff4a\023\uff4a\024\uff4a\025\uff4a\026\uff4a\033\uff4a\056" +
    "\uff4a\066\uff4a\067\uff4a\071\uff4a\073\uff4a\001\002\000\050" +
    "\011\uff47\012\uff47\013\uff47\014\uff47\015\uff47\016\uff47\020" +
    "\uff47\021\uff47\022\uff47\023\uff47\024\uff47\025\uff47\026\uff47" +
    "\033\uff47\056\uff47\066\uff47\067\uff47\071\uff47\073\uff47\001" +
    "\002\000\004\033\u0183\001\002\000\050\011\uff48\012\uff48" +
    "\013\uff48\014\uff48\015\uff48\016\uff48\020\uff48\021\uff48\022" +
    "\uff48\023\uff48\024\uff48\025\uff48\026\uff48\033\uff48\056\uff48" +
    "\066\uff48\067\uff48\071\uff48\073\uff48\001\002\000\050\011" +
    "\uff46\012\uff46\013\uff46\014\uff46\015\uff46\016\uff46\020\uff46" +
    "\021\uff46\022\uff46\023\uff46\024\uff46\025\uff46\026\uff46\033" +
    "\uff46\056\uff46\066\uff46\067\uff46\071\uff46\073\uff46\001\002" +
    "\000\012\025\uff73\033\uff73\066\uff73\067\uff73\001\002\000" +
    "\004\035\uffb2\001\002\000\004\035\uffb3\001\002\000\004" +
    "\056\u018a\001\002\000\016\027\055\031\052\036\231\037" +
    "\234\040\235\041\233\001\002\000\060\003\uffd2\005\uffd2" +
    "\006\uffd2\007\uffd2\011\uffd2\012\uffd2\013\uffd2\014\uffd2\015" +
    "\uffd2\016\uffd2\020\uffd2\021\uffd2\022\uffd2\023\uffd2\024\uffd2" +
    "\025\uffd2\026\uffd2\033\uffd2\056\uffd2\066\uffd2\067\uffd2\071" +
    "\uffd2\073\uffd2\001\002\000\004\034\u018b\001\002\000\030" +
    "\003\225\034\226\035\uff9b\056\251\057\216\060\214\061" +
    "\213\062\220\063\223\064\227\065\222\001\002\000\004" +
    "\035\u018d\001\002\000\004\027\u018e\001\002\000\060\003" +
    "\uffd1\005\uffd1\006\uffd1\007\uffd1\011\uffd1\012\uffd1\013\uffd1" +
    "\014\uffd1\015\uffd1\016\uffd1\020\uffd1\021\uffd1\022\uffd1\023" +
    "\uffd1\024\uffd1\025\uffd1\026\uffd1\033\uffd1\056\uffd1\066\uffd1" +
    "\067\uffd1\071\uffd1\073\uffd1\001\002\000\060\003\uffcf\005" +
    "\uffcf\006\uffcf\007\uffcf\011\uffcf\012\uffcf\013\uffcf\014\uffcf" +
    "\015\uffcf\016\uffcf\020\uffcf\021\uffcf\022\uffcf\023\uffcf\024" +
    "\uffcf\025\uffcf\026\uffcf\033\uffcf\056\uffcf\066\uffcf\067\uffcf" +
    "\071\uffcf\073\uffcf\001\002\000\004\002\ufef9\001\002\000" +
    "\004\034\uffda\001\002\000\004\034\062\001\002\000\060" +
    "\003\uffd9\005\uffd9\006\uffd9\007\uffd9\011\uffd9\012\uffd9\013" +
    "\uffd9\014\uffd9\015\uffd9\016\uffd9\020\uffd9\021\uffd9\022\uffd9" +
    "\023\uffd9\024\uffd9\025\uffd9\026\uffd9\033\uffd9\056\uffd9\066" +
    "\uffd9\067\uffd9\071\uffd9\073\uffd9\001\002\000\034\003\uffe2" +
    "\005\uffe2\006\uffe2\007\uffe2\011\uffe2\012\uffe2\013\uffe2\014" +
    "\uffe2\015\uffe2\024\uffe2\033\uffe2\056\uffe2\071\uffe2\001\002" +
    "\000\034\003\uffe7\005\uffe7\006\uffe7\007\uffe7\011\uffe7\012" +
    "\uffe7\013\uffe7\014\uffe7\015\uffe7\024\uffe7\033\uffe7\056\uffe7" +
    "\071\uffe7\001\002\000\060\003\uffde\005\uffde\006\uffde\007" +
    "\uffde\011\uffde\012\uffde\013\uffde\014\uffde\015\uffde\016\uffde" +
    "\020\uffde\021\uffde\022\uffde\023\uffde\024\uffde\025\uffde\026" +
    "\uffde\033\uffde\056\uffde\066\uffde\067\uffde\071\uffde\073\uffde" +
    "\001\002\000\060\003\uffdf\005\uffdf\006\uffdf\007\uffdf\011" +
    "\uffdf\012\uffdf\013\uffdf\014\uffdf\015\uffdf\016\uffdf\020\uffdf" +
    "\021\uffdf\022\uffdf\023\uffdf\024\uffdf\025\uffdf\026\uffdf\033" +
    "\uffdf\056\uffdf\066\uffdf\067\uffdf\071\uffdf\073\uffdf\001\002" +
    "\000\034\003\uffe9\005\uffe9\006\uffe9\007\uffe9\011\uffe9\012" +
    "\uffe9\013\uffe9\014\uffe9\015\uffe9\024\uffe9\033\uffe9\056\uffe9" +
    "\071\uffe9\001\002\000\004\034\u019b\001\002\000\034\003" +
    "\uffe3\005\uffe3\006\uffe3\007\uffe3\011\uffe3\012\uffe3\013\uffe3" +
    "\014\uffe3\015\uffe3\024\uffe3\033\uffe3\056\uffe3\071\uffe3\001" +
    "\002\000\022\003\u019e\011\064\012\065\013\070\014\071" +
    "\015\075\035\uffb4\056\072\001\002\000\034\003\ufef6\005" +
    "\ufef6\006\ufef6\007\ufef6\011\ufef6\012\ufef6\013\ufef6\014\ufef6" +
    "\015\ufef6\024\ufef6\033\ufef6\056\ufef6\071\ufef6\001\002\000" +
    "\004\035\u01a0\001\002\000\034\003\ufef4\005\ufef4\006\ufef4" +
    "\007\ufef4\011\ufef4\012\ufef4\013\ufef4\014\ufef4\015\ufef4\024" +
    "\ufef4\033\ufef4\056\ufef4\071\ufef4\001\002\000\034\003\ufef5" +
    "\005\ufef5\006\ufef5\007\ufef5\011\ufef5\012\ufef5\013\ufef5\014" +
    "\ufef5\015\ufef5\024\ufef5\033\ufef5\056\ufef5\071\ufef5\001\002" +
    "\000\006\003\u01a1\032\u01a3\001\002\000\034\003\ufef1\005" +
    "\ufef1\006\ufef1\007\ufef1\011\ufef1\012\ufef1\013\ufef1\014\ufef1" +
    "\015\ufef1\024\ufef1\033\ufef1\056\ufef1\071\ufef1\001\002\000" +
    "\034\003\ufef3\005\ufef3\006\ufef3\007\ufef3\011\ufef3\012\ufef3" +
    "\013\ufef3\014\ufef3\015\ufef3\024\ufef3\033\ufef3\056\ufef3\071" +
    "\ufef3\001\002\000\044\003\u01a4\011\024\012\031\013\032" +
    "\014\045\015\025\016\122\020\136\021\115\022\127\023" +
    "\121\024\133\026\120\033\uff6b\056\124\071\041\073\125" +
    "\001\002\000\034\003\ufeef\005\ufeef\006\ufeef\007\ufeef\011" +
    "\ufeef\012\ufeef\013\ufeef\014\ufeef\015\ufeef\024\ufeef\033\ufeef" +
    "\056\ufeef\071\ufeef\001\002\000\004\033\u01a7\001\002\000" +
    "\034\003\ufef2\005\ufef2\006\ufef2\007\ufef2\011\ufef2\012\ufef2" +
    "\013\ufef2\014\ufef2\015\ufef2\024\ufef2\033\ufef2\056\ufef2\071" +
    "\ufef2\001\002\000\034\003\ufeee\005\ufeee\006\ufeee\007\ufeee" +
    "\011\ufeee\012\ufeee\013\ufeee\014\ufeee\015\ufeee\024\ufeee\033" +
    "\ufeee\056\ufeee\071\ufeee\001\002\000\034\003\ufef0\005\ufef0" +
    "\006\ufef0\007\ufef0\011\ufef0\012\ufef0\013\ufef0\014\ufef0\015" +
    "\ufef0\024\ufef0\033\ufef0\056\ufef0\071\ufef0\001\002\000\034" +
    "\003\uffe8\005\uffe8\006\uffe8\007\uffe8\011\uffe8\012\uffe8\013" +
    "\uffe8\014\uffe8\015\uffe8\024\uffe8\033\uffe8\056\uffe8\071\uffe8" +
    "\001\002\000\060\003\uffdd\005\uffdd\006\uffdd\007\uffdd\011" +
    "\uffdd\012\uffdd\013\uffdd\014\uffdd\015\uffdd\016\uffdd\020\uffdd" +
    "\021\uffdd\022\uffdd\023\uffdd\024\uffdd\025\uffdd\026\uffdd\033" +
    "\uffdd\056\uffdd\066\uffdd\067\uffdd\071\uffdd\073\uffdd\001\002" +
    "\000\060\003\uffe0\005\uffe0\006\uffe0\007\uffe0\011\uffe0\012" +
    "\uffe0\013\uffe0\014\uffe0\015\uffe0\016\uffe0\020\uffe0\021\uffe0" +
    "\022\uffe0\023\uffe0\024\uffe0\025\uffe0\026\uffe0\033\uffe0\056" +
    "\uffe0\066\uffe0\067\uffe0\071\uffe0\073\uffe0\001\002\000\004" +
    "\002\001\001\002\000\004\002\000\001\002\000\006\003" +
    "\u01b3\030\u01b1\001\002\000\014\002\ufffd\003\ufffd\004\ufffd" +
    "\005\ufffd\010\ufffd\001\002\000\014\002\ufffa\003\ufffa\004" +
    "\ufffa\005\ufffa\010\ufffa\001\002\000\010\003\u01b6\040\u01b7" +
    "\056\u01b4\001\002\000\014\002\ufffb\003\ufffb\004\ufffb\005" +
    "\ufffb\010\ufffb\001\002\000\014\002\ufff8\003\ufff8\004\ufff8" +
    "\005\ufff8\010\ufff8\001\002\000\010\003\u01b3\027\u01bc\030" +
    "\u01b1\001\002\000\014\002\ufff9\003\ufff9\004\ufff9\005\ufff9" +
    "\010\ufff9\001\002\000\014\002\ufff5\003\ufff5\004\ufff5\005" +
    "\ufff5\010\ufff5\001\002\000\006\003\u01b9\027\u01ba\001\002" +
    "\000\014\002\ufff7\003\ufff7\004\ufff7\005\ufff7\010\ufff7\001" +
    "\002\000\014\002\ufff3\003\ufff3\004\ufff3\005\ufff3\010\ufff3" +
    "\001\002\000\014\002\ufff4\003\ufff4\004\ufff4\005\ufff4\010" +
    "\ufff4\001\002\000\014\002\ufff1\003\ufff1\004\ufff1\005\ufff1" +
    "\010\ufff1\001\002\000\014\002\ufff2\003\ufff2\004\ufff2\005" +
    "\ufff2\010\ufff2\001\002\000\014\002\ufff6\003\ufff6\004\ufff6" +
    "\005\ufff6\010\ufff6\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\u01bb\000\012\002\005\154\010\155\007\163\006\001" +
    "\001\000\004\003\u01ae\001\001\000\002\001\001\000\012" +
    "\002\005\154\010\155\007\163\u01ac\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\156\016" +
    "\001\001\000\004\155\013\001\001\000\002\001\001\000" +
    "\004\170\017\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\157\021\001\001\000\002\001\001\000\002\001" +
    "\001\000\014\010\043\011\042\012\041\160\037\161\032" +
    "\001\001\000\004\013\u01aa\001\001\000\004\013\u01a9\001" +
    "\001\000\010\011\042\012\041\161\u01a8\001\001\000\006" +
    "\013\261\164\u0198\001\001\000\010\011\042\012\041\161" +
    "\u0197\001\001\000\004\013\u0196\001\001\000\004\013\u0195" +
    "\001\001\000\002\001\001\000\010\011\042\012\041\161" +
    "\u0194\001\001\000\004\012\u0193\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\014\010\043\011\042" +
    "\012\041\160\u018f\161\032\001\001\000\004\013\047\001" +
    "\001\000\004\166\050\001\001\000\002\001\001\000\002" +
    "\001\001\000\012\014\060\017\052\140\053\162\055\001" +
    "\001\000\004\013\u018e\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\006\015\220\016\u0187\001\001\000\002\001\001" +
    "\000\004\167\062\001\001\000\010\022\073\025\066\141" +
    "\065\001\001\000\004\023\u0185\001\001\000\004\023\u0184" +
    "\001\001\000\002\001\001\000\004\142\107\001\001\000" +
    "\004\023\105\001\001\000\004\023\104\001\001\000\004" +
    "\023\103\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\023\076\001\001\000\004\024\101\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\022\102\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\143\111\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\030" +
    "\012\136\020\115\026\125\031\122\041\113\065\133\066" +
    "\134\075\116\106\130\121\137\144\127\001\001\000\026" +
    "\012\136\020\115\026\125\031\122\041\113\065\u0183\066" +
    "\134\075\116\106\130\121\137\001\001\000\004\067\u0173" +
    "\001\001\000\026\012\136\020\115\026\125\031\122\041" +
    "\113\065\u0171\066\134\075\116\106\130\121\137\001\001" +
    "\000\026\012\136\020\115\026\125\031\122\041\113\065" +
    "\u0170\066\134\075\116\106\130\121\137\001\001\000\006" +
    "\015\u0169\027\u016a\001\001\000\004\122\u0141\001\001\000" +
    "\004\042\u0128\001\001\000\026\012\136\020\115\026\125" +
    "\031\122\041\113\065\u0125\066\134\075\116\106\130\121" +
    "\137\001\001\000\010\013\261\021\260\032\u0124\001\001" +
    "\000\002\001\001\000\026\012\136\020\115\026\125\031" +
    "\122\041\113\065\u0117\066\134\075\116\106\130\121\137" +
    "\001\001\000\004\076\304\001\001\000\002\001\001\000" +
    "\026\012\136\020\115\026\125\031\122\041\113\065\302" +
    "\066\134\075\116\106\130\121\137\001\001\000\002\001" +
    "\001\000\004\012\301\001\001\000\004\145\276\001\001" +
    "\000\026\012\136\020\115\026\125\031\122\041\113\065" +
    "\275\066\134\075\116\106\130\121\137\001\001\000\004" +
    "\107\141\001\001\000\002\001\001\000\026\012\136\020" +
    "\115\026\125\031\122\041\113\065\140\066\134\075\116" +
    "\106\130\121\137\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\012\012\136\020\151\110\145" +
    "\115\144\001\001\000\004\111\262\001\001\000\002\001" +
    "\001\000\006\013\261\021\260\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\064\153\001" +
    "\001\000\006\116\166\120\164\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\006\116\204\120\164\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\006\116\203\120\164\001\001\000\006\116\202\120" +
    "\164\001\001\000\004\117\175\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\006\116\201\120" +
    "\164\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\021\211\001\001\000\006" +
    "\015\220\016\216\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\006\015\220\016\227\001\001\000\002\001" +
    "\001\000\002\001\001\000\006\015\220\016\240\001\001" +
    "\000\002\001\001\000\006\015\220\016\237\001\001\000" +
    "\006\015\220\016\236\001\001\000\006\015\220\016\235" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\012\015\220\016\246\036\247\040" +
    "\245\001\001\000\002\001\001\000\004\037\255\001\001" +
    "\000\002\001\001\000\004\037\253\001\001\000\010\015" +
    "\220\016\246\036\254\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\112\266\001" +
    "\001\000\002\001\001\000\002\001\001\000\030\012\136" +
    "\020\115\026\125\031\122\041\113\065\272\066\134\075" +
    "\116\106\130\113\270\121\137\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\114\274\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\013\261\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\030\012\136\020\115\026\125\031\122\041\113\065" +
    "\310\066\134\075\116\077\306\106\130\121\137\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\100\312\001" +
    "\001\000\004\101\314\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\102\320\001\001\000" +
    "\002\001\001\000\022\050\335\052\333\053\332\054\331" +
    "\055\330\056\343\063\324\103\321\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\104\u0112\001\001\000\006\050\u010d\052\u010c\001" +
    "\001\000\002\001\001\000\004\064\u0102\001\001\000\004" +
    "\064\367\001\001\000\004\051\362\001\001\000\004\051" +
    "\361\001\001\000\004\051\353\001\001\000\002\001\001" +
    "\000\004\051\u0101\001\001\000\002\001\001\000\002\001" +
    "\001\000\020\050\335\052\347\053\346\054\345\055\344" +
    "\056\343\063\350\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\064\367\001\001\000\004" +
    "\051\362\001\001\000\004\051\361\001\001\000\004\051" +
    "\353\001\001\000\002\001\001\000\002\001\001\000\020" +
    "\050\335\052\333\053\332\054\331\055\330\056\343\063" +
    "\357\001\001\000\002\001\001\000\002\001\001\000\020" +
    "\050\335\052\333\053\332\054\331\055\330\056\343\063" +
    "\356\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\006\055\u0100\056\343\001\001\000\006\055\377" +
    "\056\343\001\001\000\006\055\376\056\343\001\001\000" +
    "\006\055\375\056\343\001\001\000\006\055\372\056\343" +
    "\001\001\000\002\001\001\000\002\001\001\000\006\055" +
    "\374\056\343\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\006\055\u0109\056\343\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\051\u0110\001" +
    "\001\000\004\051\u010f\001\001\000\020\050\335\052\347" +
    "\053\332\054\331\055\330\056\343\063\350\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\105\u0115\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\006\021\211\032\u011a\001\001\000\002\001" +
    "\001\000\014\015\220\016\246\033\u011d\036\247\040\u011c" +
    "\001\001\000\004\034\u011f\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\035\u0121\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\022" +
    "\043\u0129\050\335\052\333\053\332\054\331\055\330\056" +
    "\343\063\u012a\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\044\u012e\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\045\u0130\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\030\012\136\020\115\026" +
    "\125\031\122\041\113\046\u0132\065\u0134\066\134\075\116" +
    "\106\130\121\137\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\047\u0135\001\001\000\002\001\001\000\004" +
    "\057\u0138\001\001\000\004\060\u013a\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\030\012\136" +
    "\020\115\026\125\031\122\041\113\061\u013e\065\u013d\066" +
    "\134\075\116\106\130\121\137\001\001\000\002\001\001" +
    "\000\004\062\u013f\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\123\u0145\001\001\000\004\124\u0147\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\125\u014a\001\001\000\002\001\001\000" +
    "\002\001\001\000\010\126\u0153\127\u0151\136\u014e\001\001" +
    "\000\004\137\u0165\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\010\015\u0154" +
    "\130\u0156\131\u0157\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\006\127\u0163\136\u014e\001\001" +
    "\000\004\132\u0159\001\001\000\002\001\001\000\002\001" +
    "\001\000\030\012\136\020\115\026\125\031\122\041\113" +
    "\065\u015d\066\134\075\116\106\130\121\137\133\u015b\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\134\u015f" +
    "\001\001\000\004\135\u0161\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\026\012\136\020\115\026\125\031\122\041\113" +
    "\065\u0168\066\134\075\116\106\130\121\137\001\001\000" +
    "\002\001\001\000\004\030\u016f\001\001\000\002\001\001" +
    "\000\004\030\u016d\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\022\050\335\052\333\053\332\054\331\055\330\056\343" +
    "\063\u0175\070\u0177\001\001\000\004\071\u0178\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\072\u017b\001\001\000\002\001\001\000" +
    "\002\001\001\000\030\012\136\020\115\026\125\031\122" +
    "\041\113\065\u0180\066\134\073\u017e\075\116\106\130\121" +
    "\137\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\074\u0181\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\017\u0188\001\001\000\002\001\001\000" +
    "\002\001\001\000\012\015\220\016\246\036\247\040\u018b" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\165\u0191" +
    "\001\001\000\004\140\u0192\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\146\u0199\001\001\000" +
    "\002\001\001\000\010\022\073\025\u019c\147\u019b\001\001" +
    "\000\002\001\001\000\004\150\u019e\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\151\u01a1\001\001\000\002" +
    "\001\001\000\002\001\001\000\030\012\136\020\115\026" +
    "\125\031\122\041\113\065\u01a4\066\134\075\116\106\130" +
    "\121\137\152\u01a5\001\001\000\002\001\001\000\004\153" +
    "\u01a7\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\004\u01b1" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\005" +
    "\u01b4\001\001\000\002\001\001\000\002\001\001\000\006" +
    "\004\u01ba\007\u01bc\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\006\u01b7\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$parser$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$parser$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$parser$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}


  
    private String nombreClase="";
    private String ambitoActual="";
    private String temp="";
    private TablaSimbolos tablaSimbolos;
    private javax.swing.JTextArea taErrores;
    private boolean errores = false; 
    private String nombreArchivo;

    public parser(java_cup.runtime.Scanner s, TablaSimbolos tablaSimbolos, javax.swing.JTextArea taErrores, String nombreArchivo){
        this(s);
        this.tablaSimbolos = tablaSimbolos;
        this.taErrores = taErrores;
        this.nombreArchivo = nombreArchivo;
    }

    public boolean isErrores(){
        return errores;
    }

    public void syntax_error(Symbol s){
        errores = true;
        taErrores.append("Error sintactico: " + s.value.toString() + " Archivo:" + nombreArchivo + " Linea:" + s.right + " Columna:" + s.left + ". ");
    }

    public void unrecovered_syntax_error(Symbol s) throws java.lang.Exception {
        errores = true;
        taErrores.append("No se pudo recuperar el analizador. Archivo:" + nombreArchivo + " Linea:" + s.right + " Columna:" + s.left + "\n");
    }


/** Cup generated class to encapsulate user supplied action code.*/
@SuppressWarnings({"rawtypes", "unchecked", "unused"})
class CUP$parser$actions {
  private final parser parser;

  /** Constructor */
  CUP$parser$actions(parser parser) {
    this.parser = parser;
  }

  /** Method 0 with the actual generated action code for actions 0 to 300. */
  public final java_cup.runtime.Symbol CUP$parser$do_action_part00000000(
    int                        CUP$parser$act_num,
    java_cup.runtime.lr_parser CUP$parser$parser,
    java.util.Stack            CUP$parser$stack,
    int                        CUP$parser$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$parser$result;

      /* select the action based on the action number */
      switch (CUP$parser$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= s0 EOF 
            {
              Object RESULT =null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String start_val = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		RESULT = start_val;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$parser$parser.done_parsing();
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // s0 ::= s1 s0 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s0",113, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // s0 ::= s95 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s0",113, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // s0 ::= 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s0",113, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // s1 ::= IMPORT s2 
            {
              String RESULT =null;
		int v1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int v1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String v1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int v2left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int v2right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String v2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s1",0, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // s1 ::= error 
            {
              String RESULT =null;
		taErrores.append("Se esperaba import o la definicion de una clase. \n");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s1",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // s2 ::= ID s3 
            {
              String RESULT =null;
		int v1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int v1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String v1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int v2left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int v2right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String v2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s2",1, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // s2 ::= error 
            {
              String RESULT =null;
		taErrores.append("Se esperaba el nombre del paquete \n");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s2",1, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // s3 ::= PUNTO s4 
            {
              String RESULT =null;
		int v1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int v1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String v1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int v2left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int v2right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String v2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s3",2, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // s3 ::= error 
            {
              String RESULT =null;
		taErrores.append("Se esperaba un punto, punto coma, o el import es muy corto Ej: import pack; \n");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s3",2, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // s4 ::= POR s5 
            {
              String RESULT =null;
		int v1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int v1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String v1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int v2left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int v2right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String v2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s4",3, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // s4 ::= ID s6 
            {
              String RESULT =null;
		int v1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int v1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String v1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int v2left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int v2right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String v2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s4",3, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // s4 ::= error 
            {
              String RESULT =null;
		taErrores.append("Se esperaba * o id \n");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s4",3, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // s5 ::= P_COMA 
            {
              String RESULT =null;
		int v1left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int v1right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String v1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s5",4, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // s5 ::= error 
            {
              String RESULT =null;
		taErrores.append("Se esperaba un punto y coma \n");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s5",4, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // s6 ::= P_COMA 
            {
              String RESULT =null;
		int v1left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int v1right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String v1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s6",5, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // s6 ::= s3 
            {
              String RESULT =null;
		int v1left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int v1right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String v1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s6",5, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // s12 ::= FINAL s9 
            {
              Termino RESULT =null;
		int v1left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int v1right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Termino v1 = (Termino)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		v1.setRol(Roles.VARIABLE); v1.setAmbito(ambitoActual); tablaSimbolos.agregarTermino(v1);
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s12",14, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // s12 ::= s9 
            {
              Termino RESULT =null;
		int v1left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int v1right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Termino v1 = (Termino)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		v1.setRol(Roles.VARIABLE); v1.setAmbito(ambitoActual); tablaSimbolos.agregarTermino(v1);
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s12",14, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // s12 ::= THIS PUNTO ID s13 
            {
              Termino RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s12",14, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // s12 ::= ID s13 
            {
              Termino RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s12",14, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // s13 ::= ASIGNACION exp P_COMA 
            {
              Termino RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s13",15, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // s13 ::= ASIGNACION ID P_COMA 
            {
              Termino RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s13",15, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // s13 ::= ASIGNACION NEW ID PARENTESIS_A argumento PARENTESIS_C P_COMA 
            {
              Termino RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s13",15, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // s7 ::= PUBLIC s101 
            {
              Termino RESULT =null;
		int v1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int v1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String v1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int v2left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int v2right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Termino v2 = (Termino)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		if(v2.getRol()==null){v2.setRol(Roles.VARIABLE);} v2.setAmbito(nombreClase); v2.setVisibilidad(Visibilidad.PUBLIC);  tablaSimbolos.agregarTermino(v2);
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s7",6, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // s7 ::= PRIVATE s101 
            {
              Termino RESULT =null;
		int v1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int v1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String v1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int v2left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int v2right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Termino v2 = (Termino)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		if(v2.getRol()==null){v2.setRol(Roles.VARIABLE);} v2.setAmbito(nombreClase); v2.setVisibilidad(Visibilidad.PRIVATE); tablaSimbolos.agregarTermino(v2);
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s7",6, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // s7 ::= PROTECTED s101 
            {
              Termino RESULT =null;
		int v1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int v1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String v1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int v2left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int v2right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Termino v2 = (Termino)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		if(v2.getRol()==null){v2.setRol(Roles.VARIABLE);} v2.setAmbito(nombreClase); v2.setVisibilidad(Visibilidad.PROTECTED); tablaSimbolos.agregarTermino(v2);
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s7",6, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // s7 ::= s101 
            {
              Termino RESULT =null;
		int v1left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int v1right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Termino v1 = (Termino)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		  if(v1!=null){
                                            if(v1.getRol()==null){v1.setRol(Roles.VARIABLE);}
                                            v1.setAmbito(nombreClase);
                                            v1.setVisibilidad(Visibilidad.DEFAULT); tablaSimbolos.agregarTermino(v1);
                                        }
                                    
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s7",6, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // s101 ::= s8 
            {
              Termino RESULT =null;
		int v1left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int v1right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Termino v1 = (Termino)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		RESULT=v1;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s101",111, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // NT$0 ::= 
            {
              Termino RESULT =null;
		int v1left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int v1right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String v1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
ambitoActual="Constructor "+v1;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("NT$0",114, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // s101 ::= ID NT$0 s89 
            {
              Termino RESULT =null;
              // propagate RESULT from NT$0
                RESULT = (Termino) ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int v1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int v1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		String v1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s101",111, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // s8 ::= FINAL s9 
            {
              Termino RESULT =null;
		int v1left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int v1right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Termino v1 = (Termino)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		RESULT=v1;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s8",7, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // s8 ::= s9 
            {
              Termino RESULT =null;
		int v1left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int v1right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Termino v1 = (Termino)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		RESULT=v1;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s8",7, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // s9 ::= INT s10 
            {
              Termino RESULT =null;
		int v1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int v1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String v1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int v2left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int v2right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Termino v2 = (Termino)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		v2.setTipo(v1); RESULT=v2;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s9",8, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // s9 ::= BOOLEAN s10 
            {
              Termino RESULT =null;
		int v1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int v1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String v1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int v2left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int v2right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Termino v2 = (Termino)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		v2.setTipo(v1); RESULT=v2;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s9",8, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // s9 ::= STRING s10 
            {
              Termino RESULT =null;
		int v1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int v1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String v1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int v2left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int v2right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Termino v2 = (Termino)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		v2.setTipo(v1); RESULT=v2;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s9",8, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // s9 ::= CHAR s10 
            {
              Termino RESULT =null;
		int v1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int v1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String v1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int v2left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int v2right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Termino v2 = (Termino)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		v2.setTipo(v1); RESULT=v2;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s9",8, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // s9 ::= DOUBLE s10 
            {
              Termino RESULT =null;
		int v1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int v1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String v1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int v2left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int v2right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Termino v2 = (Termino)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		v2.setTipo(v1); RESULT=v2;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s9",8, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // s9 ::= ID s10 
            {
              Termino RESULT =null;
		int v1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int v1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String v1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int v2left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int v2right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Termino v2 = (Termino)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		v2.setTipo(v1); RESULT=v2;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s9",8, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // NT$1 ::= 
            {
              Termino RESULT =null;
		int v1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int v1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String v1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int v2left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int v2right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String v2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
temp="Metodo "+v2;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("NT$1",115, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // s9 ::= VOID ID NT$1 s81 
            {
              Termino RESULT =null;
              // propagate RESULT from NT$1
                RESULT = (Termino) ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int v1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int v1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		String v1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		int v2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int v2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		String v2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int v3left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int v3right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Termino v3 = (Termino)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		v3.setNombre(v2); v3.setTipo(v1); RESULT=v3;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s9",8, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // NT$2 ::= 
            {
              Termino RESULT =null;
		int v1left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int v1right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String v1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
temp="Metodo "+v1;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("NT$2",116, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // s10 ::= ID NT$2 s104 
            {
              Termino RESULT =null;
              // propagate RESULT from NT$2
                RESULT = (Termino) ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int v1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int v1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		String v1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int v2left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int v2right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Termino v2 = (Termino)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		  
                                                if(v2==null){
                                                    Termino term = new Termino(); term.setNombre(v1); RESULT=term;
                                                }else{
                                                    v2.setNombre(v1); RESULT=v2;    
                                                }
                                            
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s10",9, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 43: // s10 ::= error 
            {
              Termino RESULT =null;
		taErrores.append("Se esperaba un identificador \n");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s10",9, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 44: // s104 ::= s11 
            {
              Termino RESULT =null;
		int v1left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int v1right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Termino v1 = (Termino)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		RESULT=null;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s104",112, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 45: // s104 ::= s81 
            {
              Termino RESULT =null;
		int v1left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int v1right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Termino v1 = (Termino)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		RESULT=v1;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s104",112, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 46: // s11 ::= s115 
            {
              Termino RESULT =null;
		int v1left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int v1right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Termino v1 = (Termino)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s11",10, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 47: // s11 ::= ASIGNACION exp s115 
            {
              Termino RESULT =null;
		int v1left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int v1right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Termino v1 = (Termino)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s11",10, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 48: // s11 ::= ASIGNACION NEW ID PARENTESIS_A argumento PARENTESIS_C P_COMA 
            {
              Termino RESULT =null;
		int v1left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int v1right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String v1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s11",10, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 49: // s11 ::= error 
            {
              Termino RESULT =null;
		taErrores.append("Se esperaba punto y coma, signo igual o ( \n");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s11",10, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 50: // s115 ::= COMA s10 
            {
              Termino RESULT =null;
		int v1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int v1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String v1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int v2left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int v2right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Termino v2 = (Termino)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s115",13, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 51: // s115 ::= P_COMA 
            {
              Termino RESULT =null;
		int v1left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int v1right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String v1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s115",13, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 52: // exp ::= exp MAS exp 
            {
              Termino RESULT =null;
		int v1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int v1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Termino v1 = (Termino)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int v2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int v2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String v2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int v3left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int v3right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Termino v3 = (Termino)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("exp",12, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 53: // exp ::= exp MENOS exp 
            {
              Termino RESULT =null;
		int v1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int v1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Termino v1 = (Termino)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int v2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int v2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String v2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int v3left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int v3right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Termino v3 = (Termino)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("exp",12, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 54: // exp ::= exp POR exp 
            {
              Termino RESULT =null;
		int v1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int v1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Termino v1 = (Termino)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int v2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int v2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String v2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int v3left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int v3right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Termino v3 = (Termino)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("exp",12, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 55: // exp ::= exp DIVISION exp 
            {
              Termino RESULT =null;
		int v1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int v1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Termino v1 = (Termino)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int v2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int v2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String v2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int v3left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int v3right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Termino v3 = (Termino)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("exp",12, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 56: // exp ::= PARENTESIS_A exp PARENTESIS_C 
            {
              Termino RESULT =null;
		int v1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int v1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		String v1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int v2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int v2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		Termino v2 = (Termino)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int v3left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int v3right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String v3 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("exp",12, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 57: // exp ::= valor 
            {
              Termino RESULT =null;
		int v1left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int v1right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Termino v1 = (Termino)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("exp",12, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 58: // exp ::= error 
            {
              Termino RESULT =null;
		taErrores.append("Se esperaba un valor \n");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("exp",12, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 59: // valor ::= CADENA 
            {
              Termino RESULT =null;
		int v1left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int v1right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String v1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("valor",11, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 60: // valor ::= TRUE 
            {
              Termino RESULT =null;
		int v1left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int v1right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String v1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("valor",11, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 61: // valor ::= FALSE 
            {
              Termino RESULT =null;
		int v1left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int v1right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String v1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("valor",11, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 62: // valor ::= CARACTER 
            {
              Termino RESULT =null;
		int v1left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int v1right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String v1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("valor",11, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 63: // valor ::= NULL 
            {
              Termino RESULT =null;
		int v1left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int v1right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String v1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("valor",11, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 64: // valor ::= ENTERO 
            {
              Termino RESULT =null;
		int v1left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int v1right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String v1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("valor",11, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 65: // valor ::= DECIMAL 
            {
              Termino RESULT =null;
		int v1left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int v1right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String v1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("valor",11, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 66: // NT$3 ::= 
            {
              Termino RESULT =null;
ambitoActual=temp;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("NT$3",117, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 67: // s81 ::= PARENTESIS_A NT$3 s82 
            {
              Termino RESULT =null;
              // propagate RESULT from NT$3
                RESULT = (Termino) ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Termino term = new Termino(); term.setRol(Roles.METODO); RESULT=term;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s81",94, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 68: // s82 ::= parametro s83 
            {
              Termino RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s82",95, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 69: // s82 ::= error 
            {
              Termino RESULT =null;
		taErrores.append("Se esperaban los parametros o )  \n");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s82",95, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 70: // s83 ::= PARENTESIS_C s84 
            {
              Termino RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s83",96, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 71: // s84 ::= LLAVE_A s85 
            {
              Termino RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s84",97, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 72: // s84 ::= error 
            {
              Termino RESULT =null;
		taErrores.append("Se esperaba { \n");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s84",97, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 73: // s85 ::= sentences s86 
            {
              Termino RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s85",98, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 74: // s85 ::= error 
            {
              Termino RESULT =null;
		taErrores.append("Se esperaban las sentencias o }  \n");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s85",98, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 75: // s86 ::= LLAVE_C 
            {
              Termino RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s86",99, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 76: // parametro ::= s14 
            {
              Termino RESULT =null;
		int v1left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int v1right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Termino v1 = (Termino)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro",19, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 77: // parametro ::= 
            {
              Termino RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro",19, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 78: // s14 ::= INT s15 
            {
              Termino RESULT =null;
		int v1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int v1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String v1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int v2left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int v2right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Termino v2 = (Termino)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		v2.setTipo(v1); v2.setAmbito(ambitoActual); v2.setRol(Roles.VARIABLE); v2.setParametro(true); tablaSimbolos.agregarTermino(v2);
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s14",16, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 79: // s14 ::= BOOLEAN s15 
            {
              Termino RESULT =null;
		int v1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int v1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String v1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int v2left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int v2right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Termino v2 = (Termino)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		v2.setTipo(v1); v2.setAmbito(ambitoActual); v2.setRol(Roles.VARIABLE); v2.setParametro(true); tablaSimbolos.agregarTermino(v2);
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s14",16, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 80: // s14 ::= STRING s15 
            {
              Termino RESULT =null;
		int v1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int v1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String v1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int v2left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int v2right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Termino v2 = (Termino)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		v2.setTipo(v1); v2.setAmbito(ambitoActual); v2.setRol(Roles.VARIABLE); v2.setParametro(true); tablaSimbolos.agregarTermino(v2);
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s14",16, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 81: // s14 ::= CHAR s15 
            {
              Termino RESULT =null;
		int v1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int v1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String v1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int v2left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int v2right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Termino v2 = (Termino)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		v2.setTipo(v1); v2.setAmbito(ambitoActual); v2.setRol(Roles.VARIABLE); v2.setParametro(true); tablaSimbolos.agregarTermino(v2);
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s14",16, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 82: // s14 ::= DOUBLE s15 
            {
              Termino RESULT =null;
		int v1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int v1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String v1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int v2left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int v2right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Termino v2 = (Termino)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		v2.setTipo(v1); v2.setAmbito(ambitoActual); v2.setRol(Roles.VARIABLE); v2.setParametro(true); tablaSimbolos.agregarTermino(v2);
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s14",16, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 83: // s14 ::= ID s15 
            {
              Termino RESULT =null;
		int v1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int v1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String v1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int v2left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int v2right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Termino v2 = (Termino)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		v2.setTipo(v1); v2.setAmbito(ambitoActual); v2.setRol(Roles.VARIABLE); v2.setParametro(true); tablaSimbolos.agregarTermino(v2);
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s14",16, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 84: // s15 ::= ID s16 
            {
              Termino RESULT =null;
		int v1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int v1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String v1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Termino term = new Termino(); term.setNombre(v1); RESULT=term;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s15",17, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 85: // s15 ::= error 
            {
              Termino RESULT =null;
		taErrores.append("Se esperaba un id \n");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s15",17, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 86: // s16 ::= COMA s14 
            {
              Termino RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s16",18, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 87: // s16 ::= 
            {
              Termino RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s16",18, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 88: // s105 ::= RETURN s106 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s105",20, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 89: // s106 ::= valor s107 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s106",21, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 90: // s106 ::= ID s107 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s106",21, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 91: // s106 ::= error 
            {
              String RESULT =null;
		taErrores.append("Se esperaba un valor y punto y coma \n");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s106",21, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 92: // s107 ::= P_COMA 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s107",22, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 93: // s108 ::= ID s109 
            {
              Termino RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s108",23, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 94: // s108 ::= THIS PUNTO ID s109 
            {
              Termino RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s108",23, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 95: // s109 ::= PARENTESIS_A s110 
            {
              Termino RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s109",24, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 96: // s110 ::= argumento s111 
            {
              Termino RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s110",25, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 97: // s110 ::= error 
            {
              Termino RESULT =null;
		taErrores.append("Se esperaban los argumentos o ) \n");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s110",25, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 98: // s111 ::= PARENTESIS_C s112 
            {
              Termino RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s111",26, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 99: // s112 ::= P_COMA 
            {
              Termino RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s112",27, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 100: // s112 ::= error 
            {
              Termino RESULT =null;
		taErrores.append("Se esperaba punto y coma  \n");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s112",27, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 101: // argumento ::= s113 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("argumento",30, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 102: // argumento ::= 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("argumento",30, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 103: // s113 ::= ID s114 
            {
              String RESULT =null;
		int v1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int v1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String v1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int v2left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int v2right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String v2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		RESULT=v1+" "+v2;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s113",28, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 104: // s113 ::= exp s114 
            {
              String RESULT =null;
		int v1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int v1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		Termino v1 = (Termino)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int v2left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int v2right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String v2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		RESULT=v1+" "+v2;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s113",28, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 105: // s114 ::= COMA s113 
            {
              String RESULT =null;
		int v1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int v1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String v1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int v2left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int v2right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String v2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		RESULT=v1+" "+v2;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s114",29, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 106: // s114 ::= 
            {
              String RESULT =null;
		RESULT="";
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s114",29, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 107: // s114 ::= error 
            {
              String RESULT =null;
		taErrores.append("Se esperaba argumentos o ) \n");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s114",29, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 108: // s17 ::= IF s18 
            {
              String RESULT =null;
		int v1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int v1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String v1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int v2left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int v2right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String v2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s17",31, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 109: // s18 ::= PARENTESIS_A s19 
            {
              String RESULT =null;
		int v1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int v1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String v1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s18",32, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 110: // s18 ::= error 
            {
              String RESULT =null;
		taErrores.append("Se esperaba (  \n");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s18",32, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 111: // s19 ::= condicion s20 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s19",33, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 112: // s19 ::= error 
            {
              String RESULT =null;
		taErrores.append("Se esperaba una condicion valida \n");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s19",33, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 113: // condicion ::= NOT s24 s25 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("condicion",49, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 114: // condicion ::= s24 s25 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("condicion",49, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 115: // condicion ::= NOT s26 s25 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("condicion",49, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 116: // condicion ::= s26 s25 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("condicion",49, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 117: // condicion ::= s27 s25 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("condicion",49, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 118: // condicion ::= s28 s25 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("condicion",49, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 119: // s25 ::= AND condicion 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s25",39, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 120: // s25 ::= OR condicion 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s25",39, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 121: // s25 ::= 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s25",39, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 122: // s28 ::= s29 opcompa s29 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s28",42, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 123: // s28 ::= PARENTESIS_A s28 PARENTESIS_C 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s28",42, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 124: // s26 ::= ID 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s26",40, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 125: // s26 ::= PARENTESIS_A s26 PARENTESIS_C 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s26",40, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 126: // s27 ::= ID opcompa s29 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s27",41, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 127: // s27 ::= ID opcompa ID 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s27",41, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 128: // s27 ::= ID IGUAL TRUE 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s27",41, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 129: // s27 ::= ID IGUAL FALSE 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s27",41, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 130: // s27 ::= ID DIFERENTE TRUE 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s27",41, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 131: // s27 ::= ID DIFERENTE FALSE 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s27",41, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 132: // s27 ::= PARENTESIS_A s27 PARENTESIS_C 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s27",41, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 133: // s24 ::= TRUE 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s24",38, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 134: // s24 ::= FALSE 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s24",38, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 135: // s24 ::= PARENTESIS_A condicion PARENTESIS_C 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s24",38, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 136: // s20 ::= PARENTESIS_C s21 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s20",34, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 137: // s20 ::= error 
            {
              String RESULT =null;
		taErrores.append("Se esperaba el )  \n");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s20",34, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 138: // s21 ::= LLAVE_A s22 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s21",35, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 139: // s21 ::= error 
            {
              String RESULT =null;
		taErrores.append("Se esperaba {  \n");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s21",35, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 140: // s22 ::= sentences s23 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s22",36, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 141: // s22 ::= error 
            {
              String RESULT =null;
		taErrores.append("Se esperaban las sentencias o }  \n");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s22",36, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 142: // sentences ::= s17 sentences 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("sentences",51, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 143: // sentences ::= s35 sentences 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("sentences",51, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 144: // sentences ::= s42 sentences 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("sentences",51, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 145: // sentences ::= s51 sentences 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("sentences",51, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 146: // sentences ::= s62 sentences 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("sentences",51, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 147: // sentences ::= s12 sentences 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("sentences",51, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 148: // sentences ::= s105 sentences 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("sentences",51, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 149: // sentences ::= s108 sentences 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("sentences",51, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 150: // sentences ::= 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("sentences",51, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 151: // s23 ::= LLAVE_C s31 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s23",37, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 152: // opcompa ::= DIFERENTE 
            {
              String RESULT =null;
		int v1left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int v1right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String v1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("opcompa",50, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 153: // opcompa ::= MAYOR_IGUAL 
            {
              String RESULT =null;
		int v1left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int v1right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String v1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("opcompa",50, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 154: // opcompa ::= MAYOR_QUE 
            {
              String RESULT =null;
		int v1left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int v1right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String v1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("opcompa",50, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 155: // opcompa ::= MENOR_IGUAL 
            {
              String RESULT =null;
		int v1left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int v1right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String v1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("opcompa",50, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 156: // opcompa ::= MENOR_QUE 
            {
              String RESULT =null;
		int v1left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int v1right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String v1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("opcompa",50, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 157: // opcompa ::= IGUAL 
            {
              String RESULT =null;
		int v1left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int v1right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String v1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("opcompa",50, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 158: // s29 ::= s29 MAS s29 
            {
              String RESULT =null;
		int v1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int v1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		String v1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int v2left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int v2right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String v2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s29",43, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 159: // s29 ::= s29 MENOS s29 
            {
              String RESULT =null;
		int v1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int v1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		String v1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int v2left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int v2right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String v2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s29",43, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 160: // s29 ::= s29 POR s29 
            {
              String RESULT =null;
		int v1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int v1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		String v1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int v2left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int v2right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String v2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s29",43, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 161: // s29 ::= s29 DIVISION s29 
            {
              String RESULT =null;
		int v1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int v1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		String v1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int v2left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int v2right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String v2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s29",43, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 162: // s29 ::= PARENTESIS_A s29 PARENTESIS_C 
            {
              String RESULT =null;
		int v1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int v1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		String v1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int v2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int v2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String v2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int v3left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int v3right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String v3 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s29",43, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 163: // s29 ::= s30 
            {
              String RESULT =null;
		int v1left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int v1right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String v1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s29",43, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 164: // s30 ::= CADENA 
            {
              String RESULT =null;
		int v1left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int v1right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String v1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s30",44, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 165: // s30 ::= CARACTER 
            {
              String RESULT =null;
		int v1left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int v1right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String v1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s30",44, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 166: // s30 ::= NULL 
            {
              String RESULT =null;
		int v1left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int v1right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String v1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s30",44, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 167: // s30 ::= ENTERO 
            {
              String RESULT =null;
		int v1left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int v1right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String v1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s30",44, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 168: // s30 ::= DECIMAL 
            {
              String RESULT =null;
		int v1left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int v1right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String v1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s30",44, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 169: // s31 ::= ELSE s32 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s31",45, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 170: // s31 ::= 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s31",45, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 171: // s32 ::= LLAVE_A s33 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s32",46, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 172: // s32 ::= error 
            {
              String RESULT =null;
		taErrores.append("Se esperaba {  \n");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s32",46, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 173: // s33 ::= sentences s34 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s33",47, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 174: // s33 ::= error 
            {
              String RESULT =null;
		taErrores.append("Se esperaban las sentencias o }  \n");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s33",47, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 175: // s34 ::= LLAVE_C 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s34",48, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 176: // s35 ::= WHILE s36 
            {
              String RESULT =null;
		int v1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int v1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String v1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int v2left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int v2right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String v2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s35",52, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 177: // s36 ::= PARENTESIS_A s37 
            {
              String RESULT =null;
		int v1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int v1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String v1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s36",53, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 178: // s36 ::= error 
            {
              String RESULT =null;
		taErrores.append("Se esperaba (  \n");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s36",53, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 179: // s37 ::= condicion s38 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s37",54, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 180: // s37 ::= error 
            {
              String RESULT =null;
		taErrores.append("Se esperaba una condicion valida \n");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s37",54, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 181: // s38 ::= PARENTESIS_C s39 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s38",55, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 182: // s38 ::= error 
            {
              String RESULT =null;
		taErrores.append("Se esperaba )  \n");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s38",55, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 183: // s39 ::= LLAVE_A s40 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s39",56, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 184: // s39 ::= error 
            {
              String RESULT =null;
		taErrores.append("Se esperaba {  \n");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s39",56, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 185: // s40 ::= sentences s41 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s40",57, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 186: // s40 ::= error 
            {
              String RESULT =null;
		taErrores.append("Se esperaban las sentencias o }  \n");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s40",57, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 187: // s41 ::= LLAVE_C 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s41",58, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 188: // s42 ::= DO s43 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s42",59, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 189: // s43 ::= LLAVE_A s44 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s43",60, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 190: // s43 ::= error 
            {
              String RESULT =null;
		taErrores.append("Se esperaba {  \n");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s43",60, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 191: // s44 ::= sentences s45 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s44",61, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 192: // s44 ::= error 
            {
              String RESULT =null;
		taErrores.append("Se esperaban las sentencias o }  \n");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s44",61, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 193: // s45 ::= LLAVE_C s46 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s45",62, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 194: // s46 ::= WHILE s47 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s46",63, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 195: // s46 ::= error 
            {
              String RESULT =null;
		taErrores.append("Se esperaba while  \n");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s46",63, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 196: // s47 ::= PARENTESIS_A s48 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s47",64, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 197: // s47 ::= error 
            {
              String RESULT =null;
		taErrores.append("Se esperaba (  \n");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s47",64, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 198: // s48 ::= condicion s49 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s48",65, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 199: // s48 ::= error 
            {
              String RESULT =null;
		taErrores.append("Se esperaba una condicion valida \n");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s48",65, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 200: // s49 ::= PARENTESIS_C s50 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s49",66, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 201: // s49 ::= error 
            {
              String RESULT =null;
		taErrores.append("Se esperaba )  \n");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s49",66, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 202: // s50 ::= P_COMA 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s50",67, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 203: // s50 ::= error 
            {
              String RESULT =null;
		taErrores.append("Se esperaba el ;  \n");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s50",67, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 204: // s51 ::= FOR s52 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s51",68, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 205: // s52 ::= PARENTESIS_A s53 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s52",69, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 206: // s52 ::= error 
            {
              String RESULT =null;
		taErrores.append("Se esperaba (  \n");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s52",69, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 207: // s53 ::= s58 s54 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s53",70, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 208: // s53 ::= error 
            {
              String RESULT =null;
		taErrores.append("Se esperaba unos limites validos \n");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s53",70, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 209: // s54 ::= PARENTESIS_C s55 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s54",71, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 210: // s54 ::= error 
            {
              String RESULT =null;
		taErrores.append("Se esperaba )  \n");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s54",71, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 211: // s55 ::= LLAVE_A s56 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s55",72, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 212: // s55 ::= error 
            {
              String RESULT =null;
		taErrores.append("Se esperaba { \n");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s55",72, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 213: // s56 ::= sentences s57 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s56",73, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 214: // s56 ::= error 
            {
              String RESULT =null;
		taErrores.append("Se esperaban las sentencias o }  \n");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s56",73, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 215: // s57 ::= LLAVE_C 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s57",74, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 216: // s58 ::= s12 ID opcompa s59 P_COMA s60 
            {
              String RESULT =null;
		int v1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).left;
		int v1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).right;
		Termino v1 = (Termino)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		int v2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left;
		int v2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).right;
		String v2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		int v3left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int v3right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		String v3 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		int v4left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int v4right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		String v4 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int v5left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int v5right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String v5 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int v6left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int v6right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String v6 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s58",75, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 217: // s60 ::= ID INCREMENTO 
            {
              String RESULT =null;
		int v1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int v1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String v1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int v2left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int v2right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String v2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s60",77, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 218: // s60 ::= ID DECREMENTO 
            {
              String RESULT =null;
		int v1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int v1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String v1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int v2left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int v2right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String v2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s60",77, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 219: // s60 ::= ID ASIGNACION s59 
            {
              String RESULT =null;
		int v1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int v1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		String v1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int v2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int v2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String v2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int v3left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int v3right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String v3 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s60",77, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 220: // s59 ::= s59 MAS s59 
            {
              String RESULT =null;
		int v1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int v1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		String v1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int v2left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int v2right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String v2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s59",76, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 221: // s59 ::= s59 MENOS s59 
            {
              String RESULT =null;
		int v1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int v1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		String v1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int v2left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int v2right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String v2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s59",76, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 222: // s59 ::= PARENTESIS_A s59 PARENTESIS_C 
            {
              String RESULT =null;
		int v1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int v1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		String v1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int v2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int v2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String v2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int v3left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int v3right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String v3 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s59",76, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 223: // s59 ::= s61 
            {
              String RESULT =null;
		int v1left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int v1right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String v1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s59",76, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 224: // s59 ::= error 
            {
              String RESULT =null;
		taErrores.append("Se esperaba un valor \n");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s59",76, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 225: // s61 ::= ID 
            {
              String RESULT =null;
		int v1left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int v1right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String v1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s61",78, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 226: // s61 ::= ENTERO 
            {
              String RESULT =null;
		int v1left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int v1right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String v1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s61",78, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 227: // s61 ::= DECIMAL 
            {
              String RESULT =null;
		int v1left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int v1right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String v1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s61",78, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 228: // s62 ::= SWITCH s63 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s62",79, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 229: // s63 ::= PARENTESIS_A s64 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s63",80, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 230: // s63 ::= error 
            {
              String RESULT =null;
		taErrores.append("Se esperaba ( \n");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s63",80, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 231: // s64 ::= ID s65 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s64",81, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 232: // s64 ::= error 
            {
              String RESULT =null;
		taErrores.append("Se esperaba un id \n");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s64",81, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 233: // s65 ::= PARENTESIS_C s66 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s65",82, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 234: // s65 ::= error 
            {
              String RESULT =null;
		taErrores.append("Se esperaba ) \n");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s65",82, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 235: // s66 ::= LLAVE_A s67 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s66",83, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 236: // s66 ::= error 
            {
              String RESULT =null;
		taErrores.append("Se esperaba { \n");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s66",83, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 237: // s67 ::= s68 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s67",84, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 238: // s67 ::= error 
            {
              String RESULT =null;
		taErrores.append("Se esperaban los casos o } \n");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s67",84, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 239: // s68 ::= CASE s69 s68 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s68",85, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 240: // s68 ::= s75 LLAVE_C 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s68",85, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 241: // s68 ::= LLAVE_C 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s68",85, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 242: // s69 ::= s70 s71 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s69",86, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 243: // s70 ::= valor 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s70",87, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 244: // s70 ::= error 
            {
              String RESULT =null;
		taErrores.append("Se esperaba un valor \n");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s70",87, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 245: // s71 ::= DOS_PUNTOS s72 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s71",88, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 246: // s71 ::= error 
            {
              String RESULT =null;
		taErrores.append("Se esperaban dos puntos \n");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s71",88, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 247: // s72 ::= sentences s73 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s72",89, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 248: // s72 ::= error 
            {
              String RESULT =null;
		taErrores.append("Se esperaban las sentencias,case,break,default o } \n");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s72",89, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 249: // s73 ::= BREAK s74 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s73",90, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 250: // s73 ::= 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s73",90, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 251: // s74 ::= P_COMA 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s74",91, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 252: // s74 ::= error 
            {
              String RESULT =null;
		taErrores.append("Se esperaba punto y coma \n");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s74",91, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 253: // s75 ::= DEFAULT s76 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s75",92, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 254: // s76 ::= DOS_PUNTOS sentences 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s76",93, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 255: // s76 ::= error 
            {
              String RESULT =null;
		taErrores.append("Se esperaba dos puntos \n");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s76",93, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 256: // s95 ::= PUBLIC s96 
            {
              Termino RESULT =null;
		int v1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int v1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String v1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int v2left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int v2right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Termino v2 = (Termino)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		v2.setVisibilidad(Visibilidad.PUBLIC); tablaSimbolos.agregarTermino(v2);
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s95",106, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 257: // s95 ::= s96 
            {
              Termino RESULT =null;
		int v1left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int v1right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Termino v1 = (Termino)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		v1.setVisibilidad(Visibilidad.DEFAULT); tablaSimbolos.agregarTermino(v1);
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s95",106, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 258: // s96 ::= CLASS s97 
            {
              Termino RESULT =null;
		int v1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int v1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String v1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int v2left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int v2right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Termino v2 = (Termino)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		v2.setRol(Roles.CLASE); RESULT=v2;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s96",107, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 259: // NT$4 ::= 
            {
              Termino RESULT =null;
		int v1left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int v1right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String v1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
nombreClase="Clase "+v1;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("NT$4",118, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 260: // s97 ::= ID NT$4 s98 
            {
              Termino RESULT =null;
              // propagate RESULT from NT$4
                RESULT = (Termino) ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int v1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int v1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		String v1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Termino term = new Termino(); term.setAmbito("Archivo "+nombreArchivo); term.setNombre(v1); ambitoActual="Clase "+v1; RESULT=term;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s97",108, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 261: // s97 ::= error 
            {
              Termino RESULT =null;
		taErrores.append("Se esperaba el nombre de la clase \n");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s97",108, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 262: // s98 ::= LLAVE_A s99 
            {
              Termino RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s98",109, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 263: // s98 ::= error 
            {
              Termino RESULT =null;
		taErrores.append("Se esperaba { \n");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s98",109, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 264: // s99 ::= s7 s99 
            {
              Termino RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s99",110, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 265: // s99 ::= LLAVE_C 
            {
              Termino RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s99",110, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 266: // s99 ::= error 
            {
              Termino RESULT =null;
		taErrores.append("Se esperaban los miembro de la clase, constructor o } \n");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s99",110, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 267: // s89 ::= PARENTESIS_A s90 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s89",100, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 268: // s90 ::= parametro s91 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s90",101, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 269: // s90 ::= error 
            {
              String RESULT =null;
		taErrores.append("Se esperaban los parametros o )  \n");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s90",101, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 270: // s91 ::= PARENTESIS_C s92 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s91",102, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 271: // s92 ::= LLAVE_A s93 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s92",103, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 272: // s92 ::= error 
            {
              String RESULT =null;
		taErrores.append("Se esperaba {  \n");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s92",103, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 273: // s93 ::= sentences s94 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s93",104, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 274: // s93 ::= error 
            {
              String RESULT =null;
		taErrores.append("Se esperaban las sentencias o } \n");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s93",104, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 275: // s94 ::= LLAVE_C 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s94",105, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number "+CUP$parser$act_num+"found in internal parse table");

        }
    } /* end of method */

  /** Method splitting the generated action code into several parts. */
  public final java_cup.runtime.Symbol CUP$parser$do_action(
    int                        CUP$parser$act_num,
    java_cup.runtime.lr_parser CUP$parser$parser,
    java.util.Stack            CUP$parser$stack,
    int                        CUP$parser$top)
    throws java.lang.Exception
    {
              return CUP$parser$do_action_part00000000(
                               CUP$parser$act_num,
                               CUP$parser$parser,
                               CUP$parser$stack,
                               CUP$parser$top);
    }
}

}

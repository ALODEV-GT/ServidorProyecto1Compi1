package midik.cup;
import java_cup.runtime.Symbol;
import java.util.ArrayList;
import midik.tablaSimbolos.Termino;
import midik.tablaSimbolos.Visibilidad;
import midik.tablaSimbolos.Roles;

parser code
{:  
    private String nombreClase="";
    private String ambitoActual="";
    private String temp=""; 

    private ArrayList<Termino> tablaSimbolos = new ArrayList<>();

    public ArrayList<Termino> getTablaSimbolos(){
        return this.tablaSimbolos;
    }

    public void syntax_error(Symbol s){
        System.out.println("Error sintactico: " + s.value.toString() + " Linea:" + s.right + " Columna:" + s.left);
    }

    public void unrecovered_syntax_error(Symbol s) throws java.lang.Exception {
        System.out.println("No se pudo recuperar el analizador. Linea:" + s.right + " Columna:" + s.left);
    }
:};

terminal String IMPORT,PUBLIC,PRIVATE,PROTECTED,CLASS,INT,BOOLEAN,STRING,DOUBLE,CHAR,
            IF,ELSE,FOR,WHILE,DO,SWITCH,FINAL,BREAK,RETURN,P_COMA,PUNTO,COMA,LLAVE_A,
            LLAVE_C,PARENTESIS_A,PARENTESIS_C,MAS,MENOS,POR,DIVISION,IGUAL,MAYOR_IGUAL,
            MENOR_IGUAL,ASIGNACION,MAYOR_QUE,MENOR_QUE,DIFERENTE,AND,OR,NOT,INCREMENTO,
            DECREMENTO,ID,ENTERO,DECIMAL,CADENA,TRUE,FALSE,CARACTER,NULL,CASE,DEFAULT,DOS_PUNTOS,VOID,NEW,THIS;

non terminal String s1,s2,s3,s4,s5,s6; //GRAMATICA: IMPORT
non terminal Termino s7, s8, s9, s10, s11, valor, exp, s115; //GRAMATICA: DECLARACION DE ATRIBUTOS
non terminal Termino s12,s13; //GRAMATICA: DECLARACION DE VARIABLES
non terminal Termino s14,s15,s16,parametro; //GRAMATICA: PARAMETROS
non terminal String s105,s106,s107; //GRAMATICA: RETURN
non terminal Termino s108,s109,s110,s111,s112; //GRAMATICA: LLAMADA A METODOS/FUNCIONES
non terminal String s113,s114,argumento; //GRAMATICA: ARGUMENTO
non terminal String s17,s18,s19,s20,s21,s22,s23,s24,s25,s26,s27,s28,s29,s30,s31,s32,s33,s34,condicion,opcompa,sentences; //GRAMATICA: IF, IF-ELSE
non terminal String s35,s36,s37,s38,s39,s40,s41; //GRAMATICA: WHILE
non terminal String s42,s43,s44,s45,s46,s47,s48,s49,s50; //GRAMATICA: DO-WHILE
non terminal String s51,s52,s53,s54,s55,s56,s57,s58,s59,s60,s61; //GRAMATICA: FOR
non terminal String s62,s63,s64,s65,s66,s67,s68,s69,s70,s71,s72,s73,s74,s75,s76; //GRAMATICA: SWITCH
non terminal Termino s81,s82,s83,s84,s85,s86; //GRAMATICA: FUNCIONES Y METODOS
non terminal String s89,s90,s91,s92,s93,s94; //GRAMATICA: CONSTRUCTOR
non terminal Termino s95,s96,s97,s98,s99; //GRAMATICA: CLASE
non terminal Termino s101,s104;

non terminal String s0; //Comun

precedence left AND,OR;
precedence left DIFERENTE, MAYOR_IGUAL, MAYOR_QUE, MENOR_IGUAL, MENOR_QUE, IGUAL;
precedence left MAS, MENOS;
precedence left POR, DIVISION;
precedence left PARENTESIS_A, PARENTESIS_C;

start with s0;
//INICIO
s0::= s1 s0
| s95
|
;
//FIN

//GRAMATICA: IMPORT -->INICIO
s1::= IMPORT:v1 s2:v2
| error                             {:System.out.println("Se esperaba import o la definicion de una clase.");:}
;
s2::= ID:v1 s3:v2
| error                             {:System.out.println("Se esperaba el nombre del paquete");:}
;
s3::= PUNTO:v1 s4:v2
| error                             {:System.out.println("Se esperaba un punto, punto coma, o el import es muy corto Ej: import pack;");:}
;
s4::= POR:v1 s5:v2
| ID:v1 s6:v2
| error                             {:System.out.println("Se esperaba * o id");:}
;
s5::= P_COMA:v1
| error                             {:System.out.println("Se esperaba un punto y coma");:}
;
s6::= P_COMA:v1
| s3:v1
;
//GRAMATICA: IMPORT -->FIN



//GRAMATICA: DECLARACION/ASIGNACION DE VARIABLES -->INICIO
s12::= FINAL s9:v1                                  {:v1.setRol(Roles.VARIABLE); v1.setAmbito(ambitoActual); tablaSimbolos.add(v1);:}
|s9:v1                                              {:v1.setRol(Roles.VARIABLE); v1.setAmbito(ambitoActual); tablaSimbolos.add(v1);:}
|THIS PUNTO ID s13                      
|ID s13                                       
;
s13::= ASIGNACION exp P_COMA                    
| ASIGNACION ID P_COMA                           
| ASIGNACION NEW ID PARENTESIS_A argumento PARENTESIS_C P_COMA
;

//GRAMATICA: DECLARACION/ASIGNACION DE VARIABLES -->FIN

//GRAMATICA: DECLARACION DE ATRIBUTOS -->INICIO
s7::= PUBLIC:v1 s101:v2             {:if(v2.getRol()==null){v2.setRol(Roles.VARIABLE);} v2.setAmbito(nombreClase); v2.setVisibilidad(Visibilidad.PUBLIC);  tablaSimbolos.add(v2);:}
| PRIVATE:v1 s101:v2                {:if(v2.getRol()==null){v2.setRol(Roles.VARIABLE);} v2.setAmbito(nombreClase); v2.setVisibilidad(Visibilidad.PRIVATE); tablaSimbolos.add(v2);:}
| PROTECTED:v1 s101:v2              {:if(v2.getRol()==null){v2.setRol(Roles.VARIABLE);} v2.setAmbito(nombreClase); v2.setVisibilidad(Visibilidad.PROTECTED); tablaSimbolos.add(v2);:}
| s101:v1                           {:  if(v1!=null){
                                            if(v1.getRol()==null){v1.setRol(Roles.VARIABLE);}
                                            v1.setAmbito(nombreClase);
                                            v1.setVisibilidad(Visibilidad.DEFAULT); tablaSimbolos.add(v1);
                                        }
                                    :}
;
s101::= s8:v1                       {:RESULT=v1;:}
| ID:v1 {:ambitoActual="Constructor "+v1;:} s89
;
s8::= FINAL s9:v1                   {:RESULT=v1;:}
| s9:v1                             {:RESULT=v1;:}
;
s9::= INT:v1 s10:v2                 {:v2.setTipo(v1); RESULT=v2;:}
|BOOLEAN:v1 s10:v2                  {:v2.setTipo(v1); RESULT=v2;:}
|STRING:v1 s10:v2                   {:v2.setTipo(v1); RESULT=v2;:}
|CHAR:v1 s10:v2                     {:v2.setTipo(v1); RESULT=v2;:}
|DOUBLE:v1 s10:v2                   {:v2.setTipo(v1); RESULT=v2;:}
|ID:v1 s10:v2                       {:v2.setTipo(v1); RESULT=v2;:}
|VOID:v1 ID:v2 {:temp="Metodo/Funcion "+v2;:} s81:v3               {:v3.setNombre(v2); v3.setTipo(v1); RESULT=v3;:}
;
s10::= ID:v1 {:temp="Metodo/Funcion "+v1;:} s104:v2   {:  
                                                if(v2==null){
                                                    Termino term = new Termino(); term.setNombre(v1); RESULT=term;
                                                }else{
                                                    v2.setNombre(v1); RESULT=v2;    
                                                }
                                            :}
| error                                 {:System.out.println("Se esperaba un identificador");:}
;
s104::= s11:v1                         {:RESULT=null;:}                                
|s81:v1                                {:RESULT=v1;:}
;
s11::= s115:v1                                      
| ASIGNACION exp s115:v1                            
| ASIGNACION NEW ID PARENTESIS_A argumento PARENTESIS_C P_COMA:v1    
| error                                             {:System.out.println("Se esperaba punto y coma, signo igual o (");:}
;
s115::= COMA:v1 s10:v2              
| P_COMA:v1                         
;
exp ::= exp:v1 MAS:v2 exp:v3        
| exp:v1 MENOS:v2 exp:v3            
| exp:v1 POR:v2 exp:v3              
| exp:v1 DIVISION:v2 exp:v3         
| PARENTESIS_A:v1 exp:v2 PARENTESIS_C:v3     
| valor:v1                                   
| error                                             {:System.out.println("Se esperaba un valor");:}
;
valor::= CADENA:v1                  
|TRUE:v1                            
|FALSE:v1                           
|CARACTER:v1                        
|NULL:v1                            
|ENTERO:v1                          
|DECIMAL:v1                         
;
//GRAMATICA: DECLARACION DE ATRIBUTOS -->FIN

//GRAMATICA: METODOS Y FUNCIONES -->INICIO
s81::= PARENTESIS_A {:ambitoActual=temp;:} s82   {:Termino term = new Termino(); term.setRol(Roles.METODO_FUNCION); RESULT=term;:}
;
s82::= parametro s83
|error                                           {:System.out.println("Se esperaban los parametros o ) ");:}
;
s83::= PARENTESIS_C s84
;
s84::= LLAVE_A s85
|error                                           {:System.out.println("Se esperaba {");:}
;
s85::= sentences s86
|error                                           {:System.out.println("Se esperaban las sentencias o } ");:}
;
s86::= LLAVE_C
;
//GRAMATICA: METODOS Y FUNCIONES -->FIN

//GRAMATICA: PARAMETROS -->INICIO
parametro::= s14:v1                               {::}
|
;
s14::= INT:v1 s15:v2                              {:v2.setTipo(v1); v2.setAmbito(ambitoActual); v2.setRol(Roles.PARAMETRO); tablaSimbolos.add(v2);:}
|BOOLEAN:v1 s15:v2                                {:v2.setTipo(v1); v2.setAmbito(ambitoActual); v2.setRol(Roles.PARAMETRO); tablaSimbolos.add(v2);:}
|STRING:v1 s15:v2                                 {:v2.setTipo(v1); v2.setAmbito(ambitoActual); v2.setRol(Roles.PARAMETRO); tablaSimbolos.add(v2);:}
|CHAR:v1 s15:v2                                   {:v2.setTipo(v1); v2.setAmbito(ambitoActual); v2.setRol(Roles.PARAMETRO); tablaSimbolos.add(v2);:}
|DOUBLE:v1 s15:v2                                 {:v2.setTipo(v1); v2.setAmbito(ambitoActual); v2.setRol(Roles.PARAMETRO); tablaSimbolos.add(v2);:}
|ID:v1 s15:v2                                     {:v2.setTipo(v1); v2.setAmbito(ambitoActual); v2.setRol(Roles.PARAMETRO); tablaSimbolos.add(v2);:}
;
s15::= ID:v1 s16                                  {:Termino term = new Termino(); term.setNombre(v1); RESULT=term;:}
|error                                            {:System.out.println("Se esperaba un id");:}
;
s16::= COMA s14
|
;
//GRAMATICA: PARAMETROS -->FIN



//GRAMATICA: RETURN -->INICIO
s105::= RETURN s106
;
s106::= valor s107
| ID s107
| error {:System.out.println("Se esperaba un valor y punto y coma");:}
;
s107::= P_COMA
;
//GRAMATICA: RETURN -->FIN

//GRAMATICA: LLAMADA A METODOS/FUNCIONES --> INICIO
s108::= ID s109
| THIS PUNTO ID s109
;
s109::= PARENTESIS_A s110
;
s110::= argumento s111
| error {:System.out.println("Se esperaban los argumentos o )");:}
;
s111::= PARENTESIS_C s112
;
s112::= P_COMA
| error {:System.out.println("Se esperaba punto y coma ");:}
;
//GRAMATICA: LLAMADA A A METODOS/FUNCIONES --> FIN

//GRAMATICA: ARGUMENTOS -->INICIO
argumento::= s113
|
;
s113::= ID:v1 s114:v2       {:RESULT=v1+" "+v2;:}
| exp:v1 s114:v2            {:RESULT=v1+" "+v2;:}
;
s114::= COMA:v1 s113:v2     {:RESULT=v1+" "+v2;:}
|                           {:RESULT="";:}
|error                                            {:System.out.println("Se esperaba argumentos o )");:}
;
//GRAMATICA: ARGUMENTOS -->FIN

//GRAMATICA: IF -->INICIO
s17::=IF:v1 s18:v2
;
s18::=PARENTESIS_A:v1 s19
| error {:System.out.println("Se esperaba ( ");:}
;
s19::= condicion s20
| error {:System.out.println("Se esperaba una condicion valida");:}
;
condicion::= NOT s24 s25
| s24 s25
| NOT s26 s25
| s26 s25
| s27 s25
| s28 s25
;

s25::= AND condicion
| OR condicion
|
;
s28::= s29 opcompa s29
| PARENTESIS_A s28 PARENTESIS_C
;
s26::= ID
| PARENTESIS_A s26 PARENTESIS_C
;
s27::= ID opcompa s29
| ID opcompa ID
| ID IGUAL TRUE
| ID IGUAL FALSE
| ID DIFERENTE TRUE
| ID DIFERENTE FALSE
| PARENTESIS_A s27 PARENTESIS_C
;
s24::= TRUE
| FALSE
| PARENTESIS_A condicion PARENTESIS_C
;
s20::=PARENTESIS_C s21
| error {:System.out.println("Se esperaba el ) ");:}
;
s21::= LLAVE_A s22
| error {:System.out.println("Se esperaba { ");:}
;
s22::=sentences s23
| error {:System.out.println("Se esperaban las sentencias o } ");:}
;
sentences::= s17 sentences
| s35 sentences
| s42 sentences
| s51 sentences
| s62 sentences
| s12 sentences
| s105 sentences
| s108 sentences
|
;
s23::= LLAVE_C s31
;
opcompa::=DIFERENTE:v1
 | MAYOR_IGUAL:v1
 | MAYOR_QUE:v1
 | MENOR_IGUAL:v1
 | MENOR_QUE:v1
 | IGUAL:v1
;
s29 ::= s29:v1 MAS s29:v2
| s29:v1 MENOS s29:v2
| s29:v1 POR s29:v2
| s29:v1 DIVISION s29:v2
| PARENTESIS_A:v1 s29:v2 PARENTESIS_C:v3
| s30:v1
;
s30::= CADENA:v1
|CARACTER :v1
|NULL:v1
|ENTERO:v1
|DECIMAL:v1
;
s31::= ELSE s32
|
;
s32::= LLAVE_A s33
| error {:System.out.println("Se esperaba { ");:}
;
s33::= sentences s34
| error {:System.out.println("Se esperaban las sentencias o } ");:}
;
s34::= LLAVE_C
;
//GRAMATICA: IF -->FIN

//GRAMATICA: WHILE -->INICIO
s35::=WHILE:v1 s36:v2
;
s36::=PARENTESIS_A:v1 s37
| error {:System.out.println("Se esperaba ( ");:}
;
s37::= condicion s38
| error {:System.out.println("Se esperaba una condicion valida");:}
;
s38::=PARENTESIS_C s39
| error {:System.out.println("Se esperaba ) ");:}
;
s39::= LLAVE_A s40
| error {:System.out.println("Se esperaba { ");:}
;
s40::=sentences s41
| error {:System.out.println("Se esperaban las sentencias o } ");:}
;
s41::= LLAVE_C
;
//GRAMATICA: WHILE -->FIN

//GRAMATICA: DO WHILE -->INICIO
s42::= DO s43
;
s43::= LLAVE_A s44
| error {:System.out.println("Se esperaba { ");:}
;
s44::= sentences s45
| error {:System.out.println("Se esperaban las sentencias o } ");:}
;
s45::= LLAVE_C s46
;
s46::= WHILE s47
| error {:System.out.println("Se esperaba while ");:}
;
s47::= PARENTESIS_A s48
| error {:System.out.println("Se esperaba ( ");:}
;
s48::= condicion s49
| error {:System.out.println("Se esperaba una condicion valida");:}
;
s49::= PARENTESIS_C s50
| error {:System.out.println("Se esperaba ) ");:}
;
s50::= P_COMA
| error {:System.out.println("Se esperaba el ; ");:}
;
//GRAMATICA: DO WHILE -->FIN

//GRAMATICA: FOR -->INICIO
s51::= FOR s52
;
s52::= PARENTESIS_A s53
| error {:System.out.println("Se esperaba ( ");:}
;
s53::= s58 s54
| error {:System.out.println("Se esperaba unos limites validos");:}
;
s54::= PARENTESIS_C s55
| error {:System.out.println("Se esperaba ) ");:}
;
s55::= LLAVE_A s56
| error {:System.out.println("Se esperaba {");:}
;
s56::= sentences s57
| error {:System.out.println("Se esperaban las sentencias o } ");:}
;
s57::= LLAVE_C
;
s58::= s12:v1 ID:v2 opcompa:v3 s59:v4 P_COMA:v5 s60:v6
;
s60::= ID:v1 INCREMENTO:v2
| ID:v1 DECREMENTO:v2
| ID:v1 ASIGNACION:v2 s59:v3
;
s59 ::= s59:v1 MAS s59:v2
| s59:v1 MENOS s59:v2
| PARENTESIS_A:v1 s59:v2 PARENTESIS_C:v3
| s61:v1
| error                                             {:System.out.println("Se esperaba un valor");:}
;
s61::= ID:v1
|ENTERO:v1
|DECIMAL:v1
;
//GRAMATICA: FOR -->FIN

//GRAMATICA: SWITCH -->INICIO
s62::= SWITCH s63
;
s63::= PARENTESIS_A s64
| error                                             {:System.out.println("Se esperaba (");:}
;
s64::= ID s65
| error                                             {:System.out.println("Se esperaba un id");:}
;
s65::= PARENTESIS_C s66
| error                                             {:System.out.println("Se esperaba )");:}
;
s66::= LLAVE_A s67
| error                                             {:System.out.println("Se esperaba {");:}
;
s67::= s68
| error                                             {:System.out.println("Se esperaban los casos o }");:}
;
s68::= CASE s69 s68
| s75 LLAVE_C
| LLAVE_C
;
s69::= s70 s71
;
s70::= valor
| error                                             {:System.out.println("Se esperaba un valor");:}
;
s71::= DOS_PUNTOS s72
| error                                             {:System.out.println("Se esperaban dos puntos");:}
;
s72::= sentences s73
| error                                             {:System.out.println("Se esperaban las sentencias,case,break,default o }");:}
;
s73::= BREAK s74
|
;
s74::= P_COMA
| error                                             {:System.out.println("Se esperaba punto y coma");:}
;
s75::= DEFAULT s76
;
s76::= DOS_PUNTOS sentences
| error                                             {:System.out.println("Se esperaba dos puntos");:}
;
//GRAMATICA: SWITCH -->FIN

//GRAMATICA: CLASE -->INICIO
s95::= PUBLIC:v1 s96:v2                                 {:v2.setVisibilidad(Visibilidad.PUBLIC); tablaSimbolos.add(v2);:}
|s96:v1                                                 {:v1.setVisibilidad(Visibilidad.DEFAULT); tablaSimbolos.add(v1);:}
;
s96::= CLASS:v1 s97:v2                                 {:v2.setRol(Roles.CLASE); RESULT=v2;:}
;
s97::= ID:v1 {:nombreClase="Clase "+v1;:} s98          {:Termino term = new Termino(); term.setNombre(v1); ambitoActual="Clase "+v1; RESULT=term;:} 
|error                                           {:System.out.println("Se esperaba el nombre de la clase");:}
;
s98::= LLAVE_A s99
|error                                           {:System.out.println("Se esperaba {");:}
;
s99::= s7 s99
| LLAVE_C
|error                                           {:System.out.println("Se esperaban los miembro de la clase, constructor o }");:}
;
//GRAMATICA: CLASE -->FIN

//GRAMATICA: CONSTRUCTOR -->INICIO
s89::= PARENTESIS_A s90
;
s90::= parametro s91
|error                                           {:System.out.println("Se esperaban los parametros o ) ");:}
;
s91::= PARENTESIS_C s92
;
s92::= LLAVE_A s93
|error                                           {:System.out.println("Se esperaba { ");:}
;
s93::= sentences s94
|error                                           {:System.out.println("Se esperaban las sentencias o }");:}
;
s94::= LLAVE_C
;
//GRAMATICA: CONSTRUCTOR -->FIN
